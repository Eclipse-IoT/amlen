/*
 * Sample config for Amlen Proxy
 */
{
    "TraceLevel": "6,mqtt=6,tls=9,http=9",
    "TraceMessageData": 1000,          /* Max bytes of message data to show */ 
    "TraceFile": "trc.txt",            /* Location of trace file            */
    "TraceFlush": 2000,                /* Flush trace in milliseconds       */
    "LogUnitTest": 1,                  /* Allows file log destinations */
    "LogLevel": "Normal",        
    "ConnectionLogLevel": "Normal",
    "LogLocation.LocationType.DefaultLog"    : "file",
    "LogLocation.Destination.DefaultLog"     : "log.txt",
    "LogLocation.LocationType.ConnectionLog" : "file",
    "LogLocation.Destination.ConnectionLog"  : "connect.txt",
    "KeyStore": "keystore",
    "TrustStore": "truststore",
    "HttpDir": "http",
    "IOThreads": 3,                  
    
    // "JavaConfig": "com/ibm/ima/proxy/TestConfig",
    "JavaHome": "/opt/ibm/java-x86_64-80",
    // "Classpath": "/home/kwb/ism/client_proxy/bin",
	
    /* Needed to avoid listen queue overflow during connection burst */
    "TcpMaxCon": 65535,

    "MqttProxyProtocol": 4,                   /* Use proxy protocol to talk to Amlen Server */
    "MqttUseMux": 1,
    "ShutdownWait": 10000,
    "ShutdownDelay": 500,

    /*
     * Define one or more endpoints.  Each must have a unique port.
     */
    "Endpoint": {
        "mqtt": {
            "Port": 1883,                     /* Port number                                     */
            "Interface": "*",                 /* Listen to all interfaces                        */  
            "ClientClass": "iot2"             /* Separator in clientID between tenant and device */
        },
        "mqtts": {
            "Port": 8883,                     /* Port number                                     */
            "Interface": "*",                 /* Interface address or * for all                  */
            "ClientClass": "iot2",            /* Separator in clientID between tenant and device */
            "Secure": false,                  /* Allows both secure and non-secure connection    */
            "UseClientCertificate": true,     /* Ask for user certificates                       */
            "UseClientCipher": false,         /* If true honor the cipher order from the client  */
            "Ciphers": "Fast",                /* Selector for cipher suites (Fast, Best, Medium) */
            "Method": "TLSv1",                /* Mininum TLS protocol (TLSv1, TLSv1.1, TLSv1.2, TLSv1.3)  */
            "Protocol": "mqtt",               /* Allowed protocols                               */
            "MaxMessageSize": 4194304,        /* Max message size                                */
            "Certificate": "proxy.crt",
            "Key": "proxy.key"
        },
        "admin": {
            "Port": 9951,
            "Interface": "*",
            "Protocol": "admin",
            "Secure": true,
            "Ciphers": "Fast",                /* Selector for cipher suites (Fast, Best, Medium) */
            "Method": "TLSv1.2",              /* Mininum TLS protocol (TLSv1, TLSv1.1, TLSv1.2, TLSv1.3)  */
            "Authentication": "Basic",        /* Basic = send 401 challenge if no userID given */
            "Certificate": "kwbtest.crt",
            "Key": "kwbtest.pw.key",
            "KeyPassword": "nowisthetime",
            "EnableAbout": true
        }
    },

    /*
     * Define tenants
     */
    "Tenant": {
        /* Null tenant to allow flowthru */
        "": {
            "Enabled": true,            /* This entry is enabled.  default=true                         */
            "Server": "Server5",        /* Server name of the MessageSight server.  required            */
            "Port":   16109,            /* Port of the MessageSight endpoint. required                  */
            "AllowDurable": true,       /* Allow cleansession=0.  default=false                         */
            "AllowSysTopic": true,      /* Allow subscribe to topics starting with $SYS.  default=false */
            "AllowAnonymous": true,     /* Allow connections with no user/password and not user cert. default=false */ 
            "CheckUser": false,         /* Check user / password in the proxy.  default=true            */    
            "AllowShared": false,       /* Allow shared subscription. default=false                     */
            "MaxConnections": 1000000,  /* Maximum connections allowed.  default=unlimited              */
            "MaxQoS": 2,                /* Maximum quality of service.  default=2                       */
            "ChangeTopic": "iot2",      /* Insert tenant name by iot1 rules                             */ 
            "User": {                   /* Users only for this tenant                                   */
                /* The password for both the these is password */
                "kwb":  { "Password": "=QKh5rQHNBoqm48SVGGvIkcZcq70ZVP7tk24YxYNsBEI=" },
                "user": { "Password": "=0hRDkZDpoF+e0sLJrgMpv7c2xeyApDR/6DWWzD8JfWI=" },
            }
        },
        "fred": {
            "Server": "Server5",         /* Server name of the MessageSight server.  required            */
            "Port":   16109,             /* Port of the MessageSight endpoint. required                  */
            "AllowDurable": true,        /* Allow cleansession=0.  default=false                         */
            "MaxQoS": 2,                 /* Maximum quality of service.  default=2                       */
            "RequireSecure": true,       /* Require a secure connection. default=false                   */
            "RequireCertificate": false, /* Require a certificate , default=false                        */
            "RequireUser": false,        /* Require a username, even with a certificate. default=false   */
            "CheckUser": false,          /* Check the user in the proxy, default=true                    */
            "MaxConnections": 30,        /* Maximum connections for this tenant.  default=unlimited      */
            "CheckTopic": "iot2"         /* Check the topic by the iot1 rules                            */ 
        },
        /* Another tenant which allows most anything */
        "sam": {
            "Server": "Server5",
            "Port":   16109,
            "Enabled": false,
            "AllowDurable": true,
            "MaxQoS": 2,
            "RequireSecure": false,
            "MaxConnections": 30
        }

    },
    "Server": {
        "Server5": {
            "Address": [ "10.10.0.5" ],
            "Port": 16109,
            "Monitor": true,
        }
    },
    /* A user entry here will be global (for all tenants) */ 
    "User": {
        "admin": { "Password": "password" }
    }
}

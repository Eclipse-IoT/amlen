<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE concept PUBLIC  "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<concept id="tr00004_" xml:lang="en-us">
<title>Messages do not arrive</title>
<shortdesc>There are several common reasons why messages might not
arrive.</shortdesc>
<conbody>
<section><title>Are the messages sent?</title><p>If messages are not
arriving, the cause might be that the messages are not sent. For more
information about diagnosing why messages are not sent, see <xref
href="tr00003_.dita"></xref>.</p></section>
<section><title>Is the message reliability level too low?</title><p>If
the message is published with a message reliability level of <codeph>at
most once</codeph>, the message might not arrive. To ensure that messages
arrive, you must use the <codeph>at least once</codeph>, or the <codeph>exactly
once</codeph> reliability level. For more information about message
delivery, and message reliability, see <xref format="dita"
href="../Planning/ov00102_.dita" scope="local" type="concept"></xref>.</p></section>
<section><title>Is the topic subscription string correct?</title><p>If
an application subscribes to a topic that does not exactly match the
topic that the message was published to, the message does not arrive.</p><p>Check
that the publication and subscription topic strings match. Make any
necessary changes, and try publishing the message again.</p></section>
<section><title>Is the topic string valid?</title><p>If an invalid
topic string is specified, an application cannot subscribe to the
topic. There are a number of ways in which the topic string can be
invalid. For more information about valid topic strings, see <xref
format="dita" href="../Overview/ov00032.dita#ov00032/exStrings"
scope="local" type="table"></xref>.</p></section>
<section><title>Does the messaging policy allow subscription?</title><p>When
you create a messaging policy, you can restrict whether an application
can publish or subscribe to a topic string. The restriction can be
based on one or more of the following values: IP address, client ID,
messaging user ID, messaging group, or the client certificate used.
If messages are not arriving, the cause might be that the messaging
policy does not allow the application to subscribe.</p><p>Check the
logs for messages that indicate the messaging policy does not allow
the subscription. To resolve the problem, connect the application
to an endpoint with messaging policies that allow the subscription.
Alternatively, change the messaging policy to allow the application
to subscribe. For more information about configuring messaging policies,
see <xref format="dita" href="../Administering/ad00360_.dita"
otherprops="NOTbeta" scope="local"></xref>.</p></section>
<section><title>Does the messaging policy allow the message to be
received?</title><p>When you create a messaging policy, you can restrict
whether an application can send, receive, or browse a queue. The restriction
can be based on one or more of the following values: IP address, client
ID, messaging user ID, messaging group, or the client certificate
used. If messages are not arriving, the cause might be that the messaging
policy does not allow the application to receive the message.</p><p>Check the logs for messages that indicate the messaging policy does not allow the application to
receive the message. To resolve the problem, connect the application to an endpoint with messaging
policies that allow the application to receive the message. Alternatively, change the messaging
policy to allow the application to receive the message. For more information about configuring
messaging policies, see <xref format="dita" href="../Administering/ad00360_.dita"
otherprops="NOTbeta" scope="local"/>.</p></section>
<section><title>Has the maximum topic depth been exceeded?</title><p><ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> has a maximum
topic depth of 32 levels. If you publish a message to a topic string
that exceeds this depth, the message is not published. Depending on
the protocol that is used, the publish can seem to succeed, but the
message does not arrive.</p><p>To resolve the problem, you must reduce
the depth of the topic string.</p></section>
<section><title>Did the message timeout during transmission?</title><p>If
a message is not fully transmitted to an MQTT client within 60 seconds,
the message times out. After the timeout, the timeout value is doubled
and the message is retransmitted with a DUP flag. If an ACK is received
by <ph conref="../TextEntities.dita#TextEntities/ISM"></ph>, the retransmission
is canceled. This timeout value cannot be configured by the user,
and applies only to subscriptions of QoS=1 or QoS=2.</p><p>Therefore,
in situations where large messages are being transmitted, or when
client applications are experiencing severe latency, it is possible
that messages do not arrive. In rare instances, the client might receive
duplicate messages.</p><p>To resolve the problem, wait for the message
transmission to complete, and if possible, reduce the latency of the
client application.</p></section>
<section><title>Do the messages match the selector criteria?</title><p>With
JMS, you can specify a message selector when you create a subscription.
If the messages do not match the message selector, messages do not
arrive. If a message selector is used, ensure that it is specified
correctly.</p></section>
<section><title>Are many clients sharing the same subscription on
a single connection?</title><p>If large numbers of consumers are created
on a single connection, the system performance can be impacted. This
performance impact can result in a delay in receiving messages. </p></section>
<section><title>Is <codeph>Max Messages Behavior</codeph> set to <codeph>Discard
Old Messages</codeph>?</title><p>If <codeph>Max Messages Behavior</codeph> is
set to <codeph>Discard Old Messages</codeph>, some messages might
not arrive.</p><p><codeph>Max Messages Behavior</codeph> is an option
in a messaging policy that determines what happens when the buffer
for a subscription is full. That is, when the buffer for a subscription
reaches the <codeph>Max Messages</codeph> value. If <codeph>Max Messages
Behavior</codeph> is set to <codeph>Discard Old Messages</codeph>,
and the buffer for a subscription is full, a percentage of old, undelivered
messages are discarded. The quality of service, persistence, or priority
of the message does not prevent a message from being discarded.</p><p>To
resolve the problem, and ensure that all messages are received by
an application, set <codeph>Max Messages Behavior</codeph> to <codeph>Reject
New Messages</codeph>.</p></section>
<section><title>Is the value of <parmname>MaxMessageMaxTimeToLive</parmname> set
too low?</title><p>If the value of the <parmname>MaxMessageMaxTimeToLive</parmname> parameter
on the messaging policy is set too low, some messages might not arrive.</p><p><parmname>MaxMessageMaxTimeToLive</parmname> is
a parameter in a messaging policy that specifies the maximum time
that a published or sent message can exist for in <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph>. The publishing
application can also set a value for message expiry time. The time
that is set for message expiry is the lower of the value set in <codeph>MaxMessageTimeToLive</codeph> and
the value set by the application.</p><?Pub Caret 164?><p>You might
need to adjust the value of the <parmname>MaxMessageMaxTimeToLive</parmname> parameter
or the value set in the application so that messages can exist for
longer in <ph conref="../TextEntities.dita#TextEntities/ISM"></ph>. </p></section>
<section><title>Are expired messages arriving?</title><p>Ensure that
client and server times are synchronized in order to minimize the
possibility of expired messages being received. You might also need
to adjust the value of the <parmname>MaxMessageMaxTimeToLive</parmname> parameter
or the value set in the application. </p></section>
<section> <title>Is your topic filter correct and does it match your
messaging policies?</title> <p>If you are subscribing to a topic with
an MQTT global-shared subscription, and messages do not arrive, the
problem might be the topic filter. See <xref format="dita"
href="../Security/se00019_.dita" scope="peer" type="concept">Topic
filters for MQTT global-shared durable subscriptions</xref> for more
information about configuring topic messaging policies for use with
MQTT global-shared subscriptions.</p> </section>
</conbody>
<related-links>
<link href="tr10000_.dita"></link>
<link href="tr00001_.dita"></link>
<link href="tr00008_.dita"></link>
<link href="tr00003_.dita"></link>
<link href="tr00009_.dita"></link>
<link href="tr00010_.dita"></link>
<link href="tr00002_.dita"></link>
<link href="tr00005_.dita"></link>
<link href="admin_messagecatalog.dita"></link>
</related-links>
</concept>
<?Pub *0000009103?>

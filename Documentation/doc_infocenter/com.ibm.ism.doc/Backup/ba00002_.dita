<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<task id="ba00002_" xml:lang="en-us">
<title>Restoring the <ph conref="../TextEntities.dita#TextEntities/ISM"></ph> server
from a backup in the same environment</title>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. To enable the tags, right-click, select Refactoring > Toggle Comment.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc>System administrators can restore the <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> server by using
backed-up data in the same environment in which the backup operation
was performed.</shortdesc>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<taskbody>
<prereq> <ul>
<li>You can restore the backup configuration and store only to the <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> software level
that is greater than, or equal to, the <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> software level
that the file was created with. That is, you cannot use a backup file
that was created for a later version of <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> to restore to
an earlier version of server.</li>
<li>As part of the restore process, you must clean the store unless
you are using a backup of the store for this operation. Cleaning the
store deletes all persistent data, including messages, subscriptions,
and client states.</li>
<li>MQTT quality of service levels of message delivery cannot be guaranteed.</li>
<li>If you restore the store from a backed up version, consider that:<ul>
<li>All messages that were buffered in the store after the store was
backed up are lost. </li>
<li>Retained messages that were sent after the store was backed up
are lost.</li>
<li>Messages that were in store buffers when the store was backed
up, and which were sent later and discarded from the store, are restored
and resent when subscribers reconnect. They are not marked as duplicate
messages for JMS and MQTT.</li>
<li>Retained messages that were replaced after the store was backed
up are restored. The messages that replaced the retained messages
are lost.</li>
</ul></li>
<li>The commands must be capitalized as shown, and must use the double
quotation marks as shown.</li>
</ul> </prereq>
<steps>
<step><cmd>Check that the <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> server is running
by using the <ph conref="../TextEntities.dita#TextEntities/ISM"></ph> REST
API GET method with the following URI:</cmd><info> <codeblock>http://&lt;admin-endpoint-IP:port>/ima/v1/service/status/</codeblock> </info>
</step>
<step><cmd>Set the <ph conref="../TextEntities.dita#TextEntities/ISM"></ph> server
to maintenance mode by using the <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> REST API POST
method with the following URI:</cmd><info> <codeblock>http://&lt;admin-endpoint-IP:port>/ima/v1/service/restart</codeblock> <p>Provide
configuration data in the payload of the POST method by using the
following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>:</p> <codeblock>
{    
  "Service": "Server",
  "Maintenance": "start"
}</codeblock> </info></step>
<step><cmd>When the server is in maintenance mode, use your standard
system tools to restore the contents of the backup file to the appropriate
directories:</cmd><info> <ul>
<li><filepath>var/messagesight/data</filepath></li>
<li><filepath>var/messagesight/store</filepath></li>
</ul> <note>If you are operating in a Docker environment, ensure that
you mount these directories on the host volume or volumes and restore
the contents of the backup file to the corresponding host directory
or directories.</note> </info></step>
<step><cmd>Restart the server in production mode by using the <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> REST API POST
method with the following URI:</cmd><info> <codeblock>http://&lt;admin-endpoint-IP:port>/ima/v1/service/restart/</codeblock> <p>Provide
configuration data in the payload of the POST method by using the
following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>:</p> <codeblock>
{    
  "Service": "Server",
  "Maintenance": "stop"
}</codeblock> </info></step>
</steps>
<example>The following example shows creating a backup of the <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> server:<p>Check
that the server is running:<screen>[admin@localhost ~]$ curl -X GET http://127.0.0.1:9089/ima/v1/service/status
{ 
  "Version":"v1",
  "Server": {
    "Name": "TestSystem:9089",
    "UID": "aFWxYf32",
    "Status": "Running",
    "State": 1,
    "StateDescription": "Running (production)",
    "ServerTime": "2016-03-04T14:46:53.081Z",
    "UpTimeSeconds": 4134,
    "UpTimeDescription": "0 days 1 hours 8 minutes 54 seconds",
    "Version": "2.0 20160304-0400",
    "ErrorCode": 0,
    "ErrorMessage": ""
  },
  "Container": {
    "UUID":"034c91ce828a4f5c2c21d7cd7f04628368b63bd308825ec2d9dab5096ff04ca0"
  },
  "HighAvailability": {
    "Status": "Inactive",
    "Enabled": false
  },  
  "Cluster": {
    "Status": "Inactive",
    "Enabled": false
  },  
  "Plugin": {
    "Status": "Inactive",
    "Enabled": false
  },  
  "MQConnectivity": {
    "Status": "Active",
    "Enabled": true
  },  
  "SNMP": {
    "Status": "Inactive",
    "Enabled": false
  }
}

</screen></p><p>Set the server to maintenance mode:<screen>[admin@localhost ~]$ curl -X POST \
>    -H  'Content-Type: application/json'  \
>    -d  '{
>          "Service": "Server",
>            "Maintenance": "start",
>           }
>   '   \
> http://127.0.0.1:9089/ima/v1/service/restart

[admin@localhost ~]$ curl -k -H "Content-Type: application/json" -X GET  
https://127.0.0.1:9089/ima/v1/service/status
{
  "Version":"v1",
  "Server": {
    "Name": "TestSysem:9089",
    "UID": "aFWxYf32",
    "Status": "Running",
    "State": 9,
    "StateDescription": "Running (maintenance)",
    "ServerTime": "2016-03-04T14:46:53.081Z",
    "UpTimeSeconds": 4140,
    "UpTimeDescription": "0 days 1 hours 8 minutes 57 seconds",
    "Version": "2.0 20160304-0400",
    "ErrorCode": 0,
    "ErrorMessage": ""
  },
  "Container": {
    "UUID":"034c91ce828a4f5c2c21d7cd7f04628368b63bd308825ec2d9dab5096ff04ca0"
  },
  "HighAvailability": {
    "Status": "Inactive",
    "Enabled": false
  },
  "Cluster": {
    "Status": "Inactive",
    "Enabled": false
  },
  "Plugin": {
    "Status": "Inactive",
    "Enabled": false
  },
  "MQConnectivity": {
    "Status": "Inactive",
    "Enabled": false
  },
  "SNMP": {
    "Status": "Inactive",
    "Enabled": false
  }
}

  
</screen></p><p>Restore the contents of the backed-up files to <filepath>var/messagesight/data</filepath> and <filepath>var/messagesight/store</filepath> as appropriate:<screen>[admin@localhost ~]$ sudo unzip messagesight-11042015-0933.zip -d/
Archive:  messagesight-11042015-0933.zip   
  creating: /mnt/messagesight/data/   
  creating: /mnt/messagesight/data/config/[messagesight-11042015-0933.zip] mnt/messagesight/data/config/accepted.json password: 
extracting: /mnt/messagesight/data/config/accepted.json 
extracting: /mnt/messagesight/data/config/store.init 
extracting: /mnt/messagesight/data/config/testLicense.json 
extracting: /mnt/messagesight/data/config/ILMT_PROD.def 
extracting: /mnt/messagesight/data/config/ILMT_NONPROD.def  
inflating: /mnt/messagesight/data/config/IBMIoTMessageSightServer.service  
inflating: /mnt/messagesight/data/config/mqclient.ini  
inflating: /mnt/messagesight/data/config/server.cfg  
inflating: /mnt/messagesight/data/config/vmprofile.cfg 
extracting: /mnt/messagesight/data/config/MessageSightInstance.inited 
extracting: /mnt/messagesight/data/config/.serverCFGUpdated  
inflating: /mnt/messagesight/data/config/server_dynamic.json.org  
inflating: /mnt/messagesight/data/config/server_dynamic.json.bak  
inflating: /mnt/messagesight/data/config/server_dynamic.json   
 creating: /mnt/messagesight/data/certificates/   
 creating: /mnt/messagesight/data/certificates/keystore/  
inflating: /mnt/messagesight/data/certificates/keystore/AdminDefaultKey.pem  
inflating: /mnt/messagesight/data/certificates/keystore/AdminDefaultCert.pem   
 creating: /mnt/messagesight/data/certificates/LDAP/   
 creating: /mnt/messagesight/data/certificates/MQC/   
 creating: /mnt/messagesight/data/certificates/truststore/   
 creating: /mnt/messagesight/data/certificates/LTPAKeyStore/   
 creating: /mnt/messagesight/data/certificates/OAuth/   
 creating: /mnt/messagesight/data/certificates/PSK/   
 creating: /mnt/messagesight/store/  
 creating: /mnt/messagesight/store/com.ibm.ism/ 
extracting: /mnt/messagesight/store/com.ibm.ism/com.ibm.ism.0.store.lock   
 creating: /mnt/messagesight/store/persist/  
inflating: /mnt/messagesight/store/persist/PState  
inflating: /mnt/messagesight/store/persist/CPM_0_1  
inflating: /mnt/messagesight/store/persist/CPG_0_1  
inflating: /mnt/messagesight/store/persist/ST_0_0  
inflating: /mnt/messagesight/store/persist/ST_1_0  
inflating: /mnt/messagesight/store/persist/ST_0_1  
inflating: /mnt/messagesight/store/persist/ST_1_1</screen></p><p>Restart
the server in production mode:<screen>[admin@localhost ~]$ curl -X POST \
>    -H  'Content-Type: application/json'  \
>    -d  '{
>          "Service": "Server",
>            "Maintenance": "stop",
>           }
>   '   \
> http://127.0.0.1:9089/ima/v1/service/restart
</screen></p><p>Check that the server is running in production mode::<screen>[admin@localhost ~]$ curl -k -H "Content-Type: application/json" -X GET
 https://127.0.0.1:9089/ima/v1/service/status 
 "Version":"v1",
  "Server": {
    "Name": "TestSysem:9089",
    "UID": "aFWxYf32",
    "Status": "Running",
    "State": 1,
    "StateDescription": "Running (production)",
    "ServerTime": "2016-03-04T14:46:53.081Z",
    "UpTimeSeconds": 24,
    "UpTimeDescription": "0 days 0 hours 0 minutes 24 seconds",
    "Version": "2.0 20160304-0400",
    "ErrorCode": 0,
    "ErrorMessage": ""
  },
  "Container": {
    "UUID":"034c91ce828a4f5c2c21d7cd7f04628368b63bd308825ec2d9dab5096ff04ca0"
  },
  "HighAvailability": {
    "Status": "Inactive",
    "Enabled": false
  },
  "Cluster": {
    "Status": "Inactive",
    "Enabled": false
  },
  "Plugin": {
    "Status": "Inactive",
    "Enabled": false
  },
  "MQConnectivity": {
    "Status": "Inactive",
    "Enabled": false
  },
  "SNMP": {
    "Status": "Inactive",
    "Enabled": false
  }
}

</screen></p></example>
</taskbody>
<related-links>
<link href="../Reference/BackupCmd/cmd_export_serverconfig.dita"></link>
<link href="../Reference/BackupCmd/cmd_import_serverconfig.dita"></link>
</related-links>
</task><?Pub Caret -1?>
<?Pub *0000011201?>

<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE concept PUBLIC  "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<concept id="devjmsapp" xml:lang="en-us">
<title>Developing JMS applications</title><?Pub Caret -2?>
<shortdesc>The <tm tmtype="tm" trademark="Java">Java</tm> Message
Service (JMS) is a <tm tmtype="tm" trademark="Java">Java</tm> API
that allows applications to create, send, receive, and read messages.
The JMS API defines a common set of interfaces and associated semantics
that allow programs that are written in the <tm tmtype="tm"
trademark="Java">Java</tm> programming language to communicate with
other messaging implementations.</shortdesc>
<conbody>
<section><p>The <ph conref="../TextEntities.dita#TextEntities/ISM"/> resource adapter is available as part of
the JMS client download. The JMS client can be obtained from the <xref format="html"
href="https://www.ibm.com/developerworks/downloads/iot/messagesight/index.html" scope="external"><ph
conref="../TextEntities.dita#TextEntities/ISM_prev_prev"/> page</xref> on <tm tmtype="reg"
trademark="developerWorks">developerWorks</tm>.</p></section>
<section><title>Why use JMS?</title><p> There are benefits to using
JMS as the API to write an <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> ready application.
Some advantages derive from JMS being an open standard with multiple
implementations. Using an open standard provides the following benefits:</p><ul>
<li>The protection of investment, both in skills and application code.</li>
<li>The availability of people skilled in JMS application programming.</li>
<li>The ability to plug in different JMS implementations to fit different
requirements.</li>
<li>JMS can support more message types than MQTT. Additionally, JMS
messages can be configured to include more information than MQTT messages
by using message properties. This extra information can be useful
when more complex business logic is required in enterprise messaging
applications.</li>
<li>JMS supports message selectors. Message selectors enable JMS consumer
applications to filter the messages that are received from a topic
or a queue.</li>
</ul><p>JMS applications that use <ph conref="../TextEntities.dita#TextEntities/ISM"
/> extensions to the JMS 1.1 specification can be compiled and run only with <ph
conref="../TextEntities.dita#TextEntities/ISM"
/> JMS client implementations. For example, support in <ph
conref="../TextEntities.dita#TextEntities/ISM"
/> for shared subscriptions is an extension to version 1.1 of the JMS specification. If you use this feature in your JMS applications, you will need to compile these applications using the <ph
conref="../TextEntities.dita#TextEntities/ISM"/> JMS client.</p><note>When
you develop your client applications, do not use the <codeph>${ClientID}</codeph>, <codeph>${UserID}</codeph>,
or <codeph>${CommonName}</codeph> keywords in your applications. These
keywords are used in connection policies and messaging policies to
control access to <ph conref="../TextEntities.dita#TextEntities/ISM"></ph>.
Using these keywords in your application can lead to policy validation
failures.</note><p>In addition to support for stand-alone JMS client applications (<tm tmtype="tm" trademark="Java"
>Java</tm> SE applications), <ph conref="../TextEntities.dita#TextEntities/ISM"
/> provides a JMS resource adapter to support <tm tmtype="tm" trademark="Java"
>Java</tm> EE applications on <ph conref="../TextEntities.dita#TextEntities/was"
/>. For more information about the JMS resource adapter, see <xref format="dita"
href="../Administering/workingwithjmsra.dita" scope="peer" type="concept"><ph
conref="../TextEntities.dita#TextEntities/ISM"/> resource adapter</xref>.</p></section>
</conbody>
<?tm 1413224018 9?>
</concept>
<?Pub *0000003904?>

<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<task id="securingjmsconnections" xml:lang="en-us">
<title>Securing <ph conref="../TextEntities.dita#TextEntities/ISM"/> JMS client by using <tm
tmtype="tm" trademark="Java">Java</tm> runtime environment global properties</title>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. Use Edit > Un Comment to have the tags made live.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc>You can configure secure connections for the <ph
conref="../TextEntities.dita#TextEntities/ISM"/> JMS client by using <tm tmtype="tm"
trademark="Java"
>Java</tm> runtime environment (JRE) global properties. This configuration approach affects all outbound connections from the process.</shortdesc>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<taskbody>
<context><p>The <ph conref="../TextEntities.dita#TextEntities/ISM"/> JMS client uses the standard <tm
tmtype="tm" trademark="Java"
>Java</tm> Secure Socket Extension (JSSE) that all supported JREs provide for making Transport Layer Security (TLS) connections. For information about JSSE, see the <xref
href="http://www.oracle.com/technetwork/java/index.html" scope="external" format="html"
>JSSE documentation</xref>. For information about configuring secure connections for <tm tmtype="tm"
trademark="Java">Java</tm> EE clients that use the <ph
conref="../TextEntities.dita#TextEntities/ISM"/> resource adapter, see <xref format="dita"
href="../Administering/tlssecurityforjmsra.dita" scope="local" type="concept"
>Transport Layer Security for the <ph conref="../TextEntities.dita#TextEntities/ISM"
/> resource adapter</xref>.</p><?Pub
Caret 146?><p>For an <ph conref="../TextEntities.dita#TextEntities/ISM"></ph> JMS
client connection factory that requires secure connections to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph>, you typically
must set the following <codeph>javax.net.ssl</codeph> system properties:</p><codeblock>-Djavax.net.ssl.keyStore=&lt;keyfile_name>
-Djavax.net.ssl.keyStorePassword=&lt;keyfile_password>
-Djavax.net.ssl.trustStore=&lt;trustfile_name>
-Djavax.net.ssl.trustStorePassword=&lt;trustfile_password></codeblock><p>You
must keep in mind that these command line options can be visible to
others.  For this reason, you might not want to set your password
parameters in this way.  You can set some or all of these values programmatically
by using the following sample code programmatic settings:</p><codeblock>System.setProperty("javax.net.ssl.keyStore", "/path/to/keystore");
System.setProperty("javax.net.ssl.keyStorePassword", "keyStorePassword)";
System.setProperty("javax.net.ssl.trustStore", "/path/to/truststore");
System.setProperty("javax.net.ssl.trustStorePassword", "trustStorePassword");
</codeblock><p>If you set password parameters programmatically, the
applications prompt users for passwords so that the passwords do not
need to be passed on the command line.</p></context>
<steps>
<step><cmd>Obtain the necessary key and truststore files.</cmd></step>
<step><cmd>Set the appropriate <codeph>javax.net.ssl</codeph> system
properties.</cmd></step>
</steps>
</taskbody>
<?tm 1413224019 5?>
</task>
<?Pub *0000003701?>

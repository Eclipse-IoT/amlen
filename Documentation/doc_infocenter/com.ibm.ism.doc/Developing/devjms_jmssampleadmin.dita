<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<reference id="devjms_jmssampleadmin" xml:lang="en-us">
<title>The JMSSampleAdmin application</title>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. Use Edit > Un Comment to have the tags made live.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc>The JMSSampleAdmin application provides a sample tool for
creating <ph conref="../TextEntities.dita#TextEntities/ISM"></ph> administered
objects for JMS. It demonstrates how to use <apiname>ImaJmsFactory</apiname> to
create objects, and how to use ImaProperties to configure objects.</shortdesc>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<refbody>
<section><p>The JMSSampleAdmin application is in the <codeph>com.ibm.ima.samples.jms</codeph> package.
You can use the JMSSampleAdmin application to create, configure, and
store JMS administered objects for <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph>. The application
reads <ph conref="../TextEntities.dita#TextEntities/ISM"></ph> JMS
administered object configurations from an input file and  populates
a JNDI repository. This application can populate either LDAP or  file-based
JNDI repositories. </p><p>You can run the JMSSampleAdmin application
by using the following command:<codeblock>java com.ibm.ima.samples.jms.JMSSampleAdmin [options] [configfile]</codeblock>Where:</p><dl>
<dlentry>
<dt><parmname>options</parmname></dt>
<dd>are any combination of the following command-line options:<dl>
<dlentry>
<dt><parmname>-c</parmname></dt>
<dd>The JNDI provider URL.</dd>
<dd>The JMSSampleAdmin application supports file system JNDI by using
the file: scheme and also supports LDAP JNDI by using the ldap: scheme. </dd>
<dd><p></p></dd>
<dd>In the following example, administered objects are created in
a file system JNDI repository by using input from <codeph>AdminObjects.config</codeph>.
The subdirectory or folder that is named <codeph>MyJndi</codeph> must
exist.</dd>
<dd><codeblock>java com.ibm.ima.samples.jms.JMSSampleAdmin -c file:///c:/test/MyJndi c:\test\AdminObjects.config</codeblock><p>In
the following example, the objects from an existing LDAP JNDI repository
on host <codeph>myldaphost</codeph> are printed to the console.</p><codeblock>java com.ibm.ima.samples.jms.ImaJmsAdmin -c ldap://myldaphost.mycompany.com/cn=Manager,o=jndiTest -l</codeblock></dd>
</dlentry><dlentry>
<dt><parmname>-h</parmname> or <parmname>-?</parmname></dt>
<dd></dd>
</dlentry><dlentry>
<dt></dt>
<dd> Print usage output.</dd>
</dlentry><dlentry>
<dt><parmname>-l</parmname> </dt>
<dd> List <ph conref="../TextEntities.dita#TextEntities/ISM"></ph> JMS
objects in the JNDI repository. These objects are printed to the console.</dd>
</dlentry><dlentry>
<dt><parmname>-u</parmname></dt>
<dd>The JNDI provider userid.</dd>
</dlentry><dlentry>
<dt><parmname>-p</parmname></dt>
<dd>The JNDI provider password.</dd>
</dlentry><dlentry>
<dt><parmname>-n</parmname></dt>
<dd>Name prefix for creating and looking up objects.</dd>
</dlentry><dlentry>
<dt><parmname>-v</parmname></dt>
<dd>Verbose output.</dd>
</dlentry><dlentry>
<dt><parmname>-w</parmname></dt>
<dd>Do not show warnings.</dd>
</dlentry></dl><?Pub Caret 876?></dd>
</dlentry><dlentry>
<dt><parmname>configfile</parmname></dt>
<dd>The <parmname>configfile</parmname> argument is an input file
that contains the required configuration data for the administered
objects to be created. The <parmname>configfile</parmname> argument
is required for all cases except when the <parmname>-h</parmname>, <parmname>-?</parmname>,
or <parmname>-l</parmname> options are used.</dd>
</dlentry></dl><p>The following example <parmname>configfile</parmname> content
shows content that can be used to create or update a connection factory
administered object and a topic destination administered object. The
JNDI name for each object appears as the second parameter inside the
square brackets. This JNDI name is the name that is used to look up
the object when the object is to be used (or updated).</p><codeblock># Sample config
[connection connFactory1]
Server = 127.0.0.1
Port = 1883

[topic topic1]
Name = topic1</codeblock></section>
</refbody>
</reference>
<?Pub *0000004743?>

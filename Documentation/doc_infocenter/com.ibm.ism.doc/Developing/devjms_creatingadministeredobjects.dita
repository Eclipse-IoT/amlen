<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<task id="devjms_creatingadministeredobjects" xml:lang="en-us">
<title>Creating administered objects</title><?Pub Caret -2?>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. Use Edit > Un Comment to have the tags made live.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc>To use JMS applications with <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph>, you must first
create <ph conref="../TextEntities.dita#TextEntities/ISM"></ph> administered
objects for JMS.</shortdesc>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<taskbody>
<steps>
<step id="createadmino"><cmd>Create the administered object.</cmd><info>Use
the <apiname>ImaJmsFactory</apiname> class to create the <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> administered
objects for JMS. Use the methods in this class to create connection
factory and destination objects for your JMS applications.</info></step>
<step><cmd>Configure the administered object. </cmd><info>Use the <apiname>ImaProperties</apiname> interface
to configure the connection factory and destination objects. Cast
the administered object created in step <xref
href="#devjms_creatingadministeredobjects/createadmino"></xref> to <apiname>ImaProperties</apiname>.
Then use the appropriate put methods to set either <apiname>ConnectionFactory</apiname> properties
or <apiname>Destination</apiname> properties.</info></step>
<step><cmd>Validate the configured administered object.</cmd><info>Once
all desired properties have been set, use the <apiname>ImaProperties</apiname> validate
method to assure the administered object is correctly configured.</info>
</step>
<step><cmd>Store the configured administered objects in a JNDI repository.</cmd>
</step>
</steps>
<example><ul>
<li>The following example creates and configures a connection factory administered object.<screen>// Create the connection factory using the ImaJmsFactory class
ConnectionFactory cf = ImaJmsFactory.createConnectionFactory();

// Cast the connection factory object to ImaProperties
ImaProperties props = (ImaProperties)cf;

// Set the properties
// You must configure the connection port where the <ph conref="../TextEntities.dita#TextEntities/ISM"/> is listening for
// connections from JMS clients
props.put("Port", "1883");

// You must also configure the host names (or IP addresses) where the <ph conref="../TextEntities.dita#TextEntities/ISM"/> is running
// For high availability configurations, include the list of host names (or IP addresses)
props.put("Server", "server1.company.com, server2.company.com");

// If you are using secure connections, then you must set Protocol to tcps
props.put("Protocol", "tcps");

// Validate the configured object. A null return means that the properties are valid.
ImaJmsException [] errstr = props.validate(ImaProperties.WARNINGS);
if (errstr == null) {
    // If there are no errors, store the object in a JNDI repository
    InitialContext ctx;
    Hashtable env = new Hashtable();
    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");
    env.put(Context.PROVIDER_URL, "ldap://server3.company.com/o=jndiTest");
    try {
        ctx = new InitialContext(env);

        // Bind the connection factory to a name
        ctx.rebind("ConnName", cf);
    } catch (Exception e) {
        System.out.println("Unable to open an initial context: " + e);
    }
} else {
    // Display the validation errors
    for (int i=0;  i&lt;errstr.length; i++)
        System.out.println(""+errstr[i]);
}</screen></li>
<li>The following example creates and configures a destination administered
object:<screen>// Create the destination using the ImaJmsFactory class
// This example creates a topic destination.
// A queue destination can be created with createQueue(String name)
Topic topicdest = ImaJmsFactory.createTopic("mytopic");

// Cast the destination object to ImaProperties
ImaProperties props = (ImaProperties)topicdest;

// Optional - Set the properties
// The only required property for a destination is name and that property value is
// set automatically with createTopic
// For this example, we will not set any properties

// As a best practice, validate the object. A null return means that the properties are valid.
ImaJmsException [] errstr = props.validate(ImaProperties.WARNINGS);
if (errstr == null) {
    // If there are no errors, store the object in a JNDI repository
    InitialContext ctx;
    Hashtable env = new Hashtable();
    env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");
    env.put(Context.PROVIDER_URL, "ldap://server3.company.com/o=jndiTest");
    try {
        ctx = new InitialContext(env);

        // Bind the connection factory to a name
        ctx.rebind("ConnName", cf);
    } catch (Exception e) {
        System.out.println("Unable to open an initial context: " + e);
    }
} else {
    // Display the validation errors
    for (int i=0; i&lt;errstr.length; i++)
        System.out.println(""+errstr[i]);
}</screen></li>
</ul></example>
<postreq><p>For an example of an application that creates <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> administered
objects for JMS, see the JMSSampleAdmin application in <xref
format="dita" href="devjms_sampleapplications.dita" scope="local"
type="concept">Sample applications</xref>. </p></postreq>
</taskbody>
<related-links>
<link href="devjms_connectionfactoryproperties.dita"></link>
<link href="devjms_destinationproperties.dita"></link>
</related-links>
<?tm 1413224018 0?>
</task>
<?Pub *0000006043?>

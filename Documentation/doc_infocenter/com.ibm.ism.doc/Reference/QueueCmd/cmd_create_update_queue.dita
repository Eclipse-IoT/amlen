<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="cmd_create_update_queue" xml:lang="en-us">
	<title>Create or update a message queue</title>
	<shortdesc/>
	<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
	<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
	<refbody>
		<section>
			<title>Purpose</title>
			<p>Creates or updates a message queue. A queue is an object on which JMS applications can send and receive messages.</p>
		</section>
		<section>
			<title>URI</title>
			<p>Use the <ph conref="../../TextEntities.dita#TextEntities/ISM"
				/> REST API POST method with the following <ph
				conref="../../TextEntities.dita#TextEntities/ISM"/> configuration URI:</p>
			<p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/</codeph></p>
		</section>
		<section><title>Object configuration data</title><p>Provide Queue object configuration data in the payload of the POST method by using the following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>: </p><codeblock>
{    
  "Queue": {
    "&lt;NameOfQueue>": {
      "Description": "string",
      "AllowSend": true|false,
      "ConcurrentConsumers": true|false,
      "MaxMessages": integer
     } 
   }
}</codeblock>Where:<dl>
			<dlentry>
				<dt><varname>NameOfQueue</varname></dt>
				<dd>Required.</dd>
				<dd>Specifies a name for the queue.</dd>
				<dd>The name must not have leading or trailing spaces and cannot contain control characters, commas, double quotation marks, backslashes, or equal signs. The first character must not be a number or any of the following special characters:</dd>
				<dd><codeph>! # $ % &amp; ' ( ) * + - . / : ; &lt; > ? @</codeph></dd>
				<dd>The name cannot be the same as another queue.</dd>
			</dlentry>
			<dlentry>
				<dt>Description</dt>
				<dd>Specifies a description of the queue.</dd>
				<dd>If you do not want a description, omit <codeph>"Description":"<i>description</i>"</codeph>.</dd>
			</dlentry>
			<dlentry>
				<dt>AllowSend=true|false</dt>
				<dd>Specifies whether JMS applications can send messages to the queue. It does not stop applications from receiving messages from the queue.</dd>
				<dd>The default value is true.</dd>
			</dlentry>
			<dlentry>
				<dt>ConcurrentConsumers=true|false</dt>
				<dd>Specifies whether multiple consumers are allowed to use the queue at the same time.</dd>
				<dd>The default value is true.</dd>
			</dlentry>
			<dlentry>
				<dt>MaxMessages</dt>
				<dd>Specifies the maximum number of messages that can be put on the queue. This value is a guideline, rather than an absolute limit. If the system is running under stress, then the number of buffered messages on a queue might be slightly higher than the <codeph>MaxMessages</codeph> value.</dd>
				<dd>This value can be any number in the range 1-20000000.</dd>
				<dd>The default value is 5000.</dd>
			</dlentry>
			</dl></section>
		<section>
			<title>Usage <tm tmclass="IGNORE" tmtype="reg" trademark="Notes">Notes</tm></title>
			<ul>
				<li>Capitalization and double quotation marks must be used as shown.</li>
			</ul>
		</section>
		<section>
			<title>Related <ph conref="../../TextEntities.dita#TextEntities/RESTAPIs"/></title>
			<ul>
				<li><xref format="dita" href="../cmd_show_config.dita" scope="local" type="reference"/></li>
				<li><xref format="dita" href="cmd_delete_queue.dita" scope="local" type="reference"/></li>
			</ul>
		</section>
		<section><title>Example</title><p>The following example demonstrates creating a queue named <codeph>testQ</codeph> by using cURL. The queue uses the default values for <codeph>AllowSend</codeph> and <codeph>ConcurrentConsumers</codeph>, and sets <codeph>MaxMessages</codeph> to 1000:</p><codeblock>
curl -X POST\
   -H 'Content-Type: application/json' \
   -d '{
     "Queue": {
	"testQ": {
	"MaxMessages": 1000
      }
     }
    }
  ' \
http://127.0.0.1:9089/ima/v1/configuration/</codeblock>The following shows an example response to the POST method.<codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock></section>
	</refbody>
</reference>

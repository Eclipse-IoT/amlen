<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="cmd_create_update_oauth" xml:lang="en-us">
<title>Create or update an OAuth profile</title>
<titlealts>
<searchtitle>create or update OAuth profile</searchtitle>
</titlealts>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. To enable the tags, right-click, select Refactoring > Toggle Comment.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc/>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<refbody>
<section><title>Purpose</title>Creates or updates an OAuth profile. An OAuth profile defines the key files and URLs to use for open authorization.</section>
<section>
<title>URI</title>
<p>Use the <ph conref="../../TextEntities.dita#TextEntities/ISM"/> REST API POST method with the
        following <ph conref="../../TextEntities.dita#TextEntities/ISM"/> configuration URI:</p>
<p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/</codeph></p>
</section>
<section><title>Object configuration data</title><p>Provide OAuthProfile object configuration data in the payload of the POST method by using the following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>: </p><codeblock>
{    
  "OAuthProfile": {
    "&lt;NameOfOAuthProfile>": {
      "ResourceURL": "string",
      "KeyFileName": "string",
      "AuthKey": "string",
      "UserInfoURL": "string",
      "UserInfoKey": "string", 
      "GroupInfoKey": "string",          
      "Overwrite": true|false
     }
   }
}</codeblock>Where:<dl>
      <dlentry>
        <dt><varname>NameOfOAuthProfile</varname></dt>
        <dd>Required.</dd>
        <dd>Specifies a name for the OAuth profile.</dd>
        <dd>The name can be a maximum of 256 alphanumeric characters. The first character must not be a number. </dd>
        <dd>After the profile is created, this name cannot be changed.</dd>
      </dlentry>
      <dlentry>
        <dt>ResourceURL</dt>
        <dd>Required if you are creating an OAuth profile.</dd>
        <dd>Specifies the authorization server URL that is used to validate the access token.</dd>
        <dd>The URL must include the protocol. The protocol can be either <codeph>http</codeph> or <codeph>https</codeph>. </dd>
      </dlentry>
      <dlentry>
        <dt>KeyFileName</dt>
        <dd>Specifies the name of the SSL certificate file to use with this OAuth profile. The file must exist on <ph
          conref="../../TextEntities.dita#TextEntities/ISM"/>.</dd>
        <dd>The name can be a maximum of 255 alphanumeric characters. The first character must not be a number.</dd>
      </dlentry>
      <dlentry>
        <dt>AuthKey</dt>
        <dd>Specifies the name of the key that is used to store the access token.</dd>
        <dd>The default value is <codeph>access_token</codeph>.</dd>
      </dlentry>
      <dlentry>
        <dt>UserInfoURL</dt>
        <dd>Specifies the authorization server URL that is used to retrieve the user information.</dd>
        <dd>The URL must include the protocol. The protocol can be either <codeph>http</codeph> or <codeph>https</codeph>. </dd>
      </dlentry>
      <dlentry>
        <dt>UserInfoKey</dt>
        <dd>Specifies the name of the key that is used to store the user information.</dd>
        <dd>The name must not have leading or trailing spaces and cannot contain control characters, commas, double quotation marks, backslashes, or equal signs.</dd>
      </dlentry>
      <dlentry>
        <dt>GroupInfoKey</dt>
        <dd>Specifies the name of the key that is used to retrieve the group information.</dd>
        <dd>The name must not have leading or trailing spaces and cannot contain control characters, commas, double quotation marks, backslashes, or equal signs.</dd>
        <dd> If this parameter is specified, <ph conref="../../TextEntities.dita#TextEntities/ISM"
          /> does not retrieve group information from any other source.</dd>
      </dlentry>
      <dlentry>
        <dt>Overwrite: true|false</dt>
        <dd>Specifies whether an existing certificate and key are overwritten if they have the same name.</dd>
        <dd>The default value is false which means that an existing certificate and key are not overwritten if they have the same name.</dd>
      </dlentry>
      </dl></section>
<section>
<title>Usage <tm tmclass="IGNORE" tmtype="reg" trademark="Notes">Notes</tm></title>
<ul>
<li>The OAuth key file must be copied to <ph conref="../../TextEntities.dita#TextEntities/ISM"
          /> before it can be used in an OAuth profile. <xref format="dita"
          href="../cmd_REST_file_put.dita" scope="local" type="reference"
          /> to copy the OAuth key file.</li>
<li>After you create the OAuth profile, you must associate it with a security profile.</li>
<li>The SSL certificate must have both private and public keys.</li>
<li>Depending on the configuration of the OAuth authorization server, the value of ResourceURL and UserInfoURL can be the same.</li>
        <li>Capitalization and double quotation marks must be used as shown.</li>
</ul>
</section>
<section>
<title>Related <ph conref="../../TextEntities.dita#TextEntities/RESTAPIs"/></title>
<ul>
<li><xref format="dita" href="../cmd_REST_file_put.dita" scope="local" type="reference"/></li>
        <li><xref format="dita" href="cmd_create_update_sprofile.dita" scope="local"
          type="reference"/></li>
        <li><xref format="dita" href="../cmd_show_config.dita" scope="local" type="reference"/></li>
        <li><xref format="dita" href="../cmd_delete_config.dita" scope="local" type="reference"
          /></li>
</ul>
</section>
<section><title>Example</title>Creates an OAuth profile called "MyOAuthProfile" by using cURL:<codeblock>
curl -X POST \
   -H 'Content-Type: application/json'  \
   -d  '{ 
         "OAuthProfile": {   
           "MyOAuthProfile": {
             "ResourceURL": "http://myOAuthexample.com/home.jsp"                         
          }
        }
    }
 '  \
http://127.0.0.1:9089/ima/v1/configuration/</codeblock><p>An example response to the POST method:<codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock></p></section>
</refbody>
</reference>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="cmd_create_update_cprofile" xml:lang="en-us">
  <title>Create or update a certificate profile</title>
  <titlealts>
    <searchtitle>create or update certificate profile</searchtitle>
  </titlealts>
  <!--To optimize search results, add tags that clarify product name, target platform, or other contexts. To enable the tags, right-click, select Refactoring > Toggle Comment.-->
  <!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
  <!--Put your short description next; used for first paragraph and abstract.-->
  <shortdesc/>
  <!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
  <!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
  <refbody>
    <section><title>Purpose</title>Creates or updates a certificate profile. A certificate profile is used by a security profile to define the server certificate that is used to control Transport Layer Security (TLS).</section>
    <section>
      <title>URI</title>
      <p>Use the <ph conref="../../TextEntities.dita#TextEntities/ISM"/> REST API POST method with
        the following <ph conref="../../TextEntities.dita#TextEntities/ISM"/> configuration URI:</p>
      <p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/</codeph></p>
    </section>
    <section><title>Object configuration data</title><p>Provide CertificateProfile object configuration data in the payload of the POST method by using the following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>: </p><codeblock>
{    
  "CertificateProfile": {
    "&lt;NameOfCertificateProfile>": {
      "Certificate": "string",
      "Key": "string",
      "CertFilePassword": "string",
      "KeyFilePassword": "string",
      "Overwrite": true|false
     }
   }
}</codeblock>Where:<dl>
      <dlentry>
        <dt><varname>NameOfCertificateProfile</varname></dt>
        <dd>Required.</dd>
        <dd>Specifies a name for the certificate profile.</dd>
        <dd>The name must not have leading or trailing spaces and cannot contain control characters, commas, double quotation marks, backslashes, or equal signs. The first character must not be a number or any of the following special characters: </dd>
        <dd><codeph>! # $ % &amp; ' ( ) * + - . / : ; &lt; > ? @</codeph></dd>
        <dd>The maximum length of the name is 256 characters. </dd>
        <dd>After the profile is created, this name cannot be changed.</dd>
      </dlentry>
      <dlentry>
        <dt>Certificate</dt>
        <dd>Required if you are creating a certificate profile.</dd>
        <dd>Specifies the name of the server certificate.</dd>
        <dd>If you update the value of  <parmname>Certificate</parmname>, ensure that you also update the value of  <parmname>Key</parmname>. </dd>
      </dlentry>
      <dlentry>
        <dt>Key</dt>
        <dd>Required if you are creating a certificate profile.</dd>
        <dd>Specifies the name of the private key.</dd>
        <dd>If you update the value of  <parmname>Key</parmname>, ensure that you also update the value of  <parmname>Certificate</parmname>. </dd>
      </dlentry>
      <dlentry>
        <dt>CertFilePassword</dt>
        <dd>Specifies the server certificate password, if any.</dd>
      </dlentry>
      <dlentry>
        <dt>KeyFilePassword</dt>
        <dd>Specifies the private key password, if any.</dd>
      </dlentry>
      <dlentry>
        <dt>Overwrite: true|false</dt>
        <dd>Specifies whether an existing certificate and key are overwritten if they have the same name.</dd>
        <dd>The default value is false which means that an existing certificate and key are not overwritten if they have the same name.</dd>
      </dlentry>
      </dl></section>
    <section>
      <title>Usage <tm tmclass="IGNORE" tmtype="reg" trademark="Notes">Notes</tm></title>
      <ul>
        <li>If you enable TLS, you must create the certificate profile before you create the security profile.</li>
        <li>The server certificate and private key must be copied to <ph
          conref="../../TextEntities.dita#TextEntities/ISM"
          /> before they can be used in a certificate profile. <xref format="dita"
          href="../cmd_REST_file_put.dita" scope="local" type="reference"
          /> command to copy the certificate and key.</li>
        <li>The certificate must be a pem format certificate.</li>
        <li>If you need to replace a certificate, for example if the certificate is due to expire,
          you can upload a new certificate and associate it with the certificate profile that
          references the certificate that you need to replace. Overwrite must be set to
            <userinput>true</userinput> in the payload when you replace a certificate.</li>
        <li>Capitalization and double quotation marks must be used as shown.</li>
      </ul>
    </section>
    <section>
      <title>Related <ph conref="../../TextEntities.dita#TextEntities/RESTAPIs"/></title>
      <ul>
        <li><xref format="dita" href="../cmd_REST_file_put.dita" scope="local" type="reference"
          /></li>
        <li><xref format="dita" href="cmd_create_update_sprofile.dita" scope="local"
          type="reference"/></li>
        <li><xref format="dita" href="../cmd_show_config.dita" scope="local" type="reference"/></li>
        <li><xref format="dita" href="../cmd_delete_config.dita" scope="local" type="reference"
          /></li>
      </ul>
    </section>
    <section><title>Example</title>Creates and applies a certificate profile called "MyCertificateProfile" by using cURL:<codeblock>  
curl -X POST \
   -H 'Content-Type: application/json'  \
   -d  '{ 
           "CertificateProfile": {
            "MyCertificateProfile": {
             "Certificate": "exampleCert.pem",
             "Key": "exampleKey.pem"
           }
         }
       }
 '  \
http://127.0.0.1:9089/ima/v1/configuration/</codeblock><p>An example response to the POST method:<codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock></p></section>
  </refbody>
</reference>

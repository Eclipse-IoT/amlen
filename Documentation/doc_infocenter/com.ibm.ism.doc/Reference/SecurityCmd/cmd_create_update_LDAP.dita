<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="cmd_create_update_ldap" xml:lang="en-us">
<title>Create or update an LDAP server connection</title>
<titlealts>
<searchtitle>create or update LDAP</searchtitle>
</titlealts>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. To enable the tags, right-click, select Refactoring > Toggle Comment.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc/>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<refbody>
<section><title>Purpose</title>Creates or updates an external LDAP server connection.</section>
<section>
<title>URI</title>
<p>Use the <ph conref="../../TextEntities.dita#TextEntities/ISMappliance"/> REST API POST method
        with the following <ph conref="../../TextEntities.dita#TextEntities/ISM"/> configuration
        URI:</p>
<p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/</codeph></p>
</section>
<section><title>Object configuration data</title><p>Provide LDAP object configuration data in the payload of the POST method by using the following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>: </p><codeblock>
{    
  "LDAP": {
    "URL": "string",
    "Certificate": "string",
    "IgnoreCase": true|false,
    "BaseDN": "string",
    "BindDN": "string",
    "BindPassword":  "string",
    "UserSuffix": "string",
    "GroupSuffix": "string",
    "GroupCacheTimeout": integer,
    "UserIdMap": "string",
    "GroupIdMap": "string",
    "GroupMemberIdMap": "string",
    "Timeout": integer,
    "EnableCache": true|false,
    "CacheTimeout": integer,
    "MaxConnections": integer,
    "NestedGroupSearch": true|false,
    "Enabled": true|false,
    "Verify": true|false,
    "Overwrite": true|false 
   }
}</codeblock>Where:<dl>
      <dlentry>
        <dt>URL</dt>
        <dd>Required if you are creating an LDAP connection.</dd>
        <dd>Specifies the URL of the LDAP server.</dd>
        <dd>The URL must be of the form:<codeph> ldap://<varname>ipAddress</varname>:<varname>portNumber</varname></codeph> or <codeph>ldaps://<varname>ipAddress</varname>:<varname>portNumber</varname></codeph> </dd>
        <dd>If you use <codeph>ldaps://</codeph>, you must upload an LDAP certificate before you create the LDAP connection.</dd>
      </dlentry>
      <dlentry>
        <dt>Certificate</dt>
        <dd>Specifies the certificate to use if the LDAP URL uses SSL or TLS. This is the name of a certificate in the truststore.</dd>
      </dlentry>
      <dlentry>
        <dt>IgnoreCase: true|false</dt>
        <dd>Specifies whether case is ignored (true) or not ignored (false).</dd>
        <dd>The default value is true.</dd>
      </dlentry>
      <dlentry>
        <dt>BaseDN</dt>
        <dd>Required if you are creating an LDAP connection.</dd>
        <dd>Specifies the base distinguished name of the directory service.</dd>
      </dlentry>
      <dlentry>
        <dt>BindDN</dt>
        <dd>Specifies the distinguished name to use when you bind to LDAP.</dd>
      </dlentry>
      <dlentry>
        <dt>BindPassword</dt>
        <dd>Specifies the password to use when you bind to LDAP.</dd>
        <dd>The value of this parameter is not returned on the REST API GET method.</dd>
      </dlentry>
      <dlentry>
        <dt>UserSuffix</dt>
        <dd>Specifies the distinguished name that is the suffix of the user distinguished name.</dd>
      </dlentry>
      <dlentry>
        <dt>GroupSuffix</dt>
        <dd>Specifies distinguished name that is the suffix of the group distinguished name.</dd>
      </dlentry>
      <dlentry>
        <dt>GroupCacheTimeout</dt>
        <dd>Specifies the group cache time to live, in seconds.</dd>
        <dd>This value must be in the range 1-86400.</dd>
        <dd>The default value is 300.</dd>
      </dlentry>
      <dlentry>
        <dt>UserIdMap</dt>
        <dd>Specifies the LDAP filter that maps the short name of a user to an LDAP entry.</dd>
      </dlentry>
      <dlentry>
        <dt>GroupIdMap</dt>
        <dd>Specifies the LDAP filter that maps the short name of a group to an LDAP entry.</dd>
      </dlentry>
      <dlentry>
        <dt>GroupMemberIdMap</dt>
        <dd>Specifies LDAP filter that identifies user-to-group relationships.</dd>
      </dlentry>
      <dlentry>
        <dt>Timeout</dt>
        <dd>Specifies the timeout for LDAP calls, in seconds.</dd>
        <dd>This value must be in the range 1-60.</dd>
        <dd>The default value is 10.</dd>
      </dlentry>
      <dlentry>
        <dt>EnableCache: true|false</dt>
        <dd>Specifies whether the authentication result is cached (true) or not cached (false).</dd>
        <dd>The default value is true.</dd>
      </dlentry>
      <dlentry>
        <dt>CacheTimeout</dt>
        <dd>Specifies the cache time to live, in seconds.</dd>
        <dd>This value must be in the range 1-60.</dd>
        <dd>The default value is 10.</dd>
      </dlentry>
      <dlentry>
        <dt>MaxConnections</dt>
        <dd>Specifies the maximum number of concurrent connections that can be made to the LDAP server.</dd>
        <dd>This value must be in the range 1-100.</dd>
        <dd>The default value is 10.</dd>
      </dlentry>
      <dlentry>
        <dt>NestedGroupSearch</dt>
        <dd>Specifies whether to use nested group searching (true) to find the group membership of a user.</dd>
        <dd>The default value is false which means that nested group searching is not used.</dd>
      </dlentry>
      <dlentry>
        <dt>Enabled: true|false</dt>
        <dd>Specifies whether the external LDAP connection is enabled (true) or disabled (false).</dd>
        <dd>The default value is true.</dd>
      </dlentry>
      <dlentry>
        <dt>Verify: true|false</dt>
        <dd>Specifies whether the LDAP connection is tested with the configuration change without committing the configuration change. </dd>
        <dd>The default value is false which means that the configuration change is committed without first testing the LDAP connection.</dd>
      </dlentry>
      <dlentry>
        <dt>Overwrite: true|false</dt>
        <dd>Specifies whether an existing certificate is overwritten.</dd>
        <dd>The default value is false which means that an existing certificate is not overwritten.</dd>
      </dlentry>
      </dl></section>
    <section>
      <title>Usage <tm tmclass="IGNORE" tmtype="reg" trademark="Notes">Notes</tm></title>
      <ul>
        <li>You must copy the LDAP certificate to <ph
          conref="../../TextEntities.dita#TextEntities/ISM"/> before you can apply it to <ph
          conref="../../TextEntities.dita#TextEntities/ISM"/>. <xref format="dita"
          href="../cmd_REST_file_put.dita" scope="local" type="reference"
          /> to copy the certificate.</li>
        <li>You can copy and apply only one LDAP certificate. If you want to upload and apply another certificate, you must overwrite the existing certificate.</li>
        <li>The certificate must be a pem format certificate.</li>
        <li>After the certificate is applied, it is automatically renamed to <codeph>ldap.pem</codeph></li>
        <li>If you update the LDAP certificate, the old LDAP certificate is used until the next time a client or connection is authenticated or authorized.</li>
        <li otherprops="future">If you are updating an LDAP certificate in a High Availability (HA)
          environment, you must upload the new certificate on the primary server and then replicate
          this certificate on the standby server. For more information about how to update
          certificates in an HA environment, see <xref format="dita"
            href="../../Administering/ad00379_.dita" scope="peer">Updating a certificate for an LDAP
            connection in a High Availability environment by using REST Administration
          APIs</xref>.</li>
        <li>If you use <codeph>ldaps://</codeph>, you might need to add a DNS entry to resolve the host name of the LDAP server.</li>
        <?Pub Caret -1?>
        <li>The new LDAP settings will be used the next time a client or connection is authenticated or authorized.</li>
        <li>Ensure that capitalization and double quotation marks are used as shown.</li>
      </ul>
    </section>
    <section>
      <title>Related <ph conref="../../TextEntities.dita#TextEntities/RESTAPIs"/></title>
      <ul>
        <li><xref format="dita" href="../cmd_REST_file_put.dita" scope="local" type="reference"
          /></li>
        <li><xref format="dita" href="cmd_imaserver_show_LDAP.dita" scope="local" type="reference"
          /></li>
      </ul>
    </section>
    <section><title>Example</title>Creates an LDAP server connection by using
        cURL:<codeblock>
curl -X POST \
   -H 'Content-Type: application/json'  \
   -d  '{ 
         "LDAP": {
           "URL": "ldap://192.0.2.0:1000",
           "BaseDN": "ou=DEPT,o=COMPANY,c=COUNTRY",
           "BindDN": "cn=root",
           "BindPassword": "password",
           "UserSuffix": "ou=users,ou=DEPT,o=COMPANY,c=COUNTRY",
           "GroupSuffix": "ou=groups,ou=DEPT,o=COMPANY,c=COUNTRY",         
           "UserIdMap": "*:UID",
           "GroupIdMap": "*:cn",
           "GroupMemberIdMap": "member",
           "Enabled": true
         }
       }
 '  \
http://127.0.0.1:9089/ima/v1/configuration/</codeblock><p>An
        example response to the POST
        method:<codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock></p></section>
</refbody>
</reference>

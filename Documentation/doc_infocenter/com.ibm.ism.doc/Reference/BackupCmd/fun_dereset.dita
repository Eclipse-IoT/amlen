<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002--><!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<?Pub Sty _display FontColor="red"?><?Pub Inc?><reference id="fundereset" xml:lang="en-us">
<title>Server reset in a RPM or Docker environment</title><?Pub Caret -2?>
<titlealts>
<searchtitle>server RESET</searchtitle>
</titlealts>
<prolog><metadata>
<keywords><indexterm>server RESET</indexterm></keywords>
</metadata></prolog>
<refbody>
<section><title>Purpose</title>Erase all data on the messaging server and put it back to a factory-new state. All configuration is deleted, including the ssh server keys, license acceptance, and logs. All user IDs and passwords are also deleted and replaced with the default user ID and password that were set at the factory. The server will be restarted with this REST API for the changes to take effect.</section>
<section>
   <title>URI</title>
   <p>Use the <ph conref="../../TextEntities.dita#TextEntities/ISM" /> REST API POST method with the following <ph conref="../../TextEntities.dita#TextEntities/ISM" /> service URI:</p>
   <codeblock>http://&lt;admin-endpoint-IP:Port&gt;/ima/v1/service/restart</codeblock>
  </section>
<section>
   <title>Object configuration data</title>
   <p>Provide object configuration data in the payload of the POST method by using the following
    schema. Content-type is set to <codeph>application/json</codeph>: </p>
   <codeblock>
{       
    "Service":"Server",
      "Reset":"config"
)</codeblock>
  </section>
<section><title>Usage <tm tmclass="IGNORE" tmtype="reg" trademark="Notes">Notes</tm></title><ul>
        <li>To access the reset server by using the Web UI, ensure that the Web UI has correct
          information specified to access the server. For more information about configuring servers
          to manage in the Web UI, see <xref format="dita" href="../../Administering/ad00930.dita" scope="peer">Configuring your first <ph conref = "../../TextEntities.dita#TextEntities/ISM"/> to manage</xref>.</li>
<li>This action only resets the messaging server. </li>
</ul></section>
<section><title>Example</title>
   <p>The following examples use cURL to test server reset by creating a TestHub, verifying that it
        is created, resetting the server and finally verifying that TestHub is deleted.</p>
   <ol>
    <li> Create a MessageHub called <codeph>TestHub</codeph> by using the POST method in the configuration domain: <codeblock> curl -X POST http://127.0.0.1:9089/ima/v1/configuration -d '{"MessageHub":{"TestHub":{"Description":"Test Hub"}}}'   </codeblock>The following successful response is received: <codeblock> { "Version":"v1","Code":"CWLNA6011","Message":"The requested configuration change has completed successfully." }</codeblock></li>
    <li>Check that the MessageHub is created by using the GET method in the configuration domain:<codeblock>
curl -X GET http://127.0.0.1:9089/ima/v1/configuration/MessageHub</codeblock>The following response is received; <codeblock>
{  
   "Version": "v1",  
     "MessageHub": {    
       "DemoHub": {      
        "Description": "Demo Message Hub."    
       },    
       "TestHub": {       
        "Description": "Test Hub"    
       }  
    }
}
</codeblock> </li>
    <li>Reset the configuration by restarting the server using the POST method in the service domain:<codeblock>curl -X POST http://127.0.0.1:9089/ima/v1/service/restart -d '{"Service":"Server","Reset":"config" }'</codeblock><note>No message is returned when this REST API is run because the server is restarted. You might want to wait around 15 seconds after running the reset command before you check the status of the server.</note></li>
    <li> Check server status by using the GET method in the service domain: <codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/service/status</codeblock>The following response is received; <codeblock>
{
  "Version":"v1",
  "Server": {
    "Name": "TestSystem:9089",
    "UID": "aFWxYf32",
    "Status": "Running",
    "State": 1,
    "StateDescription": "Running (production)",
    "ServerTime": "2016-03-04T14:46:53.081Z",
    "UpTimeSeconds": 4134,
    "UpTimeDescription": "0 days 0 hours 0 minutes 15 seconds",
    "Version": "2.0 20160304-0400",
    "ErrorCode": 0,
    "ErrorMessage": ""
  },
  "Container": {
    "UUID":"034c91ce828a4f5c2c21d7cd7f04628368b63bd308825ec2d9dab5096ff04ca0"
  },
  "HighAvailability": {
    "Status": "Inactive",
    "Enabled": false
  },  
  "Cluster": {
    "Status": "Inactive",
    "Enabled": false
  },  
  "Plugin": {
    "Status": "Inactive",
    "Enabled": false
  },  
  "MQConnectivity": {
    "Status": "Inactive",
    "Enabled": false
  },  
  "SNMP": {
    "Status": "Inactive",
    "Enabled": false
  }
}

</codeblock></li>
    <li>Check that <codeph>TestHub</codeph> which you created in step 1 is removed by using the GET method in the configuration domain:. Only DemoHub should be displayed in the response.<codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/configuration/MessageHub</codeblock>The following response is received; <codeblock>
{  
   "Version": "v1",  
     "MessageHub": {    
       "DemoHub": {      
        "Description": "Demo Message Hub."    
       }  
    }
}
</codeblock></li>
   </ol></section>
</refbody>

</reference><?Pub *0000003675?><?tm 1462285939158 2 Notes||IBM ?>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="cmd_create_update_qmc" xml:lang="en-us">
<title>Create or update a queue manager connection</title>
<titlealts>
<searchtitle>create or update queue manager connection</searchtitle>
</titlealts>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. To enable the tags, right-click, select Refactoring > Toggle Comment.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc/>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<refbody>
<section><title>Purpose</title>Creates or updates a queue manager connection. A queue manager connection specifies the connection details for one queue manager.</section>
<section>
<title>URI</title>
<p>Use the <ph conref="../../TextEntities.dita#TextEntities/ISM"/> REST API POST method with the
        following <ph conref="../../TextEntities.dita#TextEntities/ISM"/> configuration URI:</p>
<p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/</codeph></p>
</section>
<section><title>Object configuration data</title><p>Provide QueueManagerConnection object
        configuration data in the payload of the POST method by using the following schema.
          <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>: </p><codeblock>
{    
  "QueueManagerConnection": {
    "&lt;NameOfQueueManagerConnection>": {
      "QueueManagerName": "string",
      "ConnectionName": "string",
      "ChannelName": "string",
      "SSLCipherSpec": "string",  
      "ChannelUserName": "string",
      "ChannelUserPassword": "string",  
      "MQSSLKey": "string",
      "MQStashPassword": "string",
      "Verify": true|false,
      "Force": true|false,
      "Overwrite": true|false           
     }
   }
}</codeblock>Where:<dl>
        <dlentry>
          <dt><varname>NameOfQueueManagerConnection</varname></dt>
          <dd>Required.</dd>
          <dd>Specifies the name of the queue manager connection. After the queue manager connection
            is created, you cannot change this name.</dd>
          <dd>The name must not have leading or trailing spaces and cannot contain control
            characters, commas, double quotation marks, backslashes, or equal signs. The first
            character must not be a number or any of the following special characters: </dd>
          <dd><codeph>! # $ % &amp; ' ( ) * + - . / : ; &lt; > ? @</codeph></dd>
          <dd>The maximum length of the name is 256 characters.</dd>
        </dlentry>
        <dlentry>
          <dt>QueueManagerName</dt>
          <dd>Required if you are creating a queue manager connection.</dd>
          <dd>Specifies the name of the queue manager to connect to.</dd>
        </dlentry>
        <dlentry>
          <dt>ConnectionName</dt>
          <dd>Required if you are creating a queue manager connection.</dd>
          <dd>Specifies the connection name of the queue manager to connect to.</dd>
          <dd>The connection name consists of the IP address or host name of the queue manager, and
            optionally, the port number. If a port number is not specified, the default value of
            1414 is used. For multi-instance queue managers, you can specify more than one
            connection by entering the connection names in a comma-separated list.</dd>
          <dd>For a connection name with a port number, you must specify the port number in
            parentheses. For example: 192.0.2.0(1414) For a connection name without a port number,
            do not use parentheses. For example: 192.0.2.0</dd>
        </dlentry>
        <dlentry>
          <dt>ChannelName</dt>
          <dd>Required if you are creating a queue manager connection.</dd>
          <dd>Specifies the channel name for the queue manager.</dd>
          <dd>The name that you specify must match the name of the server-connection channel that
            you defined in <ph conref="../../TextEntities.dita#TextEntities/wmq"/>.</dd>
        </dlentry>
        <dlentry>
          <dt>SSLCipherSpec</dt>
          <dd>Optional.</dd>
          <dd>Specifies the SSL cipher specification that is used in the connection between <ph
              conref="../../TextEntities.dita#TextEntities/ISM"/> and <ph
              conref="../../TextEntities.dita#TextEntities/wmq"/>.</dd>
          <dd>The cipher that is specified must match the cipher that is defined in <ph
              conref="../../TextEntities.dita#TextEntities/wmq"/> for the queue manager that is used
            in the queue manager connection.</dd>
        </dlentry>
        <dlentry>
          <dt>ChannelUserName</dt>
          <dd>Optional.</dd>
          <dd>Specifies the user name to provide to <ph
              conref="../../TextEntities.dita#TextEntities/wmq"/> Connectivity channel
            authentication.</dd>
          <dd>The maximum length of the name is 1024 characters.</dd>
          <dd>If you specify a channel user name, you must also specify a channel user
            password.</dd>
        </dlentry>
        <dlentry>
          <dt>ChannelUserPassword</dt>
          <dd>Optional.</dd>
          <dd>Specifies the password to provide to <ph
              conref="../../TextEntities.dita#TextEntities/wmq"/> Connectivity channel
            authentication</dd>
          <dd>The maximum length of the password is 256 characters.</dd>
          <dd>You must specify a channel user password if you specify a channel user name.</dd>
        </dlentry>
        <dlentry>
          <dt>MQSSLKey</dt>
          <dd>Specifies the name of the key database file.</dd>
        </dlentry>
        <dlentry>
          <dt>MQStashPassword</dt>
          <dd>Specifies the name of the password stash file.</dd>
        </dlentry>
        <dlentry>
          <dt>Verify: true|false</dt>
          <dd>Specifies whether the queue manager connection is tested with the configuration change
            without committing the configuration change. </dd>
          <dd>Set this value to true to verify that the configuration that you have entered is
            valid.</dd>
          <dd>The default value is false which means that the configuration change is committed
            without first testing the queue manager connection.</dd>
        </dlentry>
        <dlentry>
          <dt>Force: true|false</dt>
          <dd>Specifies a forced delete or update of the Queue Manager Connection. This action might
            cause XA transaction IDs to be orphaned.</dd>
        </dlentry>
        <dlentry>
          <dt>Overwrite: true|false</dt>
          <dd>Specifies whether an existing certificate and key are overwritten if they have the
            same name.</dd>
          <dd>The default value is false which means that an existing certificate and key are not
            overwritten if they have the same name.</dd>
        </dlentry>
      </dl></section>
<section>
<title>Usage <tm tmclass="IGNORE" tmtype="reg" trademark="Notes">Notes</tm></title>
<ul>
<li>You must copy the key database file and stash password file to the server before you can apply
          them to <ph conref="../../TextEntities.dita#TextEntities/ISM"/>. <xref format="dita"
            href="../cmd_REST_file_put.dita" scope="local" type="reference"/> to copy the key
          database file and stash password file.</li>
<li>You can copy only one key database file and one stash password file. If you want to use another
          file, you must overwrite the existing file.</li>
        <li>You can edit a queue manager connection only if all the destination mapping rules that are using the queue manager connection are disabled. You can disable a destination mapping rule by using the REST API POST method described in <xref
          format="dita" href="cmd_create_update_dmr.dita" scope="local" type="reference"/>.</li>
        <li>Ensure that capitalization and double quotation marks are used as shown.</li>
</ul>
</section>
<section>
      <title>Related <ph conref="../../TextEntities.dita#TextEntities/RESTAPIs"/></title>
<ul>
        <li><xref format="dita" href="../cmd_REST_file_put.dita" scope="local" type="reference"
          /></li>
<li><xref format="dita" href="cmd_create_update_dmr.dita" scope="local" type="reference"/></li>
        <li><xref format="dita" href="../cmd_show_config.dita" scope="local" type="reference"/></li>
        <li><xref format="dita" href="../cmd_delete_config.dita" scope="local" type="reference"
          /></li>
</ul>
</section>
<section><title>Example</title>Creates a queue manager connection called "MyQMC" by using cURL:<codeblock>
curl -X POST \
   -H 'Content-Type: application/json'  \
   -d  '{ 
         "QueueManagerConnection": {   
           "MyQMC": {
             "QueueManagerName": "QM1",
             "ConnectionName": "192.0.2.0(1415)",
             "ChannelName": "SYSTEM.IMA.SVRCONN",
             "MQSSLKey": "my.kdb",
             "MQStashPassword": "mq.sth"                        
          }
        }
     }
 '  \
http://127.0.0.1:9089/ima/v1/configuration/</codeblock><p>An example response to the POST method:<codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock></p></section>
</refbody>
</reference>

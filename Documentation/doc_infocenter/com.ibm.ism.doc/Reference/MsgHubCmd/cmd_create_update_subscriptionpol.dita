<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="cmd_create_update_subscriptionpol" xml:lang="en-us">
<title>Create or update a subscription policy</title>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. To enable the tags, right-click, select Refactoring > Toggle Comment.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc/>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<refbody>
<section><title>Purpose</title>Creates or updates a subscription policy. Subscription policies are used to control which clients can receive messages from a specified global-shared durable subscription. Subscription policies are also used to control which clients can control the creation and deletion of global-shared durable subscriptions on a specified subscription name. </section>
<section>
<title>URI</title>
<p>Use the <ph conref="../../TextEntities.dita#TextEntities/ISM"/> REST API POST method with the
        following <ph conref="../../TextEntities.dita#TextEntities/ISM"/> configuration URI:</p>
<p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/</codeph></p>
</section>
<section><title>Object configuration data</title><p>Provide SubscriptionPolicy object configuration data in the payload of the POST method by using the following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>: </p><codeblock>
{    
   "SubscriptionPolicy": {
     "&lt;NameOfSubscriptionPolicy>": {
       "Description": "string",
       "Subscription": "string",
       "ActionList": "string",
       "MaxMessages": integer,
       "MaxMessagesBehavior": "RejectNewMessages"|"DiscardOldMessages",
       "ClientID": "string",
       "UserID": "string",
       "GroupID": "string",
       "CommonNames": "string",
       "ClientAddress": "string",
       "Protocol": "string"             
    }
  }
}</codeblock>Where:<dl>
      <dlentry>
        <dt>NameOfSubscriptionPolicy</dt>
        <dd>Required.</dd>
        <dd>Specifies the name of the subscription policy.</dd>
        <dd>The name must not have leading or trailing spaces and cannot contain control characters, commas, double quotation marks, backslashes, or equal signs. The first character must not be a number or any of the following special characters: ! # $ % &amp; ' ( ) * + - . / : ; &lt; > ? @</dd>
        <dd>After the subscription policy is created, this name cannot be changed.</dd>
      </dlentry>
      <dlentry>
        <dt>Description</dt>
        <dd>Optional.</dd>
        <dd>Specifies a description for the subscription policy.</dd>
        <dd>If you do not want a description, omit "Description": "description".</dd>
      </dlentry>
      <dlentry>
        <dt>Subscription</dt>
        <dd>Required if you are creating a subscription policy.</dd>
        <dd>Specifies the global-shared durable subscription name that the subscription policy applies to. </dd>
        <dd>If you are using MQTT global-shared subscriptions, you must configure a topic policy and a subscription policy. The <parmname>Topic</parmname> parameter in the topic policy and the <parmname>Subscription</parmname> parameter in the subscription policy must be correctly specified. For more information, see <xref
          format="dita" href="../../Security/se00019_.dita" scope="peer"
          >Topic filters for MQTT global-shared subscriptions</xref>.</dd>
        <dd>You can use an asterisk (*) as a wildcard. For example, to apply the topic policy to topic strings <codeph>TOPICA/#</codeph>, enter a topic of <codeph>TOPICA/*</codeph>. You must take care when you use a wildcard to ensure that you do not grant greater authority to topics than intended. For more information about how wildcard characters can be used, see <xref
          format="dita" href="../../Overview/ov00032.dita" scope="peer" type="section"
          >Wildcards</xref>.</dd>
        <dd>If the subscription policy applies to a global-shared subscription that is to be used by MQTT applications, ensure that you do not include the forward slash character ( /) in <parmname>Subscription</parmname>.</dd>
        <dd>The dollar sign ($) and asterisk (*) have special meanings in the Topic field. To use these characters as literals, use <codeph>${$}</codeph> for a dollar sign, and use <codeph>${*}</codeph> for an asterisk.</dd>
        <dd>You can use variable substitution to ensure that only clients with specific user IDs, group IDs, or client certificate common names can receive messages from a specified global-shared durable subscription. The variables are:<ul>
          <li><codeph>${UserID}</codeph> for the user ID. </li>
          <li><codeph>${GroupID}</codeph> for the group ID.</li>
          <li><codeph>${CommonName}</codeph> for the client certificate common name. </li>
          </ul></dd>
      </dlentry>
      <dlentry>
        <dt>ActionList</dt>
        <dd>Required if you are creating a subscription policy.</dd>
        <dd>Specifies which messaging actions can be used by clients that connect to endpoints associated with this subscription policy.</dd>
        <dd>You can specify the following values for a subscription policy for global-shared durable subscriptions. To specify more than one, separate each value with a comma:<ul>
          <li><b><codeph><b>Receive</b></codeph></b><p>Allows clients to receive messages from the global-shared durable subscription that is specified in the <parmname>Subscription</parmname> field of the subscription policy.</p></li>
          <li><b><codeph><b>Control</b></codeph></b><p>Allows global-shared durable subscriptions to be created and deleted. The name of the global-shared durable subscription is specified in the <parmname>Subscription</parmname> field of the subscription policy.</p><p>To create or delete a global-shared durable subscription, a client must be allowed to receive messages. Therefore, if you select <codeph>Control</codeph>, you must also select <codeph>Receive</codeph> within the same subscription policy.</p></li>
          </ul></dd>
      </dlentry>
      <dlentry>
        <dt>MaxMessages</dt>
        <dd>Required for a global-shared durable subscription.</dd>
        <dd>Specifies the maximum number of messages that are kept for a subscription. This value is a guideline, rather than an absolute limit. If the system is running under stress, then the number of buffered messages on a subscription might be slightly higher than the MaxMessages value.</dd>
        <dd>The default value is 5000.</dd>
      </dlentry>
      <dlentry>
        <dt>MaxMessagesBehavior</dt>
        <dd>Optional.</dd>
        <dd>Specifies the behavior that is applied when the number of messages in the buffer for a subscription reaches the max messages value. That is, when the buffer for a subscription is full. The behavior is applied only to global-shared durable subscriptions.</dd>
        <dd>The behavior can be one of the following options:<ul>
          <li><b>RejectNewMessages</b><p>New messages are not accepted on the buffer for the subscription.</p></li>
          <li><b>DiscardOldMessages</b><p>A percentage of the old messages on the buffer for the subscription are discarded. If a retained message is one of the old messages, it is discarded. The quality of service, persistence, and priority of the message does not prevent a message from being discarded. Therefore, if all messages must be received in order for your applications to function correctly, you cannot set MaxMessagesBehavior to <codeph>DiscardOldMessages</codeph>.</p></li>
          </ul></dd>
        <dd>The default behavior is <codeph>RejectNewMessages</codeph>.</dd>
      </dlentry>
      </dl><p>Specify at least one of the following filters:</p><dl>
      <dlentry>
        <dt>ClientID</dt>
        <dd>Specifies the client ID that is allowed to use the messaging actions that are specified in the queue policy. The client ID is allowed to use the messaging actions only on the queues that are specified in the policy.</dd>
        <dd>You can use an asterisk (*) at the end of the value to match 0 or more characters.</dd>
        <dd>To use the default value, where all client ID values are allowed to use the actions, omit <codeph>"ClientID":"<varname>ClientID</varname>"</codeph></dd>
      </dlentry>
      <dlentry>
        <dt>UserID</dt>
        <dd>Specifies the messaging user ID that is allowed to use the messaging actions that are specified in the subscription policy. The messaging user ID is allowed to use the messaging actions only on the topics that are specified in the policy.</dd>
        <dd>You can use an asterisk (*) at the end of the value to match 0 or more characters.</dd>
        <dd>To use the default value, where all user ID values are allowed to use the actions, omit <codeph>"UserID": "<varname>UserID</varname>"</codeph>.</dd>
      </dlentry>
      <dlentry>
        <dt>GroupID</dt>
        <dd>Specifies the messaging group that is allowed to use the messaging actions that are specified in the subscription policy. </dd>
        <dd>You can use an asterisk (*) at the end of the value to match 0 or more characters.</dd>
        <dd>To use the default value, where all groups are allowed to use the actions, omit <codeph>"GroupID": "<varname>GroupID</varname>"</codeph>.</dd>
      </dlentry>
      <dlentry>
        <dt>CommonNames</dt>
        <dd>Specifies the client certificate common name that must be used for a client to be allowed to use the actions that are specified in the subscription policy. </dd>
        <dd>You can use an asterisk (*) at the end of the value to match 0 or more characters.</dd>
        <dd>To use the default value, where all client certificates are allowed to use the actions, omit <codeph>"CommonNames": "<varname>CommonNames</varname>"</codeph>.</dd>
      </dlentry>
      <dlentry>
        <dt>ClientAddress</dt>
        <dd>Specifies the client IP addresses that are allowed to use the messaging actions that are specified in the subscription policy. </dd>
        <dd>The IP address can contain an asterisk (*), or a comma-separated list of IPv4 or IPv6 addresses or ranges. For example, 192.0.2.32, 192.0.0.0, 192.0.2.0-192.0.2.100. The range must be specified from low to high.</dd>
        <dd>However, each IPv6 address must be enclosed in brackets <codeph>[ ]</codeph> either when expressed singly or in a range of addresses. IPv6 addresses cannot contain asterisks.</dd>
        <dd>The maximum number of client addresses that you can specify is 20.</dd>
        <dd>To use the default value, where all client IP addresses are allowed to connect, omit <codeph>"ClientAddress":"<i>IP_Address</i>"</codeph> or specify <codeph>"ClientAddress":"<i>*</i>"</codeph>.</dd>
      </dlentry>
      <dlentry>
        <dt>Protocol</dt>
        <dd>Specifies which protocols are allowed to use the actions that are specified in the subscription policy.</dd>
        <dd>You can choose from JMS and MQTT protocols. If there are any protocol plug-ins installed on the <ph
          conref="../../TextEntities.dita#TextEntities/ISM"
          /> server, you can specify these as well. To specify more than one value, separate each value with a comma. To select all protocols, specify a null value for Protocol or omit the parameter from the command.</dd>
      </dlentry>
      </dl></section>
<section>
<title>Usage <tm tmclass="IGNORE" tmtype="reg" trademark="Notes">Notes</tm></title>
<ul>
        <li>Capitalization and double quotation marks must be used as shown.</li>
<li>Each of the filters, <parmname>ClientAddress</parmname>, <parmname>UserID</parmname>, <parmname>GroupID</parmname>, <parmname>CommonNames</parmname>, and <parmname>Protocol</parmname>, is applied in combination. If you specify several filters, each condition must be met in order for the actions that are specified in the messaging policy to be allowed. For each filter that you do not specify, all values for that filter are allowed.<p>For example, a subscription policy is created that specifies: <codeph>"ActionList": "Receive" "GroupID": "SILVER" "UserID": "SIL*" "Protocol": "JMS"</codeph>. A client with User ID <codeph>SIL1</codeph>, in group <codeph>SILVER</codeph>, that is using JMS can receive messages. A client with a User ID <codeph>SIL2</codeph>, in group <codeph>GOLD</codeph>, that is using JMS cannot receive messages because not all of the filter conditions are met.</p></li>
</ul>
</section>
<section>
<title>Related <ph conref="../../TextEntities.dita#TextEntities/RESTAPIs"/></title>
<ul>
<li><xref format="dita" href="cmd_create_update_msghub.dita" scope="local" type="reference"/></li>
<li><xref format="dita" href="cmd_create_update_conpol.dita" scope="local" type="reference"/></li>
        <li><xref format="dita" href="cmd_create_update_topicpol.dita" scope="local"
          type="reference"/></li>
<li><xref format="dita" href="cmd_create_update_queuepol.dita" scope="local" type="reference"/></li>
<li><xref format="dita" href="cmd_create_update_endpoint.dita" scope="local" type="reference"/></li>
        <li><xref format="dita" href="../cmd_show_config.dita" scope="local" type="reference"/></li>
        <li><xref format="dita" href="../cmd_delete_config.dita" scope="local" type="reference"
          /></li>
</ul>
</section>
<section><title>Example</title>Creates a subscription policy called "MySubscriptionPolicy" by using cURL:<codeblock>
curl -X POST  \
   -H 'Content-Type: application/json'  \
   -d  '{                          
           "SubscriptionPolicy": {   
               "MySubscriptionPolicy": {
                "Description": "Subscription policy to authorize a client to  receive messages from a global-shared durable subscription.",
                "Subscription": "*",
                "ClientAddress": "*",
                "ActionList": "Receive"
              }
          }
      }
  '   \
http://127.0.0.1:9089/ima/v1/configuration/</codeblock><p>An example response to the POST method:<codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock></p></section>
</refbody>
</reference>

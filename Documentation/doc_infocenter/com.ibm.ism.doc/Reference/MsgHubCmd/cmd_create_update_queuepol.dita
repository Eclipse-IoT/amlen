<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="cmd_create_update_queuepol" xml:lang="en-us">
<title>Create or update a queue policy</title>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. To enable the tags, right-click, select Refactoring > Toggle Comment.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc/>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<refbody>
<section><title>Purpose</title>Creates or updates a queue policy. A queue policy is a type of messaging policy that is used to control which clients can send to, receive from, or browse a specified queue. </section>
<section>
<title>URI</title>
<p>Use the<ph conref="../../TextEntities.dita#TextEntities/ISM"/> REST API POST method with the
        following <ph conref="../../TextEntities.dita#TextEntities/ISM"/> configuration URI:</p>
<p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/</codeph></p>
</section>
<section><title>Object configuration data</title><p>Provide QueuePolicy object configuration data in the payload of the POST method by using the following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>: <codeblock>
{    
   "QueuePolicy": {
     "&lt;NameOfQueuePolicy>": {
       "Description": "string",
       "Queue": "string",
       "ActionList": "string",
       "MaxMessageTimeToLive": "string",
       "ClientID": "string",
       "UserID": "string",
       "GroupID": "string",
       "CommonNames": "string",
       "ClientAddress": "string",
       "Protocol": "string"             
    }
  }
}</codeblock></p>Where:<dl>
      <dlentry>
        <dt>NameOfQueuePolicy</dt>
        <dd>Required.</dd>
        <dd>Specifies the name of the queue policy.</dd>
        <dd>The name must not have leading or trailing spaces and cannot contain control characters, commas, double quotation marks, backslashes, or equal signs. The first character must not be a number or any of the following special characters: ! # $ % &amp; ' ( ) * + - . / : ; &lt; > ? @</dd>
        <dd>After the queue policy is created, this name cannot be changed.</dd>
      </dlentry>
      <dlentry>
        <dt>Description</dt>
        <dd>Optional.</dd>
        <dd>Specifies a description for the queue policy.</dd>
        <dd>If you do not want a description, omit "Description": "description".</dd>
      </dlentry>
      <dlentry>
        <dt>Queue</dt>
        <dd>Required if you are creating a queue policy.</dd>
        <dd>Specifies the queue or queues that the queue policy applies to.</dd>
        <dd>You can use an asterisk (*) as a wildcard. You must take care when you use a wildcard to ensure that you do not grant greater authority to topics than intended. For more information about how wildcard characters can be used, see <xref
          format="dita" href="../../Overview/ov00032.dita" scope="peer" type="section"
          >Wildcards</xref>.</dd>
        <dd>The dollar sign ($) and asterisk (*) have special meanings in the Queue field. To use these characters as literals, use <codeph>${$}</codeph> for a dollar sign, and use <codeph>${*}</codeph> for an asterisk.</dd>
        <dd>You can use variable substitution in the queue field to ensure that only clients with specific user IDs, group IDs, client IDs, or client certificate common names can access a queue. The variables are:<ul>
          <li><codeph>${UserID}</codeph> for the user ID. </li>
          <li><codeph>${GroupID}</codeph> for the group ID.</li>
          <li><codeph>${ClientID}</codeph> for the client ID. </li>
          <li><codeph>${CommonName}</codeph> for the client certificate common name. </li>
          </ul></dd>
        <dd>For example, if a queue name in a queue policy is <codeph>${ClientID}</codeph>, then a client with an ID of <codeph>client_a</codeph> can access queue<codeph> client_a.</codeph> A client with an ID of <codeph>client_b</codeph> cannot access queue <codeph>client_a</codeph>, but can access queue <codeph>client_b</codeph>. </dd>
      </dlentry>
      <dlentry>
        <dt>ActionList</dt>
        <dd>Required if you are creating a queue policy.</dd>
        <dd>Specifies which messaging actions can be used by clients that connect to endpoints associated with this queue policy.</dd>
        <dd>You can specify the following values for a queue policy. To specify more than one, separate each value with a comma:<ul>
          <li><b><codeph>Send</codeph></b><p>Allows clients to send messages to the queue that is specified in the queue policy.</p></li>
          <li><b><codeph>Receive</codeph></b><p>Allows clients to receive messages from the queue that is specified in the queue policy.</p></li>
          <li><b><codeph>Browse</codeph></b><p>Allows clients to browse messages on the queue that is specified in the queue policy.</p></li>
          </ul></dd>
      </dlentry>
      <dlentry>
        <dt>MaxMessageTimeToLive</dt>
        <dd>Optional.</dd>
        <dd>Specifies the maximum time, in seconds, that a published message that is associated with the queue policy can exist for in <ph
          conref="../../TextEntities.dita#TextEntities/ISM"/>.</dd>
        <dd>The value must be either <codeph>unlimited</codeph> or in the range 1-2147483647.</dd>
        <dd>The default value is <codeph>unlimited</codeph> and means that messages will not expire unless the publishing application specifies a time for messages to exist for.</dd>
        <dd>This value is applied only when the topic policy includes an action of send.</dd>
        <dd>Ensure that client and server times are synchronized in order to minimize the possibility of expired messages being received. </dd>
      </dlentry>
      </dl><p>Specify at least one of the following filters:</p><dl>
      <dlentry>
        <dt>ClientID</dt>
        <dd>Specifies the client ID that is allowed to use the messaging actions that are specified in the queue policy. The client ID is allowed to use the messaging actions only on the queues that are specified in the policy.</dd>
        <dd>You can use an asterisk (*) at the end of the value to match 0 or more characters.</dd>
        <dd>To use the default value, where all client ID values are allowed to use the actions, omit <codeph>"ClientID":"<varname>ClientID</varname>"</codeph>.</dd>
      </dlentry>
      <dlentry>
        <dt>UserID</dt>
        <dd>Specifies the messaging user ID that is allowed to use the messaging actions that are specified in the queue policy. The messaging user ID is allowed to use the messaging actions only on the queues that are specified in the policy.</dd>
        <dd>You can use an asterisk (*) at the end of the value to match 0 or more characters.</dd>
        <dd>To use the default value, where all user ID values are allowed to use the actions, omit <codeph>"UserID": "<varname>UserID</varname>"</codeph>.</dd>
      </dlentry>
      <dlentry>
        <dt>GroupID</dt>
        <dd>Specifies the messaging group that is allowed to use the messaging actions that are specified in the queue policy. The messaging group is allowed to use the messaging actions only on the queues that are specified in the policy.</dd>
        <dd>You can use an asterisk (*) at the end of the value to match 0 or more characters.</dd>
        <dd>To use the default value, where all groups are allowed to use the actions, omit <codeph>"GroupID": "<varname>GroupID</varname>"</codeph>.</dd>
      </dlentry>
      <dlentry>
        <dt>CommonNames</dt>
        <dd>Specifies the client certificate common name that must be used for a client to be allowed to use the actions that are specified in the queue policy. The client certificate common name allows clients to use the messaging actions only on the queues that are specified in the policy.</dd>
        <dd>You can use an asterisk (*) at the end of the value to match 0 or more characters.</dd>
        <dd>To use the default value, where all client certificates are allowed to use the actions, omit <codeph>"CommonNames": "<varname>CommonNames</varname>"</codeph>.</dd>
      </dlentry>
      <dlentry>
        <dt>ClientAddress</dt>
        <dd>Specifies the client IP addresses that are allowed to use the messaging actions that are specified in the queue policy. The client IP addresses are allowed to use the messaging actions only on the queues that are specified in the policy.</dd>
        <dd>The IP address can contain an asterisk (*), or a comma-separated list of IPv4 or IPv6 addresses or ranges. For example, 192.0.2.32, 192.0.0.0, 192.0.2.0-192.0.2.100. The range must be specified from low to high.</dd>
        <dd>However, each IPv6 address must be enclosed in brackets <codeph>[ ]</codeph> either when expressed singly or in a range of addresses. IPv6 addresses cannot contain asterisks.</dd>
        <dd>The maximum number of client addresses that you can specify is 20.</dd>
        <dd>To use the default value, where all client IP addresses are allowed to connect, omit <codeph>"ClientAddress":"<i>IP_Address</i>"</codeph> or specify <codeph>"ClientAddress":"<i>*</i>"</codeph>.</dd>
      </dlentry>
      <dlentry>
        <dt>Protocol</dt>
        <dd>Specifies which protocols are allowed to use the actions that are specified in the queue policy on the queues that are specified in the policy.</dd>
        <dd>You can choose from JMS and any protocol plug-ins that have specified support for queues. To specify more than one value, separate each value with a comma. To select all protocols, specify a null value for Protocol or omit the parameter from the command.</dd>
      </dlentry>
      </dl></section>
<section>
<title>Usage <tm tmclass="IGNORE" tmtype="reg" trademark="Notes">Notes</tm></title>
<ul>
        <li>Capitalization and double quotation marks must be used as shown.</li>
<li>Each of the filters, <parmname>ClientAddress</parmname>, <parmname>ClientID</parmname>, <parmname>UserID</parmname>, <parmname>GroupID</parmname>, <parmname>CommonNames</parmname>, and <parmname>Protocol</parmname>, is applied in combination. If you specify several filters, each condition must be met in order for the actions that are specified in the messaging policy to be allowed. For each filter that you do not specify, all values for that filter are allowed.<p>For example, a queue policy is created that specifies: <codeph>"ActionList": "Publish" "GroupID": "SILVER" "ClientID": "SIL*" "Protocol": "JMS"</codeph>. A client with User ID <codeph>SIL1</codeph>, in group <codeph>SILVER</codeph>, that is using JMS can publish messages. A client with a User ID <codeph>SIL2</codeph>, in group <codeph>GOLD</codeph>, that is using JMS cannot publish messages because not all of the filter conditions are met.</p></li>
</ul>
</section>
<section>
<title>Related <ph conref="../../TextEntities.dita#TextEntities/RESTAPIs"/></title>
<ul>
<li><xref format="dita" href="cmd_create_update_msghub.dita" scope="local" type="reference"/></li>
<li><xref format="dita" href="cmd_create_update_conpol.dita" scope="local" type="reference"/></li>
<li><xref format="dita" href="cmd_create_update_topicpol.dita" scope="local" type="reference"/></li>
<li><xref format="dita" href="cmd_create_update_subscriptionpol.dita" scope="local" type="reference"
/></li>
<li><xref format="dita" href="cmd_create_update_endpoint.dita" scope="local" type="reference"/></li>
        <li><xref format="dita" href="../cmd_show_config.dita" scope="local" type="reference"/></li>
        <li><xref format="dita" href="../cmd_delete_config.dita" scope="local" type="reference"
          /></li>
</ul>
</section>
<section><title>Example</title>Creates a queue policy called "MyQueuePolicy" by using cURL:<codeblock>
curl -X POST  \
   -H 'Content-Type: application/json'  \
   -d  '{                          
           "QueuePolicy": {   
               "MyQueuePolicy": {
                "Description": "Queue policy to authorize a client to send messages to and receive messages from a queue.",
                "Queue": "*",
                "ClientID": "*",
                "ActionList": "Send,Receive"
              }
          }
      }
  '   \
http://127.0.0.1:9089/ima/v1/configuration/</codeblock><p>An example response to the POST method:<codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock></p></section>
</refbody>
</reference>

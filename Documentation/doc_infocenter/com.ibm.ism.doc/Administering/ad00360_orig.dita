<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE concept PUBLIC  "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<concept id="ad00360_" xml:lang="en-us">
<title>Configuring message hubs</title>
<shortdesc>You can configure messaging hubs either by using the <ph
   conref="../TextEntities.dita#TextEntities/ISMgui"/> or by using <ph
   conref="../TextEntities.dita#TextEntities/RESTAPIs"/>.</shortdesc>
<conbody>
<p>A message hub is an organizational object which groups endpoints,
connection policies, and messaging policies that are associated with
a specific goal. For more information about message hubs, endpoints,
connection policies, and messaging policies, see <xref format="dita"
href="../Overview/ov00060.dita" scope="local"></xref>.<note>Special
character input for a particular policy field does not apply to other
fields or policy types unless explicitly stated otherwise.</note></p>
<p>You create message hubs, and the message hub components, in the
following order:<ul>
<li><xref format="dita" href="ad00360_.dita#ad00360_/msghub"
scope="local" type="section"></xref></li>
<li><xref format="dita" href="ad00360_.dita#ad00360_/connpolicy"
scope="local" type="section"></xref></li>
<li><xref format="dita" href="ad00360_.dita#ad00360_/msgpolicy"
scope="local" type="section"></xref></li>
<li><xref format="dita" href="ad00360_.dita#ad00360_/endpoint"
scope="local" type="section"></xref></li>
</ul></p>
<section id="msghub"><title>Message hubs</title><p>Each message hub
must have at least one <xref format="dita"
href="ad00360_.dita#ad00360_/endpoint" scope="local" type="section">endpoint</xref>.</p><p>When
you create and edit a message hub, you must specify the following
component:<ul>
<li><dl><dlentry>
<dt>Name</dt>
<dd>Specifies the name that identifies the messaging hub.</dd>
<dd>The name must not have leading or trailing spaces and cannot contain
control characters, commas, double quotation marks, backslashes, or
equal signs. The first character must not be a number or any of the
following special characters: <p><codeph>! # $ % &amp; ' ( ) * + -
. / : ; &lt; > ? @</codeph></p></dd>
</dlentry></dl></li>
</ul></p></section>
<section id="connpolicy"><title>Connection policies</title><p>A connection
policy is used to authorize a connection to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> based on one
or more connection level attributes. For more information about connection
policies, see <xref format="dita" href="../Security/se00003_.dita"
scope="local" type="concept"></xref>.</p><p>When you create a connection
policy, you must specify the following component:<ul>
<li><dl><dlentry>
<dt>Name</dt>
<dd>Specifies the name that identifies the connection policy.</dd>
<dd>The name must not have leading or trailing spaces and cannot contain
control characters, commas, double quotation marks, backslashes, or
equal signs. The first character must not be a number or any of the
following special characters: <p><codeph>! # $ % &amp; ' ( ) * + -
. / : ; &lt; > ? @</codeph></p></dd>
</dlentry></dl></li>
</ul></p><p>You can also specify the following components:<ul>
<li><dl><dlentry>
<dt>Allow Durable</dt>
<dd>Specifies whether MQTT clients can connect using a setting of <codeph>cleanSession=0</codeph>.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Allow Persistent Messages</dt>
<dd>Specifies whether MQTT clients can publish messages with a QoS
of 1 or 2 .</dd>
</dlentry></dl></li>
</ul></p><p id="YouMustSpecifyAtLeastOneOfTheFollow">You must specify
at least one of the following filters:<ul>
<li><dl id="ClientIPAddressSpecifiesTheClientIP"><dlentry>
<dt>Client IP address</dt>
<dd>Specifies the client IP addresses that are allowed to connect
to <ph conref="../TextEntities.dita#TextEntities/ISM"></ph>.</dd>
<dd>The IP address can contain an asterisk (*), or a comma-separated
list of IPv4 or IPv6 addresses or ranges. For example, 192.0.2.32,
192.0.0.0, 192.0.2.0-192.0.2.100. The range must be specified from
low to high.</dd>
<dd>IPv6 addresses must be enclosed in brackets <codeph>[ ]</codeph>.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Client ID</dt>
<dd>Specifies the Client ID that is allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> by using the
specified endpoint.</dd>
<dd>You can use an asterisk (*) at the end of the value to match 0
or more characters.</dd>
<dd>You can use variable substitution in the client ID to ensure that
only clients with a client ID that matches the user ID or the certificate
common name, can connect. The variable for user IDs is <codeph>${UserID}</codeph>.
The variable for certificate common name is <codeph>${CommonName}</codeph>.
You can specify extra characters along with the variable. For example,
you can specify that the client ID must match <codeph>myClient/${UserID}</codeph>.
In this case, a client with the user ID <codeph>userA</codeph> and
the client ID <codeph>myClient/userA</codeph> can connect. A client
with the user ID <codeph>userB</codeph> and the client ID <codeph>myClient/userB</codeph> can
connect. However, a client with the user ID <codeph>userB</codeph>,
but the client ID <codeph>notMyClient</codeph>, cannot connect.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>User ID</dt>
<dd>Specifies the messaging user ID that is allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> by using the
specified endpoint.</dd>
<dd>You can use an asterisk (*) at the end of the value to match 0
or more characters.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Group Name</dt>
<dd>Specifies the messaging group that is allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> by using the
specified endpoint.</dd>
<dd>You can use an asterisk (*) at the end of the value to match 0
or more characters.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Certificate Common Name</dt>
<dd>Specifies the client certificate common name that must be used
to connect to <ph conref="../TextEntities.dita#TextEntities/ISM"></ph> by
using the specified endpoint.</dd>
<dd>You can use an asterisk (*) at the end of the value to match 0
or more characters.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Protocol</dt>
<dd>Specifies which protocols are allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph>.</dd>
<dd>You must specify at least one protocol in order for clients to
connect.</dd>
</dlentry></dl></li>
</ul></p><p>Each filter is applied in combination. If you specify
several filters, each condition must be met in order for the connection
to be allowed. For each filter that you do not specify, all values
for that filter are allowed.</p><p>For example, a connection policy
is created that specifies:</p><p><codeph>group name must be <codeph>GOLD</codeph> AND
client IP address must be <codeph>192.0.2.0-192.0.2.50</codeph> AND
the protocol must be MQTT</codeph></p><p>A client is allowed to connect
with any client ID, any user ID, and any certificate common name.
However, if the client does not have a group name of <codeph>GOLD</codeph>,
or if the IP address of the client is not in the range <codeph>192.0.2.0-192.0.2.50</codeph>,
or if the client is not using MQTT, the connection is not allowed.</p></section>
<section id="msgpolicy"><title>Messaging policies</title> <p>There
are three types of messaging policies: topic messaging policies, queue
messaging policies, and subscription messaging policies.</p> <p>Topic
messaging policies are used to control which clients can publish or
subscribe to a specified topic. Queue messaging policies are used
to control which clients can send to, receive from, or browse a specified
queue. Subscription messaging policies are used to control which clients
can receive messages from a specified global-shared durable subscription.
Subscription messaging policies are also used to control which clients
can control the creation and deletion of global-shared durable subscriptions
on a specified subscription name. For more information about messaging
policies, see <xref format="dita" href="../Security/se00004_.dita"
scope="local" type="concept"></xref>.</p> <note>All messaging policies
for an endpoint are checked for authorization, either until authorization
is granted, or all messaging policies are checked. Therefore, you
cannot create a messaging policy that restricts the authority of particular
clients if another messaging policy grants more authority to those
clients. For example, a subscription messaging policy is created where
all clients with a user ID that starts with <codeph>example</codeph> are
allowed to control and receive messages. Another subscription messaging
policy is created such that the client with the user ID <codeph>exampleUser</codeph> is
only allowed to receive messages from the subscription. The client
with the user ID <codeph>exampleUser</codeph> is able to both control
and receive messages, because of the first messaging policy.</note><p
id="WhenYouCreateAMessagingPolicyYouMus">When you create a messaging
policy, you must specify the following components:<ul>
<li><dl><dlentry>
<dt>Name</dt>
<dd>Specifies the name that identifies the messaging policy.</dd>
<dd>The name must not have leading or trailing spaces and cannot contain
control characters, commas, double quotation marks, backslashes, or
equal signs. The first character must not be a number or any of the
following special characters: <p><codeph>! # $ % &amp; ' ( ) * + -
. / : ; &lt; > ? @</codeph></p></dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Destination</dt>
<dd>For messaging policies that apply to topics, <codeph>Destination</codeph> specifies
the topic string that the messaging policy applies to.</dd>
<dd>For messaging policies that apply to queues, <codeph>Destination</codeph> specifies
the queue that the messaging policy applies to.</dd>
<dd>For messaging policies that apply to global-shared durable subscriptions, <codeph>Destination</codeph> specifies
the subscription name that the messaging policy applies to.</dd>
<dd>You can use an asterisk (*) as a wildcard. For example, to apply
the message policy to topic strings <codeph>TOPICA/#</codeph>, enter
a destination of <codeph>TOPICA/*</codeph>. You must take care when
you use a wildcard to ensure that you do not grant greater authority
to topics than intended. For more information about how wildcard characters
can be used, see <xref format="dita"
href="../Security/se00004_.dita#se00004_/wildcards" scope="local"
type="section"></xref>.</dd>
<dd>The dollar sign ($) and asterisk (*) have special meanings in
the destination field. To use these characters as literals, use <codeph>${$}</codeph> for
a dollar sign, and use <codeph>${*}</codeph> for an asterisk.</dd>
<dd>You can use variable substitution in the topic string or queue
to ensure that only clients with specific user IDs, group IDs, client
IDs, or client certificate common names can access a topic. The variables
are:<ul>
<li><codeph>${UserID}</codeph> for the user ID </li>
<li><codeph>${GroupID}</codeph> for the group ID</li>
<li><codeph>${ClientID}</codeph> for the client ID</li>
<li><codeph>${CommonName}</codeph> for the client certificate common
name </li>
</ul></dd>
<dd>For example, if a topic string in a messaging policy is <codeph>ExampleTopic/TopicA/${ClientID}</codeph>,
a client with an ID of <codeph>client_a</codeph> can access topic <codeph>ExampleTopic/TopicA/client_a</codeph>.
A client with an ID of <codeph>client_b</codeph> cannot access topic <codeph>ExampleTopic/TopicA/client_a</codeph>,
but can access <codeph>ExampleTopic/TopicA/client_b</codeph>.</dd>
<dd>For more information about using variable substitution, see <xref
format="dita" href="../Security/se00018.dita" scope="local"
type="concept"></xref>.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Destination Type</dt>
<dd>Specifies whether the messaging policy applies to topics, queues,
or global-shared durable subscriptions.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Action</dt>
<dd>Specifies which messaging actions can be used by clients that
connect to the endpoints associated with this messaging policy.</dd>
<dd>For a destination type of topic, you can choose between publish
and subscribe, or you can enable both.</dd>
<dd>For a destination type of queue, you can choose between send,
receive, and browse, or a combination of the three options.</dd>
<dd>For a destination type of subscription, you can choose between
control and receive, or you can enable both. Control allows a client
to create or delete the global-shared durable  subscription. To create
or delete a global-shared durable subscription, a client must also
be allowed to receive messages. Therefore, if you select control,
you must also select receive within the same messaging policy. </dd>
<dd>When you use the <ph
conref="../TextEntities.dita#TextEntities/ISMgui"></ph>, this component
is called <parmname>Authority</parmname>. When you use the command
line, this component is called <parmname>ActionList</parmname>.</dd>
</dlentry></dl></li>
</ul></p><p>You can also specify the following components:<ul>
<li><dl><dlentry>
<dt>Max Messages</dt>
<dd>Specifies the maximum number of messages that are kept for a subscription.
This value is a guideline, rather than an absolute limit. If the system
is running under stress, then the number of buffered messages on a
subscription might be slightly higher than the <codeph>MaxMessages</codeph> value.</dd>
<dd>This value must be in the range 1 - 20,000,000.</dd>
<dd>This component is not valid if the destination type is <codeph>queue</codeph>.</dd>
<dd> The Max Messages value for a global-shared durable subscription
must be specified in the subscription messaging policy. If a Max Messages
value is also specified in the associated topic messaging policy,
the value from the subscription messaging policy is used. </dd>
<dd>If you change the Max Messages value, the change is applied to
all subscriptions that are using the policy.</dd>
<dd>If you lower the Max Messages value, existing subscriptions that
have more messages in their buffer than the new Max Messages value
cannot accept further messages until the number of messages in the
buffer falls below the new value. The setting of Max Messages Behavior
specifies the action that is to be taken when this situation arises.</dd>
</dlentry></dl><dl><dlentry>
<dt>Max Messages Behavior</dt>
<dd>Specifies the behavior that is applied when the number of messages
in the buffer for a subscription reaches the max messages value. That
is, when the buffer for a subscription is full. The behavior is applied
to both durable and non-durable subscriptions.</dd>
<dd>The behavior can be one of the following options:<ul>
<li><dl><dlentry>
<dt>Reject new messages</dt>
<dd>New messages are not accepted on the buffer for the subscription.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Discard old messages</dt>
<dd>A percentage of the old messages on the buffer for the subscription
are discarded. If a retained message is one of the old messages, it
is discarded. The quality of service, persistence, and priority of
the message does not prevent a message from being discarded. Therefore,
if all messages must be received in order for your applications to
function correctly, you cannot set <codeph>Max Messages Behavior</codeph> to <codeph>Discard
Old messages</codeph>.</dd>
</dlentry></dl></li>
</ul>The default value is to reject new messages.</dd>
<dd>If you change the Max Messages Behavior setting, the change is
applied to all subscriptions that are using the policy.</dd>
<dd>This component is not valid if the destination type is <codeph>queue</codeph>.</dd>
</dlentry></dl></li>
<li> <dl><dlentry>
<dt>Max Message Time to Live</dt>
<dd>Specifies the maximum time, in seconds, that a sent message that
is associated with the messaging policy can exist for in <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph>.</dd>
<dd>The value must be either <codeph>unlimited</codeph> or in the
range 1-2147483647.</dd>
<dd>The default value is <codeph>unlimited</codeph> and means that
messages will not expire unless the publishing application specifies
a time for messages to exist for.</dd>
<dd>This value is applied only when the messaging policy has either: <ul>
<li>A destination type of topic and includes an action of publish,
or </li>
<li>A destination type of queue and includes an action of send.</li>
</ul></dd>
<dd>If you change the Max Message Time To Live value, the change is
applied to all publishers and senders that are using the policy but
is effective only on messages that are sent after the change has been
made.</dd>
</dlentry></dl> </li>
<li> <dl><dlentry>
<dt>Disconnected client notification</dt>
<dd>Specifies whether notification messages are published for disconnected
MQTT clients on arrival of a message.</dd>
<dd>This value is only applied when the messaging policy has a destination
type of topic, and the protocol that is used is MQTT.</dd>
<dd>The notification messages are published to the reserved system
topic <codeph>$SYS/DisconnectedClientNotification</codeph></dd>
<dd>If you change the Disconnected client notification setting, the
change is applied to all subscriptions that are using the policy.</dd>
</dlentry></dl> </li>
</ul>You must specify at least one of the following filters:<ul>
<li><dl><dlentry>
<dt>Client IP address</dt>
<dd>Specifies the client IP addresses that are allowed to use the
messaging actions that are specified in the messaging policy. The
client IP addresses are allowed to use the messaging actions only
on the topics or queues that are specified in the policy.</dd>
<dd>The IP address can contain an asterisk (*), or a comma-separated
list of IPv4 or IPv6 addresses or ranges. For example, 192.0.2.32,
192.0.0.0, 192.0.2.0-192.0.2.100. The range must be specified from
low to high.</dd>
<dd>IPv6 addresses must be enclosed in brackets <codeph>[ ]</codeph>.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Client ID</dt>
<dd>Specifies the client ID that is allowed to use the messaging actions
that are specified in the messaging policy. The client ID is allowed
to use the messaging actions only on the topics or queues that are
specified in the policy.</dd>
<dd>You cannot specify a client ID if the policy is for subscriptions.</dd>
<dd>You can use an asterisk (*) at the end of the value to match 0
or more characters.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>User ID</dt>
<dd>Specifies the messaging user ID that is allowed to use the messaging
actions that are specified in the messaging policy. The messaging
user ID is allowed to use the messaging actions only on the topics
or queues that are specified in the policy.</dd>
<dd>You can use an asterisk (*) at the end of the value to match 0
or more characters.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Group Name</dt>
<dd>Specifies the messaging group that is allowed to use the messaging
actions that are specified in the messaging policy. The messaging
group is allowed to use the messaging actions only on the topics or
queues that are specified in the policy.</dd>
<dd>You can use an asterisk (*) at the end of the value to match 0
or more characters.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Certificate Common Name</dt>
<dd>Specifies the client certificate common name that must be used
for a client to be allowed to use the actions that are specified in
the messaging policy. The client certificate common name allows clients
to use the messaging actions only on the topics or queues that are
specified in the policy.</dd>
<dd>You can use an asterisk (*) at the end of the value to match 0
or more characters.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Protocol</dt>
<dd>Specifies which protocols are allowed to use the actions that
are specified in the messaging policy on the topics or queues that
are specified in the policy.</dd>
<dd>You must specify at least one protocol in order for clients to
connect.</dd>
</dlentry></dl></li>
</ul></p><p>Each filter is applied in combination. If you specify
several filters, each condition must be met in order for the actions
that are specified in the messaging policy to be allowed. For each
filter that you do not specify, all values for that filter are allowed.</p><p>For
example, a messaging policy is created that specifies:</p><p><codeph>group
name must be <codeph>SILVER</codeph> AND user ID must be <codeph>*.com</codeph> AND
protocol must be JMS</codeph></p><p> A client is allowed to perform
messaging actions from any IP address, with any client ID, and any
certificate common name. However, if the client does not have a group
name of <codeph>SILVER</codeph>, or if the user ID does not end with <codeph>.com</codeph>,
or if the client is not using JMS, the messaging actions are not allowed.</p></section>
<section id="dynamicpolicy"><title>Dynamic updates to messaging policies</title><p>When
you update the following messaging policy parameters, the updates
are applied dynamically to all the subscriptions and publishers that
are using the messaging policy:<ul>
<li><parmname>Max Messages</parmname></li>
<li><parmname>Max Messages Behavior</parmname></li>
<li><parmname>Max Message Time to Live</parmname></li>
<li><parmname>Disconnected client notification</parmname></li>
</ul></p><p>Dynamic policy updates for the <parmname>Max Messages</parmname>, <parmname>Max
Messages Behavior</parmname>, and <parmname>Disconnected client notification</parmname> parameters
are immediately applied to all subscriptions that are using the messaging
policy. Updates to the <parmname>Max Message Time to Live</parmname> parameter,
which is a parameter on the publisher, apply to all messages that
the publisher sends after the update.</p><p>The messaging policy that
is associated with a subscription is determined when a subscription
connects and can vary from connection to connection. <ul>
<li>For durable subscriptions, the applicable messaging policy is
always the last policy with which the client connected.</li>
<li>For non-durable subscriptions, the applicable messaging policy
is the policy used by the client for the active connection.</li>
<li>For global-shared durable subscriptions, the applicable messaging
policy is the messaging policy that has <codeph>DestinationType=Subscription</codeph> specified
and was used by the client that originally created the global-shared
durable subscription. Unlike other types of subscriptions, the messaging
policy associated with a global-shared durable subscription does not
change when a client reconnects.</li>
</ul>You can use the <cmdname>imaserver stat Subscription</cmdname> command
or the <uicontrol>Monitoring</uicontrol> page in the <ph
conref="../TextEntities.dita#TextEntities/ISMgui"></ph> to determine
the messaging policy that is associated with the subscription.</p><p>When
a client reconnects to <ph conref="../TextEntities.dita#TextEntities/ISM"></ph>,
the values of these parameters in the messaging policy that authorizes
the client on re-connection are applied dynamically to the subscriptions
being used by the client. The client might experience unexpected behavior
if these values are different than the values that were in use the
last time that the client was connected. There are a number of reasons
for the values of these parameters to be different when a client reconnects:<ul
id="diffpolicylist">
<li>If the client is authorized by the same messaging policy, the
value of any of these parameters might have changed since the last
time that the client application connected.</li>
<li>The client application might reconnect by using a different endpoint
to the one it used the last time that it connected. The endpoint that
the client now uses might have different messaging policies, or it
might have the same messaging policies but specified in a different
order.</li>
<li>A new messaging policy might have been added to the messaging
policy list on the endpoint above the messaging policy that was being
used when the client last connected. The client is then authorized
to use the new messaging policy.</li>
<li>The filters or destination in the messaging policy, or the one
above it in the list, might have changed.</li>
<li>The messaging policy that was being used when the client was last
connected might have been removed from the endpoint.</li>
<li>The client application might reconnect by using a different IP
address to the one it was using when it was last connected, and the
value of the <parmname>ClientAddress</parmname> filter results in
the selection of a different messaging policy.</li>
</ul></p></section>
<section id="endpoint"><title>Endpoints</title><p>An endpoint allows
a client to connect to <ph conref="../TextEntities.dita#TextEntities/ISM"></ph>.
For more information about endpoints, see <xref format="dita"
href="../Overview/ov00110_.dita" scope="local" type="concept"></xref>.</p><p>Each
endpoint must have at least one <xref format="dita"
href="ad00360_.dita#ad00360_/connpolicy" scope="local" type="section">connection
policy</xref>, and at least one <xref format="dita"
href="ad00360_.dita#ad00360_/msgpolicy" scope="local" type="section">messaging
policy</xref>.</p><p>When you create an endpoint, you can specify
the following components:<ul>
<li><dl><dlentry>
<dt>Name</dt>
<dd>Specifies the name that identifies the endpoint.</dd>
<dd>The name must not have leading or trailing spaces and cannot contain
control characters, commas, double quotation marks, backslashes, or
equal signs. The first character must not be a number or any of the
following special characters: <p><codeph>! # $ % &amp; ' ( ) * + -
. / : ; &lt; > ? @</codeph></p></dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Port</dt>
<dd>Specifies the port that clients connect to.</dd>
<dd>The port number must be in the range 1 - 32767, 61001 - 65535.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>IP address</dt>
<dd>Specifies one, or all, of the available IP addresses for the client
to connect to.</dd>
<dd>When you create or edit an endpoint by using the command line,
this component is called <parmname>Interface</parmname>.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Protocol</dt>
<dd>Specifies the protocols that the clients can use to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph>.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Enabled</dt>
<dd>Specifies whether the endpoint is enabled.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Max Message Size</dt>
<dd>Specifies the maximum size that a message can be when sent to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> through this
endpoint.</dd>
<dd>The size is specified in KB, and must be in the range 1 - 262,144.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Security Profile</dt>
<dd>Specifies the security profile to apply to the endpoint. The security
profile defines the Transport Layer Security for the endpoint. The
security profile must exist before it can be applied to the endpoint.
For more information about security profiles, see <xref format="dita"
href="../Security/se00005_.dita" scope="local" type="concept"></xref>.
For more information about configuring security profiles, see <xref
format="dita" href="ad00700_.dita" scope="local"></xref>.</dd>
</dlentry></dl></li><?Pub Caret -1?>
<li><dl><dlentry>
<dt>Connection Policies</dt>
<dd>Specifies one or more connection policies to apply to the endpoint.</dd>
<dd>You can use the same connection policy with more than one endpoint
within a message hub.</dd>
<dd>When <ph conref="../TextEntities.dita#TextEntities/ISM"></ph> checks
whether a client is authorized to connect, each connection policy
is checked in the order that the policies are specified on the endpoint.
The policies are checked until either authorization is granted, or
all connection policies on the endpoint are checked. You can view
the order that connection policies are specified on an endpoint by
using the <ph conref="../TextEntities.dita#TextEntities/ISMgui"></ph>,
or by using the <cmdname>imaserver show endpoint</cmdname> command.
You can change the order by using the <ph
conref="../TextEntities.dita#TextEntities/ISMgui"></ph>, or by using
the <cmdname>imaserver update endpoint</cmdname> command.</dd>
</dlentry></dl></li>
<li><dl><dlentry>
<dt>Messaging Policies</dt>
<dd>Specifies one or more messaging policies to apply to the endpoint.</dd>
<dd>You can use the same messaging policy with more than one endpoint
within a message hub.</dd>
<dd>When <ph conref="../TextEntities.dita#TextEntities/ISM"></ph> checks
whether a client is authorized to perform messaging actions, each
messaging policy is checked in the order that the policies are specified
on the endpoint. The policies are checked until either authorization
is granted, or all messaging policies on the endpoint are checked.
You can view the order that messaging policies are specified on an
endpoint by using the <ph
conref="../TextEntities.dita#TextEntities/ISMgui"></ph>, or by using
the <cmdname>imaserver show endpoint</cmdname> command. You can change
the order by using the <ph
conref="../TextEntities.dita#TextEntities/ISMgui"></ph>, or by using
the <cmdname>imaserver update endpoint</cmdname> command.</dd>
</dlentry></dl></li>
     <li>
      <dl>
       <dlentry>
        <dt>Max Send Size</dt>
        <dd>
         <p>Specifies the maximum size that part of a message can be when it is sent. </p>
        </dd>
        <dd>The size is specified in bytes, and must be in the range 128 - 65536.</dd>
<dd>You might want to use this option in environments where resource-constrained devices are used; set a low value for <parmname>Max Send Size</parmname>, for example 256 bytes, and disable the batching of messages by setting <parmname>Batch Messages</parmname> to False. </dd>
        <dd>
         <p>The default value is 16384 bytes.</p>
        </dd>
       </dlentry>
      </dl>
     </li>
<li>
<dl>
<dlentry>
<dt>Batch Messages</dt>
<dd>Specifies whether messages can be sent in batches or must be sent singly.</dd>
<dd>You might want to set this option to False in environments where resource-constrained devices are used to ensure that single messages are sent; ensure that you also set a low value for <parmname>Max Send Size</parmname>, for example 256 bytes.</dd>
<dd>The default value is True.</dd>
</dlentry>
</dl>
</li>
</ul></p><p>When you configure an endpoint by using the <ph
     conref="../TextEntities.dita#TextEntities/RESTAPI"/>, you must also specify the following component:<ul>
     <li>
      <dl>
       <dlentry>
        <dt>MessageHubName</dt>
        <dd>Specifies the name of the message hub that the endpoint belongs to.</dd>
       </dlentry>
      </dl>
     </li>
    </ul></p><p>For more information about configuring message hubs by
using the <ph conref="../TextEntities.dita#TextEntities/ISMgui"></ph>,
see <xref href="ad00361_.dita"></xref>.</p><p>For more information about configuring message hubs by using <ph
     conref="../TextEntities.dita#TextEntities/RESTAPIs"/>, see <xref href="ad00323_.dita"/>.</p></section>
</conbody>
<related-links>
<link href="ad00200_.dita"></link>
</related-links>
</concept>
<?Pub *0000029994?>

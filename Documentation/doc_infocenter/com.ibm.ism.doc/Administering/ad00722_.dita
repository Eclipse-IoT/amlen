<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="ad00722_" xml:lang="en-us">
<title>Creating and updating a client certificate by using <ph
    conref="../TextEntities.dita#TextEntities/RESTAPIs"/></title>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. To enable the tags, right-click, select Refactoring > Toggle Comment.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc>System administrators can copy a client certificate to be used in <ph
    conref="../TextEntities.dita#TextEntities/ISM"/> by using the <ph
    conref="../TextEntities.dita#TextEntities/ISM"
    /> REST API PUT method. The certificate is copied to <filepath>/var/lib/amlen-server/userfiles</filepath> System administrators can then import the client certificate to the truststore of the certificate profile that is referenced in the security profile that is associated with the client certificate by using the <ph
    conref="../TextEntities.dita#TextEntities/ISM"
    /> REST API POST method. Existing client certificates can also be updated by system administrators by using the <ph
    conref="../TextEntities.dita#TextEntities/ISM"/> REST API POST method.</shortdesc>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<taskbody>
<context>
<p>You can copy a client certificate to be used in <ph
        conref="../TextEntities.dita#TextEntities/ISM"/> by using the <ph
        conref="../TextEntities.dita#TextEntities/ISM"/> REST API PUT, or by using the <ph
        conref="../TextEntities.dita#TextEntities/ISMgui"
        />. For more information about using the <ph
        conref="../TextEntities.dita#TextEntities/ISMgui"
        /> to upload a client certificate, see <xref href="ad00721_.dita"/>.</p>
</context>
<steps>
<step id="1">
        <cmd>To create a client certificate, first copy a trusted CA certificate or a client certificate to <ph
          conref="../TextEntities.dita#TextEntities/ISM"/> by using the <ph
          conref="../TextEntities.dita#TextEntities/ISM"
          /> REST API PUT method with the following <ph
          conref="../TextEntities.dita#TextEntities/ISM"/> file URI: </cmd>
        <info>
          <p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/file/&lt;filename></codeph></p>
          <p>The certificate is copied to <filepath>/var/lib/amlen-server/userfiles</filepath></p>
        </info>
      </step>
<step>
        <cmd>To create or update a client certificate, use the <ph
            conref="../TextEntities.dita#TextEntities/ISM"/> REST API POST method
          with the following <ph conref="../TextEntities.dita#TextEntities/ISM"/>
          configuration URI:</cmd>
        <info>
          <p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/</codeph></p>
        </info>
      </step>
<step>
<cmd>Provide ClientCertificate object configuration data in the payload of the POST method by using the following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>. Ensure that capitalization and double quotation marks are used as shown. </cmd>
<info><codeblock>
{    
  "ClientCertificate": [{"SecurityProfileName": "string", "CertificateName": "string", "Overwrite": true|false },
                        {"SecurityProfileName": "string", "CertificateName": "string", "Overwrite": true|false },
                        {"SecurityProfileName": "string", "CertificateName": "string", "Overwrite": true|false }]
}</codeblock>Where:<dl>
          <dlentry>
            <dt><varname>CertificateName</varname></dt>
            <dd>Required.</dd>
            <dd>Specifies a value for the client certificate.</dd>
            <dd>The name can be a maximum of 255 alphanumeric characters. </dd>
            <dd>The name must not have leading or trailing spaces and cannot contain control characters, commas, double quotation marks, backslashes, or equal signs. The first character must not be a number. </dd>
            <dd>After the profile is created, this name cannot be changed.</dd>
          </dlentry>
          <dlentry>
            <dt>SecurityProfileName</dt>
            <dd>Required if you are creating a client certificate.</dd>
            <dd>Specifies the name of the security profile that the client certificate is associated with.</dd>
          </dlentry>
          <dlentry>
            <dt>Overwrite: true|false</dt>
            <dd>Specifies whether an existing certificate is overwritten if it has the same name.</dd>
            <dd>The default value is false which means that an existing certificate is not overwritten if it has the same name.</dd>
          </dlentry>
          </dl><p>You can check that the configuration of your client certificate is as expected by using the <ph
          conref="../TextEntities.dita#TextEntities/ISM"
          /> REST Administration API GET method. For more information about the GET method, see <xref
          href="ad00366_.dita"/>.</p></info>
</step>
</steps>
<example>The following example shows the steps required to create a client certificate by using cURL:<ol>
        <li>Copy the client certificate to <filepath>/var/lib/amlen-server/userfiles</filepath> by using the REST API PUT method:<codeblock>
curl -X PUT -T imaCA-crt.pem  http://127.0.0.1:9089/ima/v1/file/TestCACertKey.pem</codeblock></li>
        <li>Copy the certificate and key to <filepath>/var/lib/amlen-server/userfiles</filepath> to create a CertificateProfile by using the REST API PUT method:<codeblock>
curl -X PUT -T certFree.pem  http://127.0.0.1:9089/ima/v1/file/TestCert.pem
curl -X PUT -T keyFree.pem http://127.0.0.1:9089/ima/v1/file/TestKey.pem</codeblock></li>
        <li>Create and import the CertificateProfile by using the REST API POST method: <codeblock>
curl -X POST \
  -H 'Content-Type: application/json'  \
  -d '{
       "CertificateProfile":{
        "TestCertProf":{
         "Certificate": "TestCert.pem",
         "Key": "TestKey.pem"
       }
      }
     }
  ' \
http://127.0.0.1:9089/ima/v1/configuration</codeblock></li>
        <li>Create the SecurityProfile by using the REST API POST method:
          <codeblock>
curl -X POST 
  -H 'Content-Type: application/json'  \
  -d '{
       "SecurityProfile":{
        "TestSecProf":{
         "CertificateProfile": "TestCertProf",
         "UsePasswordAuthentication": false
       }
      }
     }
  ' \
http://127.0.0.1:9089/ima/v1/configuration</codeblock></li>
        <li>Create the ClientCertificate by using the REST API POST method:
          <codeblock>
curl -X POST 
  -H 'Content-Type: application/json'  \
  -d '{"ClientCertificate":[{
        "SecurityProfileName":"TestSecProf",
        "CertificateName": "TestCACertKey"
       }]
      }
  ' \
http://127.0.0.1:9089/ima/v1/configuration</codeblock></li>
      </ol><?Pub Caret 340?></example>
</taskbody>
</task>

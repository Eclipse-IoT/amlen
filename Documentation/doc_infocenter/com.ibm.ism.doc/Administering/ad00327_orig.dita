<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<task id="ad00327_" xml:lang="en-us">
<title>Creating and updating a connection policy by using <ph
   conref="../TextEntities.dita#TextEntities/RESTAPIs"/></title>
<shortdesc>System administrators can create and update connection policies by using <ph
      conref="../TextEntities.dita#TextEntities/RESTAPIs"/>.</shortdesc>
<taskbody>
<prereq>Ensure that the following message hub creation tasks are complete:<ol>
<li><xref href="ad00323_.dita">Create a message hub</xref>.</li>
</ol></prereq>
<context><p>You can create a connection policy by using a <ph
     conref="../TextEntities.dita#TextEntities/RESTAPI"/>, or by using the <ph
     conref="../TextEntities.dita#TextEntities/ISMgui"/>. For more information about using the <ph
     conref="../TextEntities.dita#TextEntities/ISMgui"/> to create a connection policy, see <xref
     href="ad00361_.dita"/>.</p><p>You can use the <ph conref="../TextEntities.dita#TextEntities/ISM"/> REST API POST method to create
    or update one or more connection policy objects. If the connection policy that is specified in
    the request does not exist in the <ph conref="../TextEntities.dita#TextEntities/ISM"/> configuration table, then the  connection
    policy is created. Otherwise the  connection policy configuration is updated.</p>For more
   information about the components you must specify to create a connection policy, including naming
   restrictions, see <xref href="ad00360_.dita"/>.</context>
<steps>
<step>
<cmd>To create or update one or more connection policy objects, use the <ph conref="../TextEntities.dita#TextEntities/ISM"/>
REST API POST method with the following <ph conref="../TextEntities.dita#TextEntities/ISM"/> configuration URI:</cmd>
        <info>
          <p><codeph>https://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/</codeph></p>
        </info>
      </step>
   <step>
    <cmd>Provide ConnectionPolicy object configuration data in the payload of the POST method by
     using the following schema. <parmname>Content-type</parmname> is set to
      <userinput>application/json</userinput>: </cmd>
    <info><codeblock>
     {    
       "ConnectionPolicy": {
         "&lt;NameOfConnectionPolicy>": {
           "Description": "string",
           "AllowDurable": "boolean",
           "AllowPersistentMessages": "boolean",
           "ClientID": "string",
           "ClientAddress": "string",
           "UserID": "string",
           "GroupID": "string",
           "CommonNames": "string",
           "Protocol": "string"
          }
        }
      }</codeblock><?Pub Caret 283?>Where:<ul>
            <li>
              <dl>
                <dlentry>
                  <dt><varname>NameOfConnectionPolicy</varname></dt>
                  <dd>Specifies the name of the connection policy.</dd>
                  <dd>The name must not have leading or trailing spaces and cannot contain control
                    characters, commas, double quotation marks, backslashes, or equal signs. The
                    first character must not be a number or any of the following special characters:
                        <p><codeph>! # $ % &amp; ' ( ) * + - . / : ; &lt; > ? @</codeph></p></dd>
                  <dd>After the connection policy is created, you cannot change this name.</dd>
                </dlentry>
              </dl>
            </li>
            <li>
              <dl>
                <dlentry>
                  <dt>Description</dt>
                  <dd>Optional.</dd>
                  <dd>Specifies a description for the connection policy.</dd>
                  <dd>If you do not want a description, omit <codeph>"Description":
                        "<varname>description</varname>"</codeph>.</dd>
                </dlentry>
              </dl>
            </li>
            <li>
              <dl>
                <dlentry>
                  <dt>AllowDurable=true|false</dt>
                  <dd>Optional.</dd>
                  <dd>Specifies whether MQTT clients can connect using a setting of
                      <codeph>cleanSession=0</codeph> (true) or not (false).</dd>
                  <dd>The default value is true.</dd>
                  <dd>This value is applied only when the protocol that is being used is MQTT.</dd>
                </dlentry>
              </dl>
            </li>
            <li>
              <dl>
                <dlentry>
                  <dt>AllowPersistentMessages=true|false</dt>
                  <dd>Optional.</dd>
                  <dd>Specifies whether MQTT clients can publish messages with a QoS of 1 or 2
                    (true) or not (false).</dd>
                  <dd>The default value is true.</dd>
                  <dd>This value is applied only when the protocol that is being used is MQTT.</dd>
                </dlentry>
              </dl>
            </li>
          </ul>You must specify at least one of the following filters:<ul>
            <li>
              <dl>
                <dlentry>
                  <dt>ClientID</dt>
                  <dd>Optional.</dd>
                  <dd>Specifies the client ID that is allowed to connect to <ph
                      conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
                  <dd>You can use an asterisk (*) at the end of the value to match 0 or more
                    characters.</dd>
                  <dd>You can use variable substitution in the client ID to ensure that only clients
                    with a client ID that matches the user ID or the certificate common name, can
                    connect. The variable for user IDs is <codeph>${UserID}</codeph>. The variable
                    for certificate common name is <codeph>${CommonName}</codeph>. You can specify
                    extra characters along with the variable. For example, you can specify that the
                    client ID must match <codeph>myClient/${UserID}</codeph>. In this case, a client
                    with the user ID <codeph>userA</codeph> and the client ID
                      <codeph>myClient/userA</codeph> can connect. A client with the user ID
                      <codeph>userB</codeph> and the client ID <codeph>myClient/userB</codeph> can
                    connect. However, a client with the user ID <codeph>userB</codeph>, but the
                    client ID <codeph>notMyClient</codeph>, cannot connect.</dd>
                  <dd>To use the default value, where all client ID values are allowed to connect,
                    omit <codeph>"ClientID": "<varname>clientID</varname>"</codeph>.</dd>
                </dlentry>
              </dl>
            </li>
            <li>
              <dl>
                <dlentry>
                  <dt>ClientAddress</dt>
                  <dd>Optional.</dd>
                  <dd>Specifies the client IP addresses that are allowed to connect to <ph
                      conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
                  <dd>The IP address can contain an asterisk (*), or a comma-separated list of IPv4
                    or IPv6 addresses or ranges. For example, 192.0.2.32, 192.0.0.0,
                    192.0.2.0-192.0.2.100. The range must be specified from low to high.</dd>
                  <dd>IPv6 addresses must be enclosed in brackets <codeph>[ ]</codeph>.</dd>
                  <dd>To use the default value, where all client IP addresses are allowed to
                    connect, omit <codeph>"ClientAddress":
                    "<varname>IP_Address</varname>"</codeph>.</dd>
                </dlentry>
              </dl>
            </li>
            <li>
              <dl>
                <dlentry>
                  <dt>UserID</dt>
                  <dd>Optional.</dd>
                  <dd>Specifies the messaging user ID that is allowed to connect to <ph
                      conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
                  <dd>You can use an asterisk (*) at the end of the value to match 0 or more
                    characters.</dd>
                  <dd>To use the default value, where all user ID values are allowed to connect,
                    omit <codeph>"UserID": "<varname>UserID</varname>"</codeph>.</dd>
                </dlentry>
              </dl>
            </li>
            <li>
              <dl>
                <dlentry>
                  <dt>GroupID</dt>
                  <dd>Optional.</dd>
                  <dd>Specifies the messaging group that is allowed to connect to <ph
                      conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
                  <dd>You can use an asterisk (*) at the end of the value to match 0 or more
                    characters.</dd>
                  <dd>To use the default value, where all groups are allowed to connect, omit
                      <codeph>"GroupID": "<varname>GroupID</varname>"</codeph>.</dd>
                </dlentry>
              </dl>
            </li>
            <li>
              <dl>
                <dlentry>
                  <dt>CommonNames</dt>
                  <dd>Optional.</dd>
                  <dd>Specifies the client certificate common name that must be used to connect to
                      <ph conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
                  <dd>You can use an asterisk (*) at the end of the value to match 0 or more
                    characters.</dd>
                  <dd>To use the default value, where all client certificates are allowed to
                    connect, omit <codeph>"CommonNames":
                    "<varname>CommonNames</varname>"</codeph>.</dd>
                </dlentry>
              </dl>
            </li>
            <li>
              <dl>
                <dlentry>
                  <dt>Protocol</dt>
                  <dd>Specifies which protocols are allowed to connect to <ph
                      conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
                  <dd>You can choose from JMS and MQTT protocols.
                    <!--by default. If there are any protocol plug-ins installed on the <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> server, you can
specify these as well.--></dd>
                  <dd>To specify more than one value, separate each value with a comma.</dd>
                  <!--<dd>You can use the value <codeph>All</codeph> to specify all available
protocols.</dd>-->
                </dlentry>
              </dl>
            </li>
          </ul></info>
   </step>
</steps>
<example>
      <p>The following example shows a POST method to create a connection policy called
        "DemoConnectionPolicy" by using cURL:</p>
      <codeblock>

       curl -X POST \
         -H 'Content-Type: application/json' \
         -d '
             { 
               "ConnectionPolicy": {   
                 "DemoConnectionPolicy": {
                   "Description": "Connection policy to authorize connection from demo client.",
                   "ClientID": "*"
                  }
                }
              }
            '\
          https://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/
</codeblock>
      <p>The following example shows an example response to the POST method:</p>
      <codeblock>
       {        
         "Version": "v1",
         "Code": "CWLNA6011",
         "Message": "The requested configuration change has completed successfully."
       }
</codeblock>
    </example>
<postreq>You must complete the following tasks to finish the message
hub configuration:<ol>
<li><xref href="ad00368_.dita">Create messaging policies</xref>.</li>
<li><xref href="ad00369_.dita">Create endpoints</xref>.</li>
</ol></postreq>
</taskbody>
<related-links>
<link href="ad00360_.dita"></link>
<link href="ad00323_.dita"></link>
</related-links>
</task>
<?Pub *0000008400?>

<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<task id="ad00282_" xml:lang="en-us">
<title>Starting, restarting and stopping the <ph conref="../TextEntities.dita#TextEntities/ISM"/>
    server by using <ph conref="../TextEntities.dita#TextEntities/RESTAPIs"/></title>
<shortdesc>System administrators can restart and stop the <ph
      conref="../TextEntities.dita#TextEntities/ISM"/> server by using <ph
      conref="../TextEntities.dita#TextEntities/RESTAPIs"/>.</shortdesc><?Pub Caret 39?>
<taskbody>
<context>You can restart and stop the server by using <ph
        conref="../TextEntities.dita#TextEntities/RESTAPIs"/> or by using the <ph
        conref="../TextEntities.dita#TextEntities/ISMgui"/>. For more information about using the
        <ph conref="../TextEntities.dita#TextEntities/ISMgui"/> to restart and stop the server, see
        <xref href="ad00281_.dita"/>. You can start the server by using docker or systemctl
      commands.</context>
<steps>
<step>
        <cmd>Check the status of the <ph conref="../TextEntities.dita#TextEntities/ISM"/> server, by
          using the <ph conref="../TextEntities.dita#TextEntities/ISM"/> REST API GET method with
          the following <ph conref="../TextEntities.dita#TextEntities/ISM"/> service URI:</cmd>
        <info>
          <p><codeph>http://&lt;admin-endpoint-IP:port>/ima/v1/service/status</codeph></p>
        </info>
        <choices>
          <choice>If the server status is <codeph>Running</codeph>, the server is running. You can
            restart or stop the server by using REST Administration APIs.</choice>
          <choice>If the server status is <codeph>Maintenance</codeph>, the server is in maintenance
            mode. For more information about maintenance mode, see <xref format="dita"
              href="../Troubleshooting/tr00006_.dita" scope="local"/>.</choice>
        </choices>
        <info>
          <note>If the server is not running, a failure to connect error is received in response to
            the REST call. You can start the server by using docker or systemctl commands.</note>
        </info>
      </step>
<step><cmd>Choose an appropriate action:</cmd>
<choices>
          <choice>To start the server in a Docker environment, use the  following
                command:<p><codeph>docker start <varname>&lt;container
            name></varname></codeph></p></choice>
          <choice>To start the server on a Host OS, use the following command:<p><codeph>systemctl
                start imaserver</codeph></p></choice>
          <choice>To restart the server use the <ph conref="../TextEntities.dita#TextEntities/ISM"/>
            REST API POST method with the following <ph
              conref="../TextEntities.dita#TextEntities/ISM"/> service
                URI:<p><codeph>http://&lt;admin-endpoint-IP:port>/ima/v1/service/restart</codeph></p><ul>
              <li>
                <p>To restart the server in maintenance mode, provide configuration data in the
                  payload of the POST method by using the following schema: <codeblock>
{    
  "Service": "Server", 
      "Maintenance": "start"|"stop"
}</codeblock>Where:<dl>
                    <dlentry>
                      <dt>Maintenance: "start"|"stop"</dt>
                      <dd>Optional.</dd>
                      <dd>If this option is set to <userinput>start</userinput>, the server comes up
                        in maintenance mode on restart. If set to <userinput>stop</userinput>, the
                        server comes up in production mode on restart. </dd>
                    </dlentry>
                  </dl></p>
              </li>
              <li>
                <p>To restart the server and to specify whether the store is cleaned as part of the
                  shutdown process, provide configuration data in the payload of the POST method by
                  using the following schema: <codeblock>
{    
  "Service": "Server", 
      "CleanStore": true|false
}</codeblock>Where:<dl>
                    <dlentry>
                      <dt>CleanStore: true|false</dt>
                      <dd>Optional.</dd>
                      <dd>
                        <p>If this option is set to <userinput>true</userinput>, then the store is
                          cleaned as part of the shutdown process. The server does not need to be in
                          maintenance mode for the store to be cleaned.<note>You cannot clean the
                            store of an <ph conref="../TextEntities.dita#TextEntities/ISM"/> server
                            that is a member of a cluster.</note></p>
                      </dd>
                    </dlentry>
                  </dl></p>
              </li>
            </ul></choice>
<choice>To stop the server, use the <ph conref="../TextEntities.dita#TextEntities/ISM"/> REST API
            POST method with the following <ph conref="../TextEntities.dita#TextEntities/ISM"/>
            service
                  URI:<p><codeph><codeph>http://&lt;admin-endpoint-IP:port>/ima/v1/service/stop</codeph></codeph></p></choice>
</choices>
</step>
</steps>
    <example>
      <p>The following example uses cURL to show how a GET method is used to view the status of the
        server:<codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/service/status</codeblock></p>
      <p>The following example shows a successful example response to the GET method used to view the status of the server:<codeblock>
{
  "Version":"v1",
  "Server": {
    "Name": "TestSystem:9089",
    "UID": "aFWxYf32",
    "Status": "Running",
    "State": 1,
    "StateDescription": "Running (production)",
    "ServerTime": "2016-03-04T14:46:53.081Z",
    "UpTimeSeconds": 4134,
    "UpTimeDescription": "0 days 1 hours 8 minutes 54 seconds",
    "Version": "2.0 20160304-0400",
    "ErrorCode": 0,
    "ErrorMessage": ""
  },
  "Container": {
    "UUID":"034c91ce828a4f5c2c21d7cd7f04628368b63bd308825ec2d9dab5096ff04ca0"
  },
  "HighAvailability": {
    "Status": "Inactive",
    "Enabled": false
  },
  "Cluster": {
    "Status": "Inactive",
    "Enabled": false
  },
  "Plugin": {
    "Status": "Inactive",
    "Enabled": false
  },
  "MQConnectivity": {
    "Status": "Active",
    "Enabled": true
  },
  "SNMP": {
    "Status": "Active",
    "Enabled": true
  }
}

</codeblock></p>
      <p>The following example uses cURL to show how a POST method is used to restart the server in
        production mode without cleaning the
        store:<codeblock>
curl -X POST \
   -H  'Content-Type: application/json'  \
   -d  '{                       
         "Service": "Server",       
           "CleanStore": false
        }
  '   \
http://127.0.0.1:9089/ima/v1/service/restart
</codeblock></p>
      <p>An example response to the POST
        method:<codeblock>{           
          "Version": "v1",   
            "Code": "CWLNA6011",   
            "Message": "The requested configuration change has completed successfully ."
          }</codeblock></p>
      <p>The following example uses cURL to show how a POST method is used to stop the
        server:<codeblock>
curl -X POST \
   -H  'Content-Type: application/json'  \
   -d  '{                       
         "Service": "Server" 
        }
  '   \
http://127.0.0.1:9089/ima/v1/service/stop
</codeblock></p>
      <p>An example response to the POST
        method:<codeblock>{           
          "Version": "v1",   
            "Code": "CWLNA6011",   
            "Message": "The requested configuration change has completed successfully ."
          }</codeblock></p>
    </example>
</taskbody>
<related-links>
<link href="ad00280_.dita"></link>
<link href="ad00200_.dita"></link>
</related-links>
</task>
<?Pub *0000002815?>

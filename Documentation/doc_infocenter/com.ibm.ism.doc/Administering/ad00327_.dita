<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<task id="ad00327_" xml:lang="en-us">
<title>Creating and updating a connection policy by using <ph
      conref="../TextEntities.dita#TextEntities/RESTAPIs"/></title>
<shortdesc>System administrators can create and update connection policies by using <ph
      conref="../TextEntities.dita#TextEntities/RESTAPIs"/>.</shortdesc>
<taskbody>
<prereq>Ensure that the following message hub creation tasks are complete:<ol>
<li><xref href="ad00323_.dita">Create a message hub</xref>.</li>
</ol></prereq>
<context><p>You can create a connection policy by using a <ph
          conref="../TextEntities.dita#TextEntities/RESTAPI"/>, or by using the
          <ph conref="../TextEntities.dita#TextEntities/ISMgui"/>. For more
        information about using the <ph
          conref="../TextEntities.dita#TextEntities/ISMgui"/> to create a
        connection policy, see <xref href="ad00361_.dita"/>.</p><p>You can use the <ph
          conref="../TextEntities.dita#TextEntities/ISM"/> REST API POST method
        to create or update one or more connection policy objects. If the connection policy that is
        specified in the request does not exist in the <ph
          conref="../TextEntities.dita#TextEntities/ISM"/> configuration table,
        then the connection policy is created. Otherwise the connection policy configuration is
        updated.</p>For more information about the components you must specify to create a
      connection policy, including naming restrictions, see <xref href="ad00360_.dita"/>.</context>
<steps>
<step>
        <cmd>To create or update one or more connection policy objects, use the <ph
            conref="../TextEntities.dita#TextEntities/ISM"/> REST API POST method
          with the following <ph conref="../TextEntities.dita#TextEntities/ISM"/>
          configuration URI:</cmd>
        <info>
          <p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/</codeph></p>
        </info>
      </step>
   <step>
        <cmd>Provide ConnectionPolicy object configuration data in the payload of the POST method by using the following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>.  Ensure that capitalization and double quotation marks are used as shown. </cmd>
        <info><codeblock>
{    
  "ConnectionPolicy": {
    "&lt;NameOfConnectionPolicy>": {
      "Description": "string",
      "AllowDurable": true|false,
      "AllowPersistentMessages": true|false,
      "ClientID": "string",
      "ClientAddress": "string",
      "UserID": "string",
      "GroupID": "string",
      "CommonNames": "string",
      "Protocol": "string",
      "MaximumSessionExpiryInterval" : "string",
      "ExpectedMessageRate" : "string"
     }
   }
}</codeblock><?Pub Caret 283?>Where:<dl>
<dlentry>
<dt><varname>NameOfConnectionPolicy</varname></dt>
<dd>Required.</dd>
<dd>Specifies the name of the connection policy.</dd>
<dd>The name must not have leading or trailing spaces and cannot contain control characters, commas,
double quotation marks, backslashes, or equal signs. The first character must not be a number or any
of the following special characters: <p><codeph>! # $ % &amp; ' ( ) * + - . / : ; &lt; > ?
@</codeph></p>
</dd>
<dd>The maximum length of the name is 256 characters. </dd>
<dd>After the connection policy is created, you cannot change this name.</dd>
</dlentry>
<dlentry>
<dt>Description</dt>
<dd>Optional.</dd>
<dd>Specifies a description for the connection policy.</dd>
<dd>If you do not want a description, omit <codeph>"Description":"<i>description</i>"</codeph>.</dd>
</dlentry>
<dlentry>
<dt>AllowDurable: true|false</dt>
<dd>Optional.</dd>
<dd>Specifies whether MQTT clients can connect using a setting of <codeph>cleanSession=0</codeph>
(true) or not (false).</dd>
<dd>The default value is true.</dd>
<dd>This value is applied only when the protocol that is being used is MQTT.</dd>
</dlentry>
<dlentry>
<dt>AllowPersistentMessages: true|false</dt>
<dd>Optional.</dd>
<dd>Specifies whether MQTT clients can publish messages with a QoS of 1 or 2 (true) or not
(false).</dd>
<dd>The default value is true.</dd>
<dd>This value is applied only when the protocol that is being used is MQTT.</dd>
</dlentry>
</dl>You must specify at least one of the following filters:<dl>
<dlentry>
<dt>ClientID</dt>
<dd>Specifies the client ID that is allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
<dd>You can use an asterisk (*) at the end of the value to match 0 or more characters.</dd>
<dd>You can use variable substitution in the client ID to ensure that only clients with a client ID
that matches the user ID or the certificate common name, can connect. The variable for user IDs is
<codeph>${UserID}</codeph>. The variable for certificate common name is
<codeph>${CommonName}</codeph>. You can specify extra characters along with the variable. For
example, you can specify that the client ID must match <codeph>myClient/${UserID}</codeph>. In this
case, a client with the user ID <codeph>userA</codeph> and the client ID
<codeph>myClient/userA</codeph> can connect. A client with the user ID <codeph>userB</codeph> and
the client ID <codeph>myClient/userB</codeph> can connect. However, a client with the user ID
<codeph>userB</codeph> and the client ID <codeph>notMyClient</codeph> cannot connect.</dd>
<dd>To use the default value, where all client ID values are allowed to connect, omit
<codeph>"ClientID": "<varname>clientID</varname>"</codeph>.</dd>
</dlentry>
<dlentry>
<dt>ClientAddress</dt>
<dd>Specifies the client IP addresses that are allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
<dd>The IP address can contain an asterisk (*), or a comma-separated list of IPv4 or IPv6 addresses
or ranges. For example, 192.0.2.32, 192.0.0.0, 192.0.2.0-192.0.2.100. The range must be specified
from low to high.</dd>
<dd>However, each IPv6 address must be enclosed in brackets <codeph>[ ]</codeph> either when
expressed singly or in a range of addresses. IPv6 addresses cannot contain asterisks.</dd>
<dd>The maximum number of client addresses that you can specify is 20.</dd>
<dd>To use the default value, where all client IP addresses are allowed to connect, omit
<codeph>"ClientAddress": "<varname>IP_Address</varname>"</codeph> or specify
<codeph>"ClientAddress":"<i>*</i>"</codeph>.</dd>
</dlentry>
<dlentry>
<dt>UserID</dt>
<dd>Specifies the messaging user ID that is allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
<dd>You can use an asterisk (*) at the end of the value to match 0 or more characters.</dd>
<dd>To use the default value, where all user ID values are allowed to connect, omit
<codeph>"UserID": "<varname>UserID</varname>"</codeph>.</dd>
</dlentry>
<dlentry>
<dt>GroupID</dt>
<dd>Optional.</dd>
<dd>Specifies the messaging group that is allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
<dd>You can use an asterisk (*) at the end of the value to match 0 or more characters.</dd>
<dd>To use the default value, where all groups are allowed to connect, omit <codeph>"GroupID":
"<varname>GroupID</varname>"</codeph>.</dd>
</dlentry>
<dlentry>
<dt>CommonNames</dt>
<dd>Specifies the client certificate common name that must be used to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
<dd>You can use an asterisk (*) at the end of the value to match 0 or more characters.</dd>
<dd>To use the default value, where all client certificates are allowed to connect, omit
<codeph>"CommonNames": "<varname>CommonNames</varname>"</codeph>.</dd>
</dlentry>
<dlentry>
<dt>Protocol</dt>
<dd>Specifies which protocols are allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
<dd>You can choose from JMS and MQTT protocols. If there are any protocol plug-ins installed on the
<ph conref="../TextEntities.dita#TextEntities/ISM"/> server, you can specify these as well. To
specify more than one value, separate each value with a comma. To select all protocols, specify a
null value for Protocol or omit the parameter from the command.</dd>
<dd>To specify more than one value, separate each value with a comma.</dd>
</dlentry>
<dlentry>
<dt>MaximumSessionExpiryInterval</dt>
<dd>Optional.</dd>
<dd>Specifies the maximum time, in seconds, that a session is kept alive before expiring.</dd>
<dd>The value must be either <codeph>unlimited</codeph>, or in the range 1-2147483647.</dd>
<dd>The default value is <codeph>unlimited</codeph> and means that a session will not expire.</dd>
</dlentry>
<dlentry>
<dt>ExpectedMessageRate</dt>
<dd>Optional.</dd>
<dd>Specifies the expected throughput of messages.</dd>
<dd>Valid values are <codeph>Low</codeph>, <codeph>Default</codeph>, <codeph>High</codeph>,
<codeph>Max</codeph>.</dd>
<dd>The default value is <codeph>Default</codeph>.</dd>
<dd>A value of <codeph>Low</codeph> might be used for a throughput of less than 10 messages per
second, a value of <codeph>Max</codeph> might be used for a throughput of more than a few thousand
messages per second.</dd>
<dd>When selecting the value, consider factors such as the latency of the connection, and the size
and number of devices. If you have many devices, you might want to use a lower setting in order to
save memory. </dd>
</dlentry>
</dl></info>
      </step>
</steps>
<example>
<p>The following example shows a POST method to create a connection policy called
"MyConnectionPolicy" by using cURL:</p>
<codeblock>
curl -X POST \
   -H  'Content-Type: application/json'  \
   -d  '{                       
           "ConnectionPolicy": {   
             "MyConnectionPolicy": {
               "Description": "Connection policy to authorize connection from demo client.",
               "ClientID": "*"
              }
          }
      }
  '   \
http://127.0.0.1:9089/ima/v1/configuration/</codeblock>
<p><note/>You must specify at least one of the following properties in the POST method even if the
property value is not updated:  <codeph>ClientID</codeph>,<codeph>ClientAddress,</codeph>,
<codeph>UserID</codeph>, <codeph>GroupID</codeph>,
<codeph>CommonNames</codeph>,<codeph>Protocol</codeph>.</p>
<p>The following example shows an example response to the POST method:</p>
<codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock>
</example>
<postreq>You must complete the following tasks to finish the message
hub configuration:<ol>
<li><xref href="ad00450_.dita">Create messaging policies</xref>.</li>
<li><xref href="ad00369_.dita">Create endpoints</xref>.</li>
</ol></postreq>
</taskbody>
</task>
<?Pub *0000008400?>

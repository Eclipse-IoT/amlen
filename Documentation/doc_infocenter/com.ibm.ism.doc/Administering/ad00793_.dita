<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<task id="ad00793_" xml:lang="en-us">
  <title>Configuring the licensed usage for <ph conref="../TextEntities.dita#TextEntities/ISM"/> and
    accepting the license by using REST Administration APIs</title>
  <?Pub Caret -2?>
  <shortdesc>System administrators can change the configured licensed usage for <ph
      conref="../TextEntities.dita#TextEntities/ISM"/> and accept the license by using a single REST
    Administration API. </shortdesc>
  <taskbody>
    <context>You can set the licensed usage of your <ph
        conref="../TextEntities.dita#TextEntities/ISM"/> and accept the license by using a single
      REST Administration API. The <ph conref="../TextEntities.dita#TextEntities/ISM"/> server will
      start in maintenance mode until the license is accepted. </context>
    <steps-unordered>
      <step>
        <cmd>To set the licensed usage of <ph conref="../TextEntities.dita#TextEntities/ISM"
          /> and accept the license, use the <ph conref="../TextEntities.dita#TextEntities/ISM"
          /> REST API POST method. </cmd>
        <substeps>
          <substep>
            <cmd>Use the following <ph conref="../TextEntities.dita#TextEntities/ISM"
              /> configuration URI:</cmd>
            <info>
              <p><codeph>curl -X POST http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration</codeph></p>
            </info>
          </substep>
          <substep>
            <cmd>Provide object configuration data in the payload of the POST method by using the following schema: </cmd>
            <info><codeblock>
{  
 "LicensedUsage": "LicenseType",       
 "Accept": true              
}
</codeblock>Where:<ul>
              <li>
                <dl>
                  <dlentry>
                    <dt>LicenseType</dt>
                    <dd>Specifies the licensed usage. Specify one of:<dl>
                      <dlentry>
                        <dt>Developers</dt>
                        <dd>For use in a development and test environment.</dd>
                      </dlentry>
                      <dlentry>
                        <dt>Non-Production</dt>
                        <dd>For use in a development and test environment.</dd>
                      </dlentry>
                      <dlentry>
                        <dt>Production</dt>
                        <dd>For use in a production environment.</dd>
                      </dlentry>
                      <dlentry>
                        <dt>IdleStandby</dt>
                        <dd>For use in a high availability environment.</dd>
                      </dlentry>
                      </dl></dd>
                  </dlentry>
                </dl>
              </li>
              <li>
                <dl>
                  <dlentry>
                    <dt>Accept: true|false</dt>
                    <dd>Specifies the acceptance of the licensed usage. </dd>
                    <dd>To accept the license, set Accept to true.</dd>
                    <dd>Once the license is accepted, it cannot be unaccepted by setting the value to false.</dd>
                  </dlentry>
                </dl>
              </li>
              </ul><note>When server is started for the first time, the <parmname>LicensedUsage</parmname> is set to <userinput>Developers</userinput>. The server will start in maintenance mode. <p>You can view the server status by using the following REST API GET method:<codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/service/status/Server</codeblock>The server status shows: </p><codeblock> 
{
  "Version":"v1",
  "Server": {
    "Name": "RDDockDev1:9089",
    "UID": "poHdWvCE",
    "Status": "Running",
    "State": 9,
    "StateDescription": "Running (maintenance)",
    "ServerTime": "2016-04-12T19:01:23.512Z",
    "UpTimeSeconds": 27,
    "UpTimeDescription": "0 days 0 hours 0 minutes 27 seconds",
    "Version": "2.0 20160610-0700",
    "ErrorCode": 387,
    "ErrorMessage": "<ph conref="../TextEntities.dita#TextEntities/ISM"/> is not fully functional until you accept the license agreement using <ph conref="../TextEntities.dita#TextEntities/ISM"/> REST API."
  }
}</codeblock><p>For more information about viewing server status, see <xref
              href="../Reference/ApplianceCmd/cmd_status_server.dita"/></p></note></info>
          </substep>
        </substeps>
      </step>
      <step>
        <cmd>View the value of the current license type by using the following REST API GET method:  </cmd>
        <info>
          <codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/configuration/LicensedUsage</codeblock>
          <p>An example response to the GET method:</p>
          <codeblock>
{
  "Version":"v1",
  "LicensedUsage": "Developers",
  "Accept": false
}</codeblock>
        </info>
      </step>
      <step>
        <cmd>Accept the current license, or change the value of the current licensed usage and
          accept the new license type. </cmd>
        <choices>
          <choice>If the value that is set for <parmname>LicensedUsage</parmname> is correct, you
            can accept the license by using the following REST API POST
              method:<codeblock>
curl -X POST \
   -H  'Content-Type: application/json'  \
   -d  '{
         "Accept": true 
        }
    '   \
http://127.0.0.1:9089/ima/v1/configuration
</codeblock><p>The
              server automatically restarts in production mode, using the current license that is
              specified.</p></choice>
          <choice>If the value that is set for <parmname>LicensedUsage</parmname> is not correct,
            you can change the license type and accept the updated license by using the following
            REST API POST
              method:<codeblock>
curl -X POST \
   -H  'Content-Type: application/json'  \
   -d  '{
         "LicensedUsage":"Production"|"Non-Production"|"IdleStandby|"Developers",
         "Accept": true 
        }
    '   \
http://127.0.0.1:9089/ima/v1/configuration
</codeblock><p>The
              server to automatically restarts in production mode, using the license that is
              specified.</p></choice>
        </choices>
      </step>
    </steps-unordered>
    <example><p>The following example shows setting <ph
          conref="../TextEntities.dita#TextEntities/ISM"/> licensed usage to
          <codeph>Non-Production</codeph> without accepting the
        license:<codeblock>
curl -X POST \
   -H  'Content-Type: application/json'  \
   -d  '{
         "LicensedUsage": "Non-Production"
        }
    '   \
http://127.0.0.1:9089/ima/v1/configuration
</codeblock></p><p>An
        example response to the POST
        method:<codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock></p><p>As
        the license is not accepted, when you view the server status by using the REST API GET
        method:<codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/service/status/Server</codeblock>The
        server status
        shows:<codeblock> 
{
  "Version":"v1",
  "Server": {
    "Name": "RDDockDev1:9089",
    "UID": "poHdWvCE",
    "Status": "Running",
    "State": 9,
    "StateDescription": "Running (maintenance)",
    "ServerTime": "2016-04-12T19:01:23.512Z",
    "UpTimeSeconds": 27,
    "UpTimeDescription": "0 days 0 hours 0 minutes 27 seconds",
    "Version": "2.0 20160610-0700",
    "ErrorCode": 387,
    "ErrorMessage": "IBM MessageSight is not fully functional until you accept the license agreement using IBM IoT MessageSight REST API."
  }
}</codeblock></p><p>The following example shows setting <ph conref="../TextEntities.dita#TextEntities/ISM"/> licensed
        usage to <codeph>Non-Production</codeph> and accepting the license by using
        cURL:<codeblock>
curl -X POST \
   -H  'Content-Type: application/json'  \
   -d  '{
         "LicensedUsage": "Non-Production",
         "Accept": true 
        }
    '   \
http://127.0.0.1:9089/ima/v1/configuration
</codeblock></p>An
      example response to the POST
      method:<codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock></example>
    <postreq>
      <p>Check the server status to verify that the <ph
          conref="../TextEntities.dita#TextEntities/ISM"/> server has successfully restarted. It
        might take a few seconds for the server to stop and restart. You can view the server status
        by using the following REST API GET
        method:<codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/service/status/Server</codeblock>The
        server status shows:   </p>
      <codeblock>
{
  "Version":"v1",
  "Server": {
    "Name": "RDDockDev1:9089",
    "UID": "poHdWvCE",
    "Status": "Running",
    "State": 1,
    "StateDescription": "Running (production)",
    "ServerTime": "2016-04-27T15:59:51.491-05:00",
    "UpTimeSeconds": 27,
    "UpTimeDescription": "0 days 0 hours 0 minutes 27 seconds",
    "Version": "2.0 20160610-0700",
    "ErrorCode": 0,
    "ErrorMessage": ""
  }
}</codeblock>
      <p>View the value of the current license type by using the following REST API GET method:
        <codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/configuration/LicensedUsage</codeblock></p>
      <p>An example response to the GET method:
        <codeblock>{
  "Version":"v1",
  "LicensedUsage": "Non-Production",
  "Accept": true
}</codeblock></p>
      <p>You can restart the <ph conref="../TextEntities.dita#TextEntities/ISM"/> server manually by
        using REST Administration APIs. For more information about restarting <ph
          conref="../TextEntities.dita#TextEntities/ISM"/>, see <xref
          href="../Reference/ApplianceCmd/fun_derestart.dita"/>.</p>
    </postreq>
  </taskbody>
  <related-links>
    <link href="ad00790_.dita"/>
    <link href="ad00200_.dita"/>
  </related-links>
  <?tm 1413223995 0?>
</task>
<?Pub *0000003915?>

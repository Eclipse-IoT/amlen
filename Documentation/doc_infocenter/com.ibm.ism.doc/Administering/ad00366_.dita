<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<task id="ad00365_" xml:lang="en-us">
  <title>Viewing configuration details of objects that can be named by using <ph
    conref="../TextEntities.dita#TextEntities/RESTAPIs"/></title>
  <shortdesc>System administrators can view configuration details of configuration objects for which
    the name can be configured. </shortdesc>
  <taskbody>
    <context>
      <p> You can use the <ph conref="../TextEntities.dita#TextEntities/ISM"
        /> REST API GET method to view configuration details of a specified configuration object or all instances of a configuration object type. If the name of the configuration object is specified in the request, then the configuration details of that object are displayed. If the name of the configuration object is not specified in the request, then the response includes configuration details of all instances of that object type.</p>
      <p>You can view the configuration details of the following object types by using the <ph
        conref="../TextEntities.dita#TextEntities/ISM"/> REST API GET method:<ul>
        <li>CertificateProfile</li>
        <li>ClientCertificate</li>
        <li>ClientSet</li>
        <li>ConfigurationPolicy</li>
        <li>ConnectionPolicy</li>
        <li>DestinationMappingRule</li>
        <li>EndPoint</li>
        <li>LTPAProfile</li>
        <li>MessageHub</li>
        <li>MQTTClient</li>
        <li>OAuthProfile</li>
        <li>Plugin</li>
        <li>Protocol</li>
        <li>Queue</li>
        <li>QueueManagerConnection</li>
        <li>QueuePolicy</li>
        <li>SecurityProfile</li>
        <li>SubscriptionPolicy</li>
        <li>TopicPolicy</li>
        <li>TrustedCertificate</li>
        </ul></p>
      <note>If a value has not been specified for a filter property, you might see that filter
        property returned with empty string values. The empty string value means that the particular
        property is not used to filter messages.</note>
    </context>
    <steps>
      <step>
        <cmd>To view configuration details of a specified configuration object or all instances of a configuration object type, use the <ph
          conref="../TextEntities.dita#TextEntities/ISM"
          /> REST API GET method with the following <ph
          conref="../TextEntities.dita#TextEntities/ISM"/> URI: </cmd>
        <info>
          <p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/&lt;ObjectType>/&lt;ObjectName></codeph></p>
          <p>where: <dl>
            <dlentry>
              <dt>ObjectType</dt>
              <dd>Specifies the type of configuration object.</dd>
              <dd>A valid list of object types is displayed in the "About this task" section.</dd>
            </dlentry>
            <dlentry>
              <dt>ObjectName</dt>
              <dd>Optional.</dd>
              <dd>Specifies the name of the configuration object.</dd>
              <dd>If <parmname>ObjectName</parmname> is not specified, the configuration details of all instances of the object type are returned.</dd>
            </dlentry>
            </dl></p>
        </info>
      </step>
    </steps>
    <example>
      <p>The following example shows a GET method to view configuration details of all endpoint
        objects by using cURL: </p>
      <codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/configuration/Endpoint</codeblock>
      <p>The following example shows a successful response to the GET method to view configuration
        details of all endpoint objects by using cURL: </p>
      <codeblock>{
  "Version": "v1",
  "Endpoint": {
    "DemoEndpoint": {
      "Port": 10002,
      "Enabled": false,
      "Protocol": "All",
      "Interface": "All",
      "InterfaceName": "All",
      "ConnectionPolicies": "DemoConnectionPolicy",
      "TopicPolicies": "DemoTopicPolicy",
      "SubscriptionPolicies": "DemoSubscriptionPolicy",
      "MaxMessageSize": "4096KB",
      "MessageHub": "DemoHub",
      "EnableAbout": true,
      "Description": "Unsecured endpoint for demonstration use only. By default,
 both JMS and MQTT protocols are accepted."
    },
    "DemoMqttEndpoint": {
      "Port": 1883,
      "Enabled": false,
      "Protocol": "MQTT",
      "Interface": "All",
      "InterfaceName": "All",
      "ConnectionPolicies": "DemoConnectionPolicy",
      "TopicPolicies": "DemoTopicPolicy",
      "MaxMessageSize": "4096KB",
      "MessageHub": "DemoHub",
      "EnableAbout": true,
      "Description": "Unsecured endpoint for demonstration use with MQTT protoco
l only. By default, it uses port 1003."
    }
  }
}
</codeblock>
      <p>The following example shows a GET method to view configuration details of an endpoint
        called "MyEndpoint" by using cURL: </p>
      <codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/configuration/Endpoint/MyEndpoint</codeblock>
      <p>The following example shows a successful example response to the GET method that was used
        to view configuration details of an endpoint called "MyEndpoint" :</p>
      <codeblock>
     {   
       "Version": "v1",
        "EndPoint": {
          "MyEndpoint": {
            "Port": 16102,
            "Enabled": false,
            "Protocol": "All",
            "Interface": "All",
            "ConnectionPolicies": "MyConnectionPolicy",
            "TopicPolicies": "MyTopicPolicy",
            "MaxMessageSize": "4096KB",
            "MessageHub": "MyHub",
            "Description": "Unsecured endpoint for demonstration use only."
            "InterfaceName": "",
            "SecurityProfile": "",
            "MaxSendSize": 16384,
            "BatchMessages": true
          }
        }
      }</codeblock>
      <p>The following example shows an unsuccessful example response to the GET method that was
        used to view configuration details of an endpoint called "MyEndpoint1" which does not exist
        :</p>
      <lines>
              curl -X GET  \
                 -H  'Content-Type: application/json'  \
                 http://127.0.0.1:9089/ima/v1/configuration/Endpoint/MyEndpoint1
</lines>
      <codeblock>
       {        
         "Version": "v1",
         "Code": "CWLNA0113",
         "Message": "The requested item is not found."
       }
</codeblock>
    </example>
  </taskbody>
</task>
<?Pub *0000006153?>

<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<task id="dv00001_orig" xml:lang="en-us">
<title>Installing or updating a protocol plug-in by using the command line</title>
<shortdesc>Import and install a new or updated protocol plug-in by using the <cmdname>file get</cmdname>, <cmdname>imaserver create Plugin</cmdname>, and <cmdname>imaserver update Plugin</cmdname> commands on the command line. </shortdesc>
<taskbody>
<prereq>To run a protocol plug-in, you must deploy the plug-in in <ph
conref="../TextEntities.dita#TextEntities/ISM"
/>. The plug-in must be archived in a zip file. This zip file must contain the JAR file (or files) that implement the plug-in for the target protocol. The zip file must also contain a JSON descriptor file that describes the plug-in content. This descriptor file is required in the zip archive that is used to deploy a protocol plug-in. For more information about developing a protocol plug-in, see <xref
format="dita" href="../Developing/devplug-in.dita" scope="peer"/>.</prereq>
<steps>
<step>
<cmd>Import the plug-in zip file to <ph conref="../TextEntities.dita#TextEntities/ISM"
/> by entering the following command:</cmd>
<info>
<p>
<codeblock scale="80">file get <varname>zipfileURL</varname> <varname>localFile</varname></codeblock>
</p>
<p>where</p>
<p>
<ul>
<li>
<dl>
<dlentry>
<dt>zipfileURL</dt>
<dd>Specifies the location of the plug-in file in the following format: <codeph>scp://username@hostname:/filepath</codeph></dd>
<dd>For example, <codeph>scp://user@192.0.2.32:/tmp/jsonmsg.zip</codeph></dd>
</dlentry>
</dl>
</li>
<li>
<dl>
<dlentry>
<dt>localFile</dt>
<?Pub Caret -2?>
<dd>Specifies the name to use for the file when it is uploaded to <ph
conref="../TextEntities.dita#TextEntities/ISM"/>.</dd>
<dd> The name cannot include any path elements. </dd>
<dd> You can use a period (.) to specify that the name of the uploaded file matches the name of the file on the remote server. </dd>
</dlentry>
</dl>
</li>
</ul>
</p>
</info>
</step>
<step importance="optional">
<cmd>Verify that the file is correctly loaded on the appliance by entering the following command:</cmd>
<info>
<p><codeph>file list</codeph></p>
<p>The file is displayed in the resulting list.</p>
</info>
</step>
<step>
<cmd>Create the plug-in by entering the following command:</cmd>
<info>
<p><codeph>imaserver create Plugin "File=<varname>zipfilename</varname>" "PropertiesFile=<varname>propertiesfilename</varname>"</codeph></p>
<p>Where:<ul>
<li>
<dl>
<dlentry>
<dt>zipfilename</dt>
<dd>Specifies the name of the protocol plug-in file that you want to install. This is the name of the file that you uploaded by using the <cmdname>file get</cmdname> command.</dd>
</dlentry>
</dl>
</li>
<li>
<dl>
<dlentry>
<dt>propertiesfilename</dt>
<dd>Optional.</dd>
<dd>Specifies the protocol plug-in properties file name that you want to associate with the plug-in. You can develop a properties file in JSON format and the properties that it contains override any properties in the plug-in configuration file.</dd>
</dlentry>
</dl>
</li>
</ul></p>
</info>
</step>
<step>
<cmd>Stop and restart the <ph conref="../TextEntities.dita#TextEntities/ISM"/> plug-in server process by using the following commands: </cmd>
<info>
<p><codeph>imaserver stop plugin </codeph></p>
<p><codeph>imaserver start plugin </codeph></p>
<p>The installation of the plug-in takes effect only when the <ph conref="../TextEntities.dita#TextEntities/ISM"/> plug-in server process is restarted. The plug-in can be updated at any time, but the update is not effective until the <ph conref="../TextEntities.dita#TextEntities/ISM"/> plug-in server process is restarted.</p>
</info>
</step>
<step>
<cmd>Verify that the plug-in is successfully deployed by entering the following command:</cmd>
<info>
<p><codeph>imaserver list Plugin</codeph></p>
<p>The plug-in is displayed in the resulting list. This value is specified by the <parmname>Name</parmname> property in the descriptor file.</p>
</info>
</step>
<step>
<cmd>Verify that the new protocol is successfully registered by entering the following command:</cmd>
<info>
<p><codeph>imaserver list Protocol</codeph></p>
<p>The protocol is displayed in the resulting list. This value is specified by the <parmname>Protocol</parmname> property in the descriptor file.</p>
</info>
</step>
<step>
<cmd>Update the configuration of your endpoint, connection policy, and messaging policy to authorize the new protocol. For more information about configuring endpoints, connection policies, and messaging policies, see <xref
format="dita" href="../Administering/ad00360_.dita" scope="local"
>Configuring message hubs</xref>.</cmd>
</step>
</steps>
<example>The following example shows the steps to import and create a protocol plug-in file that is called <codeph>jsonmsg</codeph>. This plug-in is contained in a zip archive called <codeph>jsonmsg.zip</codeph>.<codeblock>admin@(none)>  file get scp://user@192.0.2.32:/tmp/jsonmsg.zip jsonmsg.zip
jsonmsg.zip  100%   10KB  10.0KB/s 00:00
Wrote 10272 bytes to local storage 
admin@(none)>  file list
jsonmsg.zip 10272 bytes created May 28, 2014 8:14:39 PM 
admin@(none)> imaserver create Plugin "File=jsonmsg.zip"
The requested configuration change has completed successfully.
The plug-in server must be restarted.
admin@(none)> imaserver stop plugin
The plug-in server is stopped.
admin@(none)> imaserver start plugin
The plug-in server is started. 
admin@(none)> imaserver list Plugin
jsonmsg
admin@(none)> imaserver list Protocol
mqtt
jms
jsonmsg
</codeblock></example>
</taskbody>
</task>
<?Pub *0000005441?>

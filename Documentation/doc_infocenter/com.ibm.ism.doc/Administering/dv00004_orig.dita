<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="dv00004" xml:lang="en-us">
<title>Updating a protocol plug-in properties file</title>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. To enable the tags, right-click, select Refactoring > Toggle Comment.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc>Update an installed protocol plug-in properties file by using the <cmdname>imaserver update Plugin</cmdname> command on the command line. </shortdesc>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<taskbody>
<prereq>To update a protocol plug-in properties file, the plug-in with which it is associated must
previously have been deployed in <ph conref="../TextEntities.dita#TextEntities/ISM"/>.
            The plug-in must be archived in a zip file. This zip file must contain the JAR file (or
            files) that implement the plug-in for the target protocol. The zip file must also
            contain a JSON descriptor file that describes the plug-in content. This descriptor file
            is required in the zip archive that is used to deploy a protocol plug-in. For more
            information about developing a protocol plug-in, see <xref format="dita"
                href="../Developing/devplug-in.dita" scope="peer"/>.</prereq>
<steps>
<step>
<cmd>Update the plug-in properties file by entering the following command:</cmd>
<info>
<p><codeph>imaserver update Plugin "Name=<varname>pluginname</varname>" "PropertiesFile=<varname>propertiesfilename</varname>"</codeph></p>
<p>Where:<ul>
<li>
<dl>
<dlentry>
<dt>pluginname</dt>
<dd>Specifies the name of the protocol plug-in that is associated with the properties file. This can be found in the <filepath>plugin.json</filepath> configuration file if it exists. </dd>
</dlentry>
</dl>
</li>
<li>
<dl>
<dlentry>
<dt>propertiesfilename</dt>
<dd>Specifies the protocol plug-in properties file name that you want to update. </dd>
</dlentry>
</dl>
</li>
</ul></p>
</info>
</step>
<step>
<cmd>Stop and restart the <ph conref="../TextEntities.dita#TextEntities/ISM"/> plug-in server process by using the
                    following commands: </cmd>
                <info>
                    <p><codeph>imaserver stop plugin </codeph></p>
                    <p><codeph>imaserver start plugin </codeph></p>
                <p>The update of the plug-in properties file takes effect only when the <ph conref="../TextEntities.dita#TextEntities/ISM"/> plug-in server process is restarted. The plug-in properties
                        file can be updated at any time, but the update is not effective until the
                <ph conref="../TextEntities.dita#TextEntities/ISM"/> plug-in server process is restarted.</p>
                </info>
            </step>
</steps>
<example>The following example shows the steps to update a protocol plug-in properties file that is
            called
            <codeph>pluginprops.json</codeph>.<codeblock>admin@(none)> imaserver update Plugin "File=pluginprops.json"
The requested configuration change has completed successfully.
The plug-in server must be restarted.
admin@(none)> imaserver stop plugin
The plug-in server is stopped.
admin@(none)> imaserver start plugin
The plug-in server is started. 
admin@(none)></codeblock><?Pub Caret -1?></example>
</taskbody>
</task>

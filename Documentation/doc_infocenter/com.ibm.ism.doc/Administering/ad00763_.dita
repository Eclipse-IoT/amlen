<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="ad00763_" xml:lang="en-us">
<title>Creating and updating an OAuth profile by using <ph
conref="../TextEntities.dita#TextEntities/RESTAPIs"/></title>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. To enable the tags, right-click, select Refactoring > Toggle Comment.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc>System administrators can copy a key file to <ph
    conref="../TextEntities.dita#TextEntities/ISM"/> to use in an OAuth profile by using the <ph
    conref="../TextEntities.dita#TextEntities/ISM"
    /> REST API PUT method. System administrators can create an OAuth profile by using the <ph
    conref="../TextEntities.dita#TextEntities/ISM"
    /> REST API POST method. Existing OAuth profiles can also be updated by system administrators by using the <ph
    conref="../TextEntities.dita#TextEntities/ISM"/> REST API POST method.</shortdesc>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<taskbody>
<context>
<p>You can create or update an OAuth profile by using <ph
conref="../TextEntities.dita#TextEntities/RESTAPIs"/>, or by using the <ph
conref="../TextEntities.dita#TextEntities/ISMgui"/>. For more information about using the <ph
conref="../TextEntities.dita#TextEntities/ISMgui"/> to create an OAuth profile, see <xref
href="ad00761_.dita"/>.</p>
</context>
<steps>
<step id="1" importance="optional">
        <cmd>Import a key file to use to secure the connection to the authorization server by using
          the <ph conref="../TextEntities.dita#TextEntities/ISM"/> REST API PUT method with the
          following <ph conref="../TextEntities.dita#TextEntities/ISM"/> file URI: </cmd>
        <info>
          <p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/file/&lt;filename></codeph></p>
          <p>The certificate is copied to <filepath>/var/lib/amlen-server/userfiles</filepath></p>
        </info>
      </step>
<step>
<cmd>To create or update an OAuth profile, use the <ph
conref="../TextEntities.dita#TextEntities/ISM"
/> REST API POST method with the following <ph
conref="../TextEntities.dita#TextEntities/ISM"/> configuration URI:</cmd>
<info>
<p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/</codeph></p>
</info>
</step>
<step>
<cmd>Provide OAuthProfile object configuration data in the payload of the POST method by using the
following schema. <parmname>Content-type</parmname> is set to
<userinput>application/json</userinput>. Ensure that capitalization and double quotation marks are
used as shown. </cmd>
<info><codeblock>
{    
  "OAuthProfile": {
    "&lt;NameOfOAuthProfile>": {
      "ResourceURL": "string",
      "KeyFileName": "string",
      "AuthKey": "string",
      "UserInfoURL": "string",
      "UserInfoKey": "string",      
      "GroupInfoKey": "string",
      "TokenSendMethod":   "URLParam" (default)|"HTTPHeader",
      "Overwrite": true|false
     }
   }
}</codeblock>Where:<dl>
<dlentry>
<dt><varname>NameOfOAuthProfile</varname></dt>
<dd>Required.</dd>
<dd>Specifies a name for the OAuth profile.</dd>
<dd>The name can be a maximum of 256 alphanumeric characters. The first character must not be a
number. </dd>
<dd>After the profile is created, this name cannot be changed.</dd>
</dlentry>
<dlentry>
<dt>ResourceURL</dt>
<dd>Required if you are creating an OAuth profile.</dd>
<dd>Specifies the authorization server URL that is used to validate the access token.</dd>
<dd>The URL must include the protocol. The protocol can be either <codeph>http</codeph> or
<codeph>https</codeph>. </dd>
</dlentry>
<dlentry>
<dt>KeyFileName</dt>
<dd>Specifies the name of the key file (certificate for the OAuth Server) to use with this OAuth
profile. The file must exist on <ph conref="../TextEntities.dita#TextEntities/ISM"/> in the
following path:<filepath> /var/messagesight/data/certificates/OAuth/</filepath>.</dd>
<dd>The name can be a maximum of 255 alphanumeric characters. The first character must not be a
number.</dd>
</dlentry>
<dlentry>
<dt>CheckServerCert</dt>
<dd>Available in version 5.0.0.2 and later releases.  Possible options are as follows:<dl>
<dlentry>
<dt>TrustStore</dt>
<dd>When connecting to the LDAP server, the certificate that is presented by the server is checked
using the certificate that is uploaded to the product trust store.</dd>
</dlentry>
<dlentry>
<dt>PublicTrust</dt>
<dd>The certificate that is presented by the LDAP server is checked against the public certificates
that are installed as part of the operating system.</dd>
</dlentry>
<dlentry>
<dt>DisableVerify</dt>
<dd>No certificate verification is performed when connecting to the LDAP server. This is an insecure
option that is designed for testing purposes only.</dd>
</dlentry>
</dl></dd>
</dlentry>
<dlentry>
<dt>AuthKey</dt>
<dd>Specifies the name of the key that is used to store the access token.</dd>
<dd>The default value is <codeph>access_token</codeph>.</dd>
</dlentry>
<dlentry>
<dt>UserInfoURL</dt>
<dd>Specifies the authorization server URL that is used to retrieve the user information.</dd>
<dd>The URL must include the protocol. The protocol can be either <codeph>http</codeph> or
<codeph>https</codeph>. </dd>
</dlentry>
<dlentry>
<dt>UserInfoKey</dt>
<dd>Specifies the name of the key that is used to store the user information.</dd>
<dd>The name must not have leading or trailing spaces and cannot contain control characters, commas,
double quotation marks, backslashes, or equal signs.</dd>
</dlentry>
<dlentry>
<dt>GroupInfoKey</dt>
<dd>Specifies the name of the key that is used to retrieve the group information.</dd>
<dd>The name must not have leading or trailing spaces and cannot contain control characters, commas,
double quotation marks, backslashes, or equal signs.</dd>
<dd> If this parameter is specified, <ph conref="../TextEntities.dita#TextEntities/ISM"/> does not
retrieve group information from any other source.</dd>
</dlentry>
<dlentry>
<dt>TokenSendMethod</dt>
<dd>Specifies how an access token is included in the request to a Resource URL either as a parameter
in the URL (the default) or as an HTTP Header in the request. </dd>
<dd>The <codeph>AuthKey</codeph> setting determines the name of the URL parameter or the HTTP
Header.</dd>
</dlentry>
<dlentry>
<dt>Overwrite: true|false</dt>
<dd>Specifies whether an existing certificate and key are overwritten if they have the same
name.</dd>
<dd>The default value is false which means that an existing certificate and key are not overwritten
if they have the same name.</dd>
</dlentry>
</dl><p>You can check that the configuration of your OAuth profile is as expected by using the <ph
conref="../TextEntities.dita#TextEntities/ISM"/> REST Administration API GET method. For more
information about the GET method, see <xref href="ad00366_.dita"/>.</p></info>
</step>
</steps>
<example>
<p>The following example shows the creation of an OAuth profile named <codeph>MyOAuthProfile</codeph> by using cURL:<codeblock>
curl -X POST \
   -H 'Content-Type: application/json'  \
   -d  '{ 
         "OAuthProfile": {   
           "MyOAauthProfile": {
             "ResourceURL": "http://myOAuthexample.com/home.jsp"                         
          }
        }
    }
 '  \
http://127.0.0.1:9089/ima/v1/configuration/</codeblock><?Pub Caret -1?>The following shows an example response to the POST method.<codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock></p>
</example>
</taskbody>
</task>

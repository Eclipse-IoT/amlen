<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="ad00947_" xml:lang="en-us">
<title>Enabling cluster membership of <ph conref="../TextEntities.dita#TextEntities/ISM"
    /> servers in a high availability pair by using <ph
    conref="../TextEntities.dita#TextEntities/RESTAPIs"/></title>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. To enable the tags, right-click, select Refactoring > Toggle Comment.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc>You can enable cluster membership of <ph conref="../TextEntities.dita#TextEntities/ISM"
    /> servers in a high availability (HA) pair by using <ph
    conref="../TextEntities.dita#TextEntities/RESTAPIs"/>.</shortdesc>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<taskbody>
<context>
      <p>System administrators can enable cluster membership of <ph
        conref="../TextEntities.dita#TextEntities/ISM"/> servers in an HA pair by using <ph
        conref="../TextEntities.dita#TextEntities/RESTAPIs"/>, or by using the <ph
        conref="../TextEntities.dita#TextEntities/ISMgui"
        />. For more information about using the <ph
        conref="../TextEntities.dita#TextEntities/ISMgui"
        /> to enable cluster membership of servers in an HA pair, see <xref href="ad00949_.dita"
        />.</p>
<p>In this scenario, Server A is the primary node and Server B is the standby node in the HA pair.</p>
</context>
<steps>
<step importance="optional">
            <cmd> <ph conref="../TextEntities.dita#TextEntities/ISM" /> supports user provided TLS credentials for
            Clustering. Providing the credentials prior to adding a server to a cluster is recommended to avoid
            migrating the cluster. See <xref href="clusteringtls.dita"/>.</cmd>
</step>

<step>
        <cmd>Configure cluster membership values that relate to addresses and ports on Server B. Do not enable cluster membership on Server B.</cmd>
        <info> <p>Use the <ph conref="../TextEntities.dita#TextEntities/ISM"
          /> REST API POST method with the following <ph
          conref="../TextEntities.dita#TextEntities/ISM"
          /> configuration URI:<codeblock>http://&lt;admin-endpoint-IP:Port&gt;/ima/v1/configuration/</codeblock>Ensure that you specify the following ClusterMembership object configuration data in the payload of the POST method:</p><ul>
          <li><codeph>"ControlAddress":</codeph> of Server B.</li>
          <li><codeph>"MessagingAddress":</codeph> of Server B.</li>
          </ul>Ensure that you also include any other cluster membership configuration parameters that you need so that Server B and Server A can identify and connect to the other members of the cluster, for example, if Server A is using external addresses or ports. For more information about configuring cluster membership on a server, see <xref
          href="ad00942_.dita"/>.<note>
          <p>You cannot update the values for the following parameters on a Standby server:</p>
          <ul>
            <li><codeph>ClusterName</codeph></li>
            <li><codeph>EnableClusterMembership</codeph></li>
            <li><codeph>DiscoveryServerList</codeph></li>
          </ul>
          </note></info>
      </step>
<step>
<cmd>Configure and enable cluster membership on Server A.</cmd>
<info> <p>Use the <ph conref="../TextEntities.dita#TextEntities/ISM"
          /> REST API POST method with the following <ph
          conref="../TextEntities.dita#TextEntities/ISM"
          /> configuration URI:<codeblock>http://&lt;admin-endpoint-IP:Port&gt;/ima/v1/configuration/</codeblock>Ensure that you specify the following ClusterMembership object configuration data in the payload of the POST method:</p> <ul>
          <li><codeph>"EnableClusterMembership": true</codeph></li>
          <li>The same value for <codeph>"ClusterName":</codeph> as that specified in the cluster membership configuration of Server B.</li>
          <li><codeph>"ControlAddress":</codeph> of Server A.</li>
          <li><codeph>"MessagingAddress":</codeph> of Server A.</li>
          </ul>Ensure that you also include any other cluster membership configuration parameters that you need so that Server B and Server A can identify and connect to the other members of the cluster, for example, if Server B is using external addresses or ports. For more information about configuring cluster membership on a server, see <xref
          href="ad00942_.dita"/>.</info>
</step>
<step id="restartboth">
        <cmd>Restart both servers. Restart Server B first.</cmd>
        <info>
          <p>Use the <ph conref="../TextEntities.dita#TextEntities/ISM"
            /> REST API POST method on each server with the following <ph
            conref="../TextEntities.dita#TextEntities/ISM"/> configuration URI:</p>
          <p><codeph>http://&lt;admin-endpoint-IP:port>/ima/v1/service/restart</codeph></p>
          <p>Provide object configuration data in the payload of the POST method by using the following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>: </p>
          <codeblock>
{ "Service": "Server" }
</codeblock>
        </info>
      </step>
<step>
<cmd>After your servers have restarted, verify the status of your servers.</cmd>
<info>If either server is in maintenance mode, repeat step <xref format="dita"
          href="ad00947_.dita#ad00947_/restartboth" scope="local" type="step"
          />. <p>On each server, use the <ph conref="../TextEntities.dita#TextEntities/ISM"
          /> REST API GET method with the following URI:</p><p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/service/status</codeph></p></info>
<substeps>
<substep>
<cmd>Check the status information that is returned for Server A to verify that:</cmd>
<info><ul>
<li>Server A is running.</li>
<li>The status of the HA service status is <codeph>Active</codeph></li>
<li>The value of <codeph>NewRole</codeph> is <codeph>PRIMARY</codeph></li>
<li>The status of the cluster is <codeph>Active</codeph> and the server is connected to other servers in the cluster.</li>
</ul>Excerpt from an example response to the REST API GET method for Server A status:<codeblock>{
"Version":"v1",
"Server": {  
  "Name": "ServerA.mycompany.com:9089",   
  "UID": "PgOSgS1k",  
  <b>"Status": "Running",</b>
  "State": 1,
  "StateDescription": "Running (production)",
  "ServerTime": "2016-04-15T13:55:01.614Z",
  "UpTimeSeconds": 1604,
  "UpTimeDescription": "0 days 0 hours 26 minutes 44 seconds",
  "Version": "2.0 20160414-1500",
  "ErrorCode": 0,
  "ErrorMessage": ""
},
"HighAvailability": {
  <b>"Status": "Active",</b>
  "Enabled": true,
  "Group": "MyHAGroup",
  <b>"NewRole": "PRIMARY",</b>
  "OldRole": "PRIMARY",
  "ActiveNodes": 2,
  "SyncNodes": 2,
  "PrimaryLastTime": "2016-04-15T14:05:22Z",
  "PctSyncCompletion": -1,
  "ReasonCode": 0,
  "RemoteServerName": "ServerB.myCompany.com:9089"
},
"Cluster": {
  <b>"Status": "Active",</b>
  "Name": "MyCluster",
  "Enabled": true,
  <b>"ConnectedServers": 2,</b>
  "DisconnectedServers": 0
</codeblock></info>
</substep>
<substep>
<cmd>Check the status information that is returned for Server B to verify that:</cmd>
<info><ul>
<li>Server B is running.</li>
<li>The status of the HA service status is <codeph>Active</codeph></li>
<li>The value of <codeph>NewRole</codeph> is <codeph>STANDBY</codeph></li>
<li>The status of the cluster is <codeph>Standby</codeph> and the server is not connected to other servers in the cluster.</li>
</ul>Excerpt from an example response to the REST API GET method for Server B status:<codeblock>{
"Version":"v1",
"Server": {  
  "Name": "ServerB.myCompany.com:9089",
  "UID": "PgOSgS1k",
  <b>"Status": "Running",</b>
  "State": 10,
  "StateDescription": "Standby",
  "ServerTime": "2016-04-15T14:05:52.850Z",
  "UpTimeSeconds": 1608,
  "UpTimeDescription": "0 days 0 hours 26 minutes 48 seconds",
  "Version": "2.0 20160414-1500",
  "ErrorCode": 0,
  "ErrorMessage": ""
},
"HighAvailability": {
  <b>"Status": "Active",</b>
  "Enabled": true,
  "Group": "MyHAGroup",
  <b>"NewRole": "STANDBY",</b>
  "OldRole": "UNSYNC",
  "ActiveNodes": 2,
  "SyncNodes": 2,
  "PrimaryLastTime": "",
  "PctSyncCompletion": -1,
  "ReasonCode": 0,
  "RemoteServerName": "ServerA.myCompany.com:9089"
},
"Cluster": {
  <b>"Status": "Standby",</b>
  "Name": "MyCluster",
  "Enabled": true,
  <b>"ConnectedServers": 0,</b>
  "DisconnectedServers": 0
</codeblock></info>
</substep>
</substeps>
</step>
<step>
<cmd>Force a failover operation to verify that Server B is correctly configured to work with the cluster.</cmd>
<info>You can force a failover operation by restarting Server A.<p>Use the <ph
conref="../TextEntities.dita#TextEntities/ISM"
/> REST API POST method with the following URI:<codeblock>http://&lt;admin-endpoint-IP:port>/ima/v1/service/restart</codeblock></p><p>Provide configuration data in the payload of the POST method by using the following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>:</p><codeblock>
{    
  "Service": "Server"
}</codeblock></info>
</step>
<step>
<cmd>Verify the status of your servers after the failover.</cmd>
<info>On each server, use the <ph conref="../TextEntities.dita#TextEntities/ISM"
/> REST API GET method with the following URI:<p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/service/status</codeph></p></info>
<substeps>
<substep>
<cmd>Check the status information that is returned for Server A to verify that:</cmd>
<info><ul>
<li>Server A is running as the standby server.</li>
<li>The status of the HA service status is <codeph>Active</codeph></li>
<li>The value of <codeph>NewRole</codeph> is <codeph>STANDBY</codeph></li>
<li>The status of the cluster is <codeph>Standby</codeph> and the server is not connected to other servers in the cluster.</li>
</ul>Excerpt from an example response to the REST API GET method for Server A status:<codeblock>{
"Version":"v1",
"Server": {  
  "Name": "ServerA.myCompany.com:9089",
  "UID": "PgOSgS1k",
  <b>"Status": "Running",</b>
  "State": 10,
  "StateDescription": "Standby",
  "ServerTime": "2016-04-15T14:05:52.850Z",
  "UpTimeSeconds": 360,
  "UpTimeDescription": "0 days 0 hours 6 minutes 0 seconds",
  "Version": "2.0 20160414-1500",
  "ErrorCode": 0,
  "ErrorMessage": ""
},
"HighAvailability": {
  <b>"Status": "Active",</b>
  "Enabled": true,
  "Group": "MyHAGroup",
  <b>"NewRole": "STANDBY",</b>
  "OldRole": "UNSYNC",
  "ActiveNodes": 2,
  "SyncNodes": 2,
  "PrimaryLastTime": "",
  "PctSyncCompletion": -1,
  "ReasonCode": 0,
  "RemoteServerName": "ServerB.myCompany.com:9089"
},
"Cluster": {
  <b>"Status": "Standby",</b>
  "Name": "MyCluster",
  "Enabled": true,
  <b>"ConnectedServers": 0,</b>
  "DisconnectedServers": 0
    }
</codeblock></info>
</substep>
<substep>
<cmd>Check the status information that is returned for Server B to verify that:</cmd>
<info><ul>
              <li>Server B is running.</li>
              <li>The status of the HA service is <codeph>Active</codeph></li>
              <li>The value of <codeph>NewRole</codeph> is <codeph>PRIMARY</codeph></li>
              <li>The status of the cluster is <codeph>Active</codeph> and the cluster is connected to other servers in the cluster.</li>
              </ul>Excerpt from an example response to the REST API GET method for Server B status:<codeblock>{
"Version":"v1",
"Server": {  
  "Name": "ServerB.mycompany.com:9089",
  "UID": "PgOSgS1k",
  <b>"Status": "Running",</b>
  "State": 1,
  "StateDescription": "Running (production)",
  "ServerTime": "2016-04-15T13:55:01.614Z",
  "UpTimeSeconds": 1714,
  "UpTimeDescription": "0 days 0 hours 29 minutes 54 seconds",
  "Version": "2.0 20160414-1500",
  "ErrorCode": 0,
  "ErrorMessage": ""
},
  "HighAvailability": {
  <b>"Status": "Active",</b>
  "Enabled": true,
  "Group": "MyHAGroup",
  <b>"NewRole": "PRIMARY",</b>
  "OldRole": "STANDBY",
  "ActiveNodes": 2,
  "SyncNodes": 2,
  "PrimaryLastTime": "2016-04-15T14:25:01Z",
  "PctSyncCompletion": -1,
  "ReasonCode": 0,
  "RemoteServerName": "ServerA.myCompany.com:9089"
},
"Cluster": {
  <b>"Status": "Active",</b>
  "Name": "MyCluster",
  "Enabled": true,
  <b>"ConnectedServers": 2,</b>
  "DisconnectedServers": 0 
</codeblock></info>
</substep>
</substeps>
</step>
</steps>
</taskbody>
</task>

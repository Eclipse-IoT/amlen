<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<task id="ad00131_" xml:lang="en-us">
<title>Starting, restarting and stopping the <ph conref="../TextEntities.dita#TextEntities/mqBridge"
    /> process by using <ph conref="../TextEntities.dita#TextEntities/RESTAPIs"/></title>
<shortdesc>System administrators can start, restart and stop the <ph
      conref="../TextEntities.dita#TextEntities/mqBridge"/> process by using <ph
      conref="../TextEntities.dita#TextEntities/RESTAPIs"/>.</shortdesc>
<taskbody>
<context><p>When the <ph conref="../TextEntities.dita#TextEntities/mqBridge"/> process is stopped, the
        durable subscriptions that are used to receive published messages remain active. Therefore,
        any messages that are published while the <ph
          conref="../TextEntities.dita#TextEntities/mqBridge"/> process is stopped are delivered as
        soon as the process is restarted. As the messages are buffered, the maximum messages limit
        of the destination mapping rules might be reached. This limit prevents publishers from
        sending any more messages. If you do not want this behavior, or if you are stopping the <ph
          conref="../TextEntities.dita#TextEntities/mqBridge"/> process for a long time, disable all
        the destination mapping rules before you stop the process. For more information about
        disabling destination mapping rules, see <xref href="ad00114_.dita"/>.</p><p>You can start, restart and stop the <ph conref="../TextEntities.dita#TextEntities/mqBridge"/>
        process by using <ph conref="../TextEntities.dita#TextEntities/RESTAPIs"/>. You can restart
        and stop the <ph conref="../TextEntities.dita#TextEntities/mqBridge"/> process by using the
          <ph conref="../TextEntities.dita#TextEntities/ISMgui"/>. For more information about using
        the <ph conref="../TextEntities.dita#TextEntities/ISMgui"/>, see <xref href="ad00130_.dita"
        />.</p></context><?Pub Caret -2?>
<steps>
   <step>
        <cmd>Check the status of the <ph conref="../TextEntities.dita#TextEntities/mqBridge"/>
          process by using the <ph conref="../TextEntities.dita#TextEntities/ISM"/> REST API GET
          method with the following <ph conref="../TextEntities.dita#TextEntities/ISM"/> service
          URI:</cmd>
        <info>
          <p><codeph>http://&lt;admin-endpoint-IP:port>/ima/v1/service/status/MQConnectivity</codeph></p>
          <ul>
            <li>If the status is <codeph>Active</codeph>, the <ph
                conref="../TextEntities.dita#TextEntities/mqBridge"/> process is running. You can
              stop the process.</li>
            <li>If the status is <codeph>Inactive</codeph>, the <ph
                conref="../TextEntities.dita#TextEntities/mqBridge"/> process is not running. You
              can start or restart the MQ Connectivity process. To start the <ph
                conref="../TextEntities.dita#TextEntities/mqBridge"/> process, MQConnectivity must
              be enabled or the process will fail to start. Setting
                <parmname>MQConnectivityEnabled</parmname> to <userinput>true</userinput>
              automatically starts the <ph conref="../TextEntities.dita#TextEntities/mqBridge"/>
                process.<p>To enable MQ Connectivity, use the <ph
                  conref="../TextEntities.dita#TextEntities/ISM"/> REST API POST method with the
                following <ph conref="../TextEntities.dita#TextEntities/ISM"/> configuration
                URI:</p><p><codeph>http://&lt;admin-endpoint-IP:port>/ima/v1/configuration</codeph></p><p>You
                can provide configuration data in the payload of the POST method by using the
                following schema:
              <codeblock>
{
   "MQConnectivityEnabled": true
 }</codeblock></p></li>
          </ul>
        </info>
      </step>
<step><cmd>Choose an appropriate action:</cmd>
<choices>
     <choice>To start the <ph conref="../TextEntities.dita#TextEntities/mqBridge"/> process by
            restarting the server, use the <ph conref="../TextEntities.dita#TextEntities/ISM"/> REST
            API POST method with the following <ph conref="../TextEntities.dita#TextEntities/ISM"/>
            configuration
                URI:<p><codeph>http://&lt;admin-endpoint-IP:port>/ima/v1/service/restart</codeph></p><p>Provide
              object configuration data in the payload of the POST method by using the following
              schema. <parmname>Content-type</parmname> is set to
                <userinput>application/json</userinput>:
              </p><codeblock>
{ "Service": "Server" }</codeblock><p>When the server restarts, MQ
              Connectivity also restarts if it is enabled.</p><p>If the server does not start, check
              the logs for messages. For more information about the log files, see <xref
                format="dita" href="../Troubleshooting/tr00000_.dita" scope="local"/>.</p></choice>
     <choice> To start the <ph conref="../TextEntities.dita#TextEntities/mqBridge"/> process,
            without restarting the server, use the <ph
              conref="../TextEntities.dita#TextEntities/ISM"/> REST API POST method with the
            following <ph conref="../TextEntities.dita#TextEntities/ISM"/> service
                URI:<p><codeph>http://&lt;admin-endpoint-IP:port>/ima/v1/service/start</codeph></p><p>You
              can provide configuration data in the payload of the POST method by using the
              following schema: <codeblock>
{"Service":"MQConnectivity"}
 </codeblock></p></choice>
          <choice> To restart the <ph conref="../TextEntities.dita#TextEntities/mqBridge"/> process,
            without restarting the server, use the <ph
              conref="../TextEntities.dita#TextEntities/ISM"/> REST API POST method with the
            following <ph conref="../TextEntities.dita#TextEntities/ISM"/> service
                URI:<p><codeph>http://&lt;admin-endpoint-IP:port>/ima/v1/service/restart</codeph></p><p>You
              can provide configuration data in the payload of the POST method by using the
              following schema: <codeblock>
{"Service":"MQConnectivity"}
 </codeblock></p></choice>
     <choice>To stop the <ph conref="../TextEntities.dita#TextEntities/mqBridge"/> process without
            stopping the server, use the <ph conref="../TextEntities.dita#TextEntities/ISM"/> REST
            API POST method with the following <ph conref="../TextEntities.dita#TextEntities/ISM"/>
            service
              URI:<p><codeph>http://&lt;admin-endpoint-IP:port>/ima/v1/service/stop</codeph></p><p>You
              can provide configuration data in the payload of the POST method by using the
              following schema: <codeblock>
{"Service":"MQConnectivity"}
 </codeblock></p></choice>
</choices>
</step>
</steps>
    <example>
      <p>The following example uses cURL to show the status of the MQ Connectivity process:</p>
      <codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/service/status/MQConnectivity
 
 </codeblock>
      <p>The following example shows a successful example response to the GET method:</p>
      <codeblock>
{    
  "Version":"v1",    
    "MQConnectivity": {
     "Status": "Active",     
     "Enabled": true    
    } 
}
</codeblock>
      <p>The following example uses cURL to stop the MQ Connectivity process:</p>
      <codeblock>
curl -X POST \
   -H 'Content-Type: application/json'  \
   -d  '{     
         "Service":"MQConnectivity"
      }
 '  \
http://127.0.0.1:9089/ima/v1/service/stop
 
 </codeblock>
      <p>Check the status of the MQ Connectivity process after running the POST method:</p>
      <codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/service/status/MQConnectivity
 
 </codeblock>
      <p>The following example shows a successful example response to the GET method:</p>
      <codeblock>
{
  "Version":"v1",
  "MQConnectivity": {
    "Status": "Inactive",
    "Enabled": true
  }
}

</codeblock>
    </example>
</taskbody>
</task>
<?Pub *0000003189?>

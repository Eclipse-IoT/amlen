<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="dv00004_" xml:lang="en-us">
<title>Updating a protocol plug-in properties file</title>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. To enable the tags, right-click, select Refactoring > Toggle Comment.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc>Update an installed protocol plug-in properties file by using the <ph
    conref="../TextEntities.dita#TextEntities/ISM"/> REST API POST method. </shortdesc>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<taskbody>
<prereq>To update a protocol plug-in properties file, the plug-in with which it is associated must previously have been deployed in <ph
      conref="../TextEntities.dita#TextEntities/ISM"
      />. The plug-in must be archived in a .zip file. This .zip file must contain the JAR file (or files) that implement the plug-in for the target protocol. The .zip file must also contain a JSON descriptor file that describes the plug-in content. This descriptor file is required in the .zip archive that is used to deploy a protocol plug-in. For more information about developing a protocol plug-in, see <xref
      format="dita" href="../Developing/devplug-in.dita" scope="local"/>.</prereq>
<steps>
<step>
<cmd>To update the protocol plug-in properties file, use the <ph
conref="../TextEntities.dita#TextEntities/ISM"/> REST API POST method. </cmd>
<substeps>
<substep>
<cmd>Use the following <ph conref="../TextEntities.dita#TextEntities/ISM"/> configuration URI:</cmd>
<info>
<p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/</codeph></p>
</info>
</substep>
<substep>
<cmd>Provide ProtocolPlugin object configuration data in the payload of the POST method by using the following schema. <parmname>Content-type</parmname> is set to <userinput>application/json</userinput>. Ensure that capitalization and double quotation marks are used as shown. </cmd>
<info><codeblock>
{    
  "Plugin": {
    "&lt;NameOfPlugin>": {
      "PropertiesFile": "string",
      "Overwrite": true|false
      }
   }
}</codeblock>Where:<dl>
<dlentry>
<dt><varname>NameOfPlugin</varname></dt>
<dd>Required.</dd>
<dd>Specifies the name of the protocol plug-in that is associated with the properties file. This can be found in the <filepath>plugin.json</filepath> configuration file if it exists. </dd>
<dd>The maximum length of the name is 256 characters. </dd>
</dlentry>
<dlentry>
<dt>PropertiesFile</dt>
<dd>Required.</dd>
<dd>Specifies the protocol plug-in properties file name that you want to update. You can develop a properties file in JSON format and the properties that it contains override any properties in the plug-in configuration file.</dd>
<dd>The maximum length of the protocol plug-in properties file name is 255 characters. </dd>
</dlentry>
<dlentry>
<dt>Overwrite: true|false</dt>
<dd>Required if the protocol plug-in is already installed.</dd>
<dd>Specifies whether any existing protocol properties file with the same name is overwritten.</dd>
<dd>The default value is false.</dd>
</dlentry>
</dl></info>
</substep>
</substeps>
</step>
      <step>
        <cmd>Restart the <ph conref="../TextEntities.dita#TextEntities/ISM"
          /> plug-in server process. Use the <ph conref="../TextEntities.dita#TextEntities/ISM"
          /> REST API POST method with the following URI: </cmd>
        <info>
          <codeblock>http://&lt;admin-endpoint-IP:Port>/ima/v1/service/restart</codeblock>
          <p>The plug-in properties file can be updated at any time, but the update is not effective until the <ph
            conref="../TextEntities.dita#TextEntities/ISM"
            /> plug-in server process is restarted.</p>
          <note>If you need to remove the plug-in properties file from your system, you can either upload an empty properties file and overwrite the existing properties file, or delete and reinstall the protocol plug-in but do not specify a plug-in properties file on the protocol plug-in configuration.</note>
        </info>
      </step>
</steps>
<example>
<p>The following example shows the POST method to update the plug-in properties file called <codeph>pluginprops.json</codeph>:<?Pub Caret 104?><codeblock>  
curl -X POST \
   -H 'Content-Type: application/json'  \
   -d  '{ 
           "Plugin": {
            "json_msg": {
             "PropertiesFile": "pluginprops.json"
             "Overwrite": true
            }
         }
       }
 '  \
http://127.0.0.1:9089/ima/v1/configuration/</codeblock></p>
<p>The following shows an example response to the POST method.<codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock></p>
      <p>The following example shows restarting the protocol plug-in server:</p>
      <codeblock>  
curl -X POST \
   -H 'Content-Type: application/json'  \
   -d  '{ 
           "Service": "Plugin"
        }
 '  \
http://127.0.0.1:9089/ima/v1/service/restart</codeblock>
      <p>The following example shows an example response to the POST method to restart the protocol plug-in server:</p>
      <codeblock>
{        
  "Version": "v1",
  "Code": "CWLNA6011",
  "Message": "The requested configuration change has completed successfully."
}
</codeblock>
</example>
</taskbody>
</task>

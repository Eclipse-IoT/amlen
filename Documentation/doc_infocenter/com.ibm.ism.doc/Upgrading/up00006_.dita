<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<task id="up00006_" xml:lang="en-us">
<title>Upgrading <ph conref="../TextEntities.dita#TextEntities/ISM"
/> in a Docker environment</title>
<shortdesc>System administrators can upgrade the <ph conref="../TextEntities.dita#TextEntities/ISM"
/> server or Web UI  running in a Docker container. </shortdesc>
<taskbody>
<prereq>Data that must persist for <ph conref="../TextEntities.dita#TextEntities/ISM"
/> in the <filepath>/var/messagesight</filepath> directory must be volume mapped to a directory outside the container. </prereq>
<context>When you are updating the <ph conref="../TextEntities.dita#TextEntities/ISM"
/> server or Web UI software that is running in a Docker container, it is best practice to update the container. The process of updating the container is the same as the process for building a new container, with the exception that you must remove the existing container.</context>
<steps>
<step>
<cmd>Prepare the <ph conref="../TextEntities.dita#TextEntities/ISM"
/> .tz files for installation. </cmd>
<info>
<p>For more information, see <xref format="dita" href="../QuickStartGuide/qs00054_.dita"
scope="local"/>.</p>
<?Pub Caret 18?>
</info>
</step>
<step>
<cmd>Build the <ph conref="../TextEntities.dita#TextEntities/ISM"/> Docker image.</cmd>
<choices>
<choice>Build the <ph conref="../TextEntities.dita#TextEntities/ISM"
/> server image by issuing the following command:<codeblock>docker build --force-rm=true -t imaserver:2.0 .</codeblock></choice>
<choice>Build the <ph conref="../TextEntities.dita#TextEntities/ISM"
/> Web UI image by issuing the following command:<codeblock>docker build --force-rm=true -t imawebui:2.0 .</codeblock></choice>
</choices>
</step>
<step>
<cmd>Stop the existing containers. </cmd>
<choices>
<choice>Stop the server container by issuing the following command:<codeblock>docker stop &lt;<varname>server_container_name</varname>></codeblock>where &lt;<varname>server_container_name</varname>> is the name of the container in which the <ph
conref="../TextEntities.dita#TextEntities/ISM"
/> server is running. For example, <codeblock>docker stop IMA</codeblock></choice>
<choice>Stop the Web UI container by issuing the following command:<codeblock>docker stop &lt;<varname>webui_container_name</varname>></codeblock>where &lt;<varname>webui_container_name</varname>> is the name of the container in which the <ph
conref="../TextEntities.dita#TextEntities/ISM"
/> Web UI is running. For example, <codeblock>docker stop IMAWEBUI</codeblock></choice>
</choices>
</step>
<step>
<cmd>Remove the containers.</cmd>
<choices>
<choice>Remove the server container by issuing the following command:<codeblock>docker rm &lt;<varname>server_container_name</varname>></codeblock>where &lt;<varname>server_container_name</varname>> is the name of the container in which the <ph
conref="../TextEntities.dita#TextEntities/ISM"
/> server was running. For example, <codeblock>docker rm IMA</codeblock></choice>
<choice>Remove the Web UI container by issuing the following command:<codeblock>docker rm &lt;<varname>webui_container_name</varname>></codeblock>where &lt;<varname>webui_container_name</varname>> is the name of the container in which the <ph
conref="../TextEntities.dita#TextEntities/ISM"
/> Web UI was running. For example, <codeblock>docker rm IMAWEBUI</codeblock></choice>
</choices>
</step>
<step>
<cmd>Remove the Docker images.</cmd>
<choices>
<choice>Remove the <ph conref="../TextEntities.dita#TextEntities/ISM"
/> server image by issuing the following command:<codeblock>docker rmi -f $(docker ps | grep imaserver | awk '{print $3}')</codeblock></choice>
<choice>Remove the <ph conref="../TextEntities.dita#TextEntities/ISM"
/> Web UI image by issuing the following command:<codeblock>docker rmi -f $(docker ps | grep imawebui | awk '{print $3}')</codeblock></choice>
</choices>
</step>
<step>
<cmd>Start the containers. </cmd>
<info>Use the same Docker run command that you used previously before applying the update.</info>
<choices>
<choice>For example, to start the <ph conref="../TextEntities.dita#TextEntities/ISM"
/> server container, use a command similar to the following command:<codeblock>docker run --cap-add SYS_PTRACE --cap-add SYS_ADMIN --cap-add NET_ADMIN 
--security-opt apparmor:unconfined --net=host -P -it --name=IMA --env-file=imaserver-docker.env 
-m 84G -v /mnt/messagesight:/var/messagesight -v /mnt/tmp:/var/tmp -d imaserver:2.0</codeblock></choice>
<choice>To start the <ph conref="../TextEntities.dita#TextEntities/ISM"
/> Web UI container, use a command similar to the following command:<codeblock>docker run --cap-add SYS_PTRACE --cap-add SYS_ADMIN --cap-add NET_ADMIN 
--security-opt apparmor:unconfined --net=host -P -it --name=IMAW --env-file=imaserver-docker.env 
-m 4G -v /mnt/messagesight:/var/messagesight -v /mnt/tmp:/var/tmp -d imaserver:2.0
            </codeblock></choice>
</choices>
</step>
</steps>
</taskbody>
<related-links>
<link format="dita" href="up00004_.dita" scope="local" type="task"/>
<link format="dita" href="../QuickStartGuide/qs00055_.dita" scope="local" type="task"/>
</related-links>
</task>
<?Pub *0000005730?>

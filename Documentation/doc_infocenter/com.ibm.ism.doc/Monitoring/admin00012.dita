<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<task id="admin00012" xml:lang="en-us">
<title>Viewing connection level statistics by <ph
      conref="../TextEntities.dita#TextEntities/RESTMonAPIs"/></title>
<shortdesc>System administrators can view connection level monitoring statistics by using <ph
      conref="../TextEntities.dita#TextEntities/RESTMonAPIs"/>.</shortdesc>
<taskbody>
<context><p>System administrators can view connection level statistics by using a <ph
          conref="../TextEntities.dita#TextEntities/RESTMonAPI"/>, or by using
        the <ph conref="../TextEntities.dita#TextEntities/ISMgui"/>. For more information about
        using the <ph conref="../TextEntities.dita#TextEntities/ISMgui"/> to view connection level
        statistics, see <xref format="dita" href="admin00014.dita" scope="local" type="task"
          >Viewing connection level statistics by using the GUI</xref>.</p></context>
<steps>
<stepsection>Connection level monitoring statistics can be created by using a <ph
          conref="../TextEntities.dita#TextEntities/RESTMonAPI"/>. Connection
        monitoring data is periodically collected and cached. The cache for connection monitoring
        data is updated every 60 seconds. Therefore, the statistics that are produced can be up to
        60 seconds out of date and might not be available immediately if the command is issued at
          <ph conref="../TextEntities.dita#TextEntities/ISMappliance"/> server start time. To create
        connection level monitoring statistics, complete the following steps:</stepsection>
      <step>
        <cmd>Use the <ph conref="../TextEntities.dita#TextEntities/ISM"
          /> REST API GET method with the following <ph
          conref="../TextEntities.dita#TextEntities/ISM"/> configuration URI:</cmd>
        <info>
          <p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/monitor/&lt;Object Type></codeph></p>
        </info>
      </step>
<step>
        <cmd>Provide query parameters requesting the statistics that you want returned in the JSON
          payload. The following example uses cURL to create connection level-related
          statistics:</cmd>
        <info>
          <codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/monitor/Connection?Endpoint=<varname>Endpoint</varname>
          %26StatType=<varname>StatType</varname></codeblock>
          <p>where:</p>
          <ul>
            <li>
              <dl>
                <dlentry>
                  <dt>Endpoint</dt>
                  <dd>Specifies the name of the endpoint. </dd>
                </dlentry>
              </dl>
            </li>
            <li>
              <dl>
                <dlentry>
                  <dt>StatType</dt>
                  <dd>Specifies the type of data to order the results by.</dd>
                  <dd>This value can be one of the following values:<dl>
                      <dlentry>
                        <dt> NewestConnection</dt>
                        <dd>Newest Connections. </dd>
                      </dlentry>
                      <dlentry>
                        <dt> OldestConnection</dt>
                        <dd>Oldest Connections.</dd>
                      </dlentry>
                      <dlentry>
                        <dt> HighestThroughputMsgs</dt>
                        <dd>Highest throughput of messages. </dd>
                      </dlentry>
                      <dlentry>
                        <dt>LowestThroughputMsgs</dt>
                        <dd>Lowest throughput of messages. </dd>
                      </dlentry>
                      <dlentry>
                        <dt> HighestThroughputKB </dt>
                        <dd>Highest throughput of data in KB/second.</dd>
                      </dlentry>
                      <dlentry>
                        <dt> LowestThroughputKB </dt>
                        <dd>Lowest throughput of data in KB/second.</dd>
                      </dlentry>
                    </dl></dd>
                  <dd>The default value is <parmname>NewestConnection</parmname>.</dd>
                </dlentry>
              </dl>
            </li>
          </ul>
          <note>Connection data might be up to 60 seconds out of date.</note>
        </info>
      </step>
</steps>
    <result>
      <p>The following fields are returned: <ul>
          <li>
            <dl>
              <dlentry>
                <dt>Name</dt>
                <dd>String</dd>
                <dd>The connection name. The CientId is commonly used.</dd>
              </dlentry>
            </dl>
          </li>
          <li>
            <dl>
              <dlentry>
                <dt>Protocol </dt>
                <dd>String</dd>
                <dd>The name of the protocol.</dd>
              </dlentry>
            </dl>
          </li>
          <li>
            <dl>
              <dlentry>
                <dt>ClientAddr</dt>
                <dd>String</dd>
                <dd>The client IP address.</dd>
              </dlentry>
            </dl>
          </li>
          <li>
            <dl>
              <dlentry>
                <dt>UserId </dt>
                <dd>String</dd>
                <dd>The primary user ID.</dd>
              </dlentry>
            </dl>
          </li>
          <li>
            <dl>
              <dlentry>
                <dt>Endpoint </dt>
                <dd>String</dd>
                <dd>The name of the endpoint.</dd>
              </dlentry>
            </dl>
          </li>
          <li>
            <dl>
              <dlentry>
                <dt>Port </dt>
                <dd>Numeric</dd>
                <dd>The <ph conref="../TextEntities.dita#TextEntities/ISMappliance"/> server
                  port.</dd>
              </dlentry>
            </dl>
          </li>
          <li>
            <dl>
              <dlentry>
                <dt>ConnectTime </dt>
                <dd>Numeric</dd>
                <dd>Specifies the number of microseconds since the unix epoch.</dd>
                <dd>The time that the connection is created.</dd>
              </dlentry>
            </dl>
          </li>
          <li>
            <dl>
              <dlentry>
                <dt>Duration </dt>
                <dd>Numeric</dd>
                <dd>The duration of the connection in nanoseconds.</dd>
              </dlentry>
            </dl>
          </li>
          <li>
            <dl>
              <dlentry>
                <dt>ReadBytes </dt>
                <dd>Numeric</dd>
                <dd>The number of bytes read since connection time. </dd>
              </dlentry>
            </dl>
          </li>
          <li>
            <dl>
              <dlentry>
                <dt>ReadMsg </dt>
                <dd>Numeric</dd>
                <dd>The number of messages read since connection time. </dd>
              </dlentry>
            </dl>
          </li>
          <li>
            <dl>
              <dlentry>
                <dt>WriteBytes </dt>
                <dd>Numeric</dd>
                <dd>The number of bytes written since connection time. </dd>
              </dlentry>
            </dl>
          </li>
          <li>
            <dl>
              <dlentry>
                <dt>WriteMsg </dt>
                <dd>Numeric</dd>
                <dd>The number of messages that are written since connection time. </dd>
              </dlentry>
            </dl>
          </li>
        </ul></p>
    </result>
<example>
      <?Pub Caret 282?>
      <p>The following example uses cURL to show how a GET method is used to create statistics about
        connections ordered by the highest throughput of messages:</p>
      <codeblock>curl -X GET http://127.0.0.1:9089/ima/v1/monitor/Connection?Endpoint=DemoEndpoint%26StatType=HighestThroughputMsgs
 
 
</codeblock>
      <p>The following example shows a successful example response to the GET method that was used
        to create statistics about endpoints with the highest throughput of messages:</p>
      <codeblock>{ "Version":"v1", "Connection": [ { "Name":"DemoClientId","Protocol":"mqtt","ClientAddr":"9.20.230.65","UserId":"",
"Endpoint":"DemoEndpoint","Port":16102,"ConnectTime":1446728129213566618,"Duration":160676522991,"ReadBytes":39,"ReadMsg":0,
"WriteBytes":14,"WriteMsg":0} } ] }
</codeblock>
    </example>
</taskbody>
</task>
<?Pub *0000007092?>

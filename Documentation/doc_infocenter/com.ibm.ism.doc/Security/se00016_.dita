<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE concept PUBLIC  "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<concept id="queuemessagingpolicy" xml:lang="en-us">
<title>Queue policy</title>
<shortdesc>You can use a queue policy to specify which clients can send messages, receive messages, or browse a queue for messages.</shortdesc>
<conbody>
<p>In a queue policy, the <parmname>Queue</parmname> parameter specifies the queue or queues that the policy applies to.  When you create a queue policy, you can specify which messaging actions can be used by which of the clients that connect to the endpoints associated with the queue policy. You can choose from a combination of the following actions:<ul>
<li>
<dl>
<dlentry>
<dt>Send</dt>
<dd>Allows clients to send messages to the queue that is specified in the queue policy.</dd>
</dlentry>
</dl>
</li>
<li>
<dl>
<dlentry>
<dt>Receive</dt>
<dd>Allows clients to receive messages from the queue that is specified in the queue policy.</dd>
</dlentry>
</dl>
</li>
<li>
<dl>
<dlentry>
<dt>Browse</dt>
<dd>Allows clients to browse the queue that is specified in the queue policy.</dd>
</dlentry>
</dl>
</li>
</ul></p>
<p>You can use the following filter attributes to restrict which clients
can use the messaging actions:<ul>
<li> <dl id="ClientIPAddressSpecifiesTheClientIP"><dlentry>
<dt>Client IP address</dt>
<dd>Specifies the client IP addresses that are allowed to connect
to <ph conref="../TextEntities.dita#TextEntities/ISM"></ph>.</dd>
<dd>The IP address can contain an asterisk (*), or a comma-separated list of IPv4 or IPv6 addresses or ranges. For example, 192.0.2.32, 192.0.0.0, 192.0.2.0-192.0.2.100. The range must be specified from low to high.</dd>
<dd>IPv6 addresses must be enclosed in brackets <codeph>[ ]</codeph>.</dd>
</dlentry></dl> </li>
<li> <dl><dlentry>
<dt>Client ID</dt>
<dd>Specifies the Client ID that is allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> by using the
specified endpoint.</dd>
<dd>You can use an asterisk (*) as a wildcard to specify multiple
client IDs.</dd>
</dlentry></dl> </li>
<li> <dl><dlentry>
<dt>User ID</dt>
<dd>Specifies the messaging user ID that is allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> by using the
specified endpoint.</dd>
<dd>You can use an asterisk (*) as a wildcard to specify multiple
user IDs.</dd>
</dlentry></dl> </li>
<li> <dl><dlentry>
<dt>Group Name</dt>
<dd>Specifies the messaging group that is allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> by using the
specified endpoint.</dd>
<dd>You can use an asterisk (*) as a wildcard to specify multiple
group names.</dd>
</dlentry></dl> </li>
<li> <dl><dlentry>
<dt>Certificate Common Name</dt>
<dd>Specifies the client certificate common name that must be used
to connect to <ph conref="../TextEntities.dita#TextEntities/ISM"></ph> by
using the specified endpoint.</dd>
<dd>You can use an asterisk (*) as a wildcard to specify multiple
certificate common names.</dd>
</dlentry></dl> </li>
<li> <dl><dlentry>
<dt>Protocol</dt>
<dd>Specifies which protocols are allowed to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph>.</dd>
</dlentry></dl> </li>
</ul></p>
<p>For example, for a queue <codeph>exampleQueue</codeph>: <ul>
            <li>One queue policy specifies that only clients with a client ID that starts with <codeph>example</codeph> can send messages to the queue.</li>
            <li>Another queue policy specifies that only clients that connect from the IP address range of <codeph>192.0.2.51-192.0.2.100</codeph> can receive messages from the queue. The clients must also have a user ID beginning with <codeph>user</codeph>.</li>
            </ul>The queue policy configuration looks like the following examples:<codeblock>
curl -X POST  \
   -H 'Content-Type: application/json'  \
   -d  '{                          
           "QueuePolicy": {   
               "exampleQueuePolicy1": {
                "Description": "Queue policy that restricts based on client ID.",
                "Queue": "exampleQueue", 
                "ActionList": "Send",
                "ClientID": "example*"
              }
          }
      }
  '   \
http://127.0.0.1:9089/ima/v1/configuration/</codeblock><codeblock>
curl -X POST  \
   -H 'Content-Type: application/json'  \
   -d  '{                          
           "QueuePolicy": {   
               "exampleQueuePolicy2": {
                "Description": "Queue policy that restricts based on IP address and user ID.",
                "Queue": "exampleQueue", 
                "ActionList": "Receive",
                "ClientAddress": "192.0.2.51-192.0.2.100",
                "UserID": "user*"
              }
          }
      }
  '   \
http://127.0.0.1:9089/ima/v1/configuration/</codeblock></p>
<p>You can use variable substitution in queue policies to avoid configuring large numbers of messaging policies. For more information about using variable substitution, see <xref
format="dita" href="se00018.dita" scope="local" type="concept"/>.</p><?Pub
Caret 174?>
<p>For more information about configuring messaging policies, see <xref
format="dita" href="../Administering/ad00360_.dita" scope="peer"
type="concept">Configuring message hubs</xref>.</p>
</conbody>
</concept>
<?Pub *0000004517?>

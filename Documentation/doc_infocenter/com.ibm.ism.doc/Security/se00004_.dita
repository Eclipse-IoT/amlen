<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE concept PUBLIC  "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<concept id="se00004_" xml:lang="en-us">
<title>Authorizing client messaging</title><?Pub Caret -2?>
<shortdesc>You can use messaging policies to authorize client messaging. There are three types of messaging policies: Topic policies, queue policies, and subscription policies. </shortdesc>
<conbody>
<p>Topic policies can be used to authorize publishing or subscribing to a topic. Queue policies can be used to authorize sending, receiving, or browsing a queue. Subscription policies can be used to authorize the creation and deletion of global-shared durable subscriptions, or the authorization of a subscriber to receive messages from a global-shared durable subscription. </p>
<p>When you create a messaging policy, you specify a set of allowed
actions for a particular topic string, queue, or subscription. The
messaging policy specifies which clients can use those actions, based
on criteria such as client ID, or IP address.</p>
<p>All messaging policies for an endpoint are checked for authorization in the order that they are specified on the endpoint. The policies are checked either until authorization is granted, or all messaging policies are checked. Therefore, you cannot create a messaging policy that restricts the authority of particular clients if another messaging policy grants more authority to those clients. For example, two topic policies are defined in the following order:<ul>
<li>
<codeblock>Topic: *
Action: Subscribe
MaxMessages: 10</codeblock>
</li>
<li>
<codeblock>Topic: A
Action: Subscribe
MaxMessages: 5</codeblock>
</li>
</ul>In this example, a subscription on topic <codeph>B</codeph> allows 10 messages to be buffered at a time. A subscription on topic <codeph>A</codeph> also allows 10 messages to be buffered at a time, as the more permissive messaging policy is defined first. To restrict the subscriptions on topic <codeph>A</codeph> to buffer only five messages, you must change the order of the policies.</p>
<p>A messaging policy can be applied to more than one endpoint. The
messaging policies that are associated with the endpoint that a client
is connected to are applied after the connection policies are applied.</p>
<p>Any changes to the following messaging policy parameters affect
all subscriptions currently using the policy:<ul>
<li>MaxMessages</li>
<li>MaxMessagesBehavior</li>
<li>DisconnectedClientNotification</li>
<li>MaxMessagesTimeToLive (for messages that are published or put
after the change is made)</li>
</ul></p>
<section id="wildcards"><title>Wildcard based destinations</title><p>You can grant messaging authorization to a wildcard based topic, queue, or global-shared durable subscription by using an asterisk (*) in the Topic, Queue, or Subscription field.</p> <p>The wildcard character matches 0 or more characters, including topic-level separators. Therefore, a single wildcard can match more than one level in a multi-level topic name. For example, A*E matches all the following topic names:<ul>
<li><codeph>ARCHITECTURE</codeph></li>
<li><codeph>AN/APPLE</codeph></li>
<li><codeph>A/C/E</codeph></li>
<li><codeph>A/B/C/D/E</codeph></li>
</ul>You must ensure that when you use wildcards in topic policies that the topic string has enough structure to limit the wildcard matching that occurs. For example, the following set of topic strings are used by an application:<ul>
<li><codeph>DEVICE/<varname>clientID</varname>/LOCATION</codeph></li>
<li><codeph>DEVICE/<varname>clientID</varname>/FAULT</codeph></li>
<li><codeph>DEVICE/<varname>clientID</varname>/UPGRADE</codeph></li>
</ul>The following topic strings are good choices for the Topic field of the topic policies:<ul>
<li><codeph>DEVICE/${ClientID}/*</codeph></li>
<li><codeph>DEVICE/${ClientID}/LOCATION</codeph></li>
<li><codeph>DEVICE/${ClientID}/FAULT</codeph></li>
<li><codeph>DEVICE/${ClientID}/UPGRADE</codeph></li>
</ul>The following topic strings are too broad in scope to give enough control and partition the resources that are accessible by each client:<ul>
<li><codeph>DEVICE/*</codeph></li>
<li><codeph>*/${ClientID}/*</codeph></li>
</ul></p><p>In this example, the following topic string is used by an application to send notifications to mobile devices, where each user can have multiple devices:<ul>
<li><codeph>NOTIFY/<varname>UserID</varname>/<varname>ClientID</varname>/NOTIFICATION</codeph></li>
</ul>The devices that receive the notification can be authorized by using a topic policy with a destination such as the following topic string:<ul>
<li><codeph>NOTIFY/${UserID}/${ClientID}/NOTIFICATION</codeph></li>
</ul>The application that sends the notification can have a wider authorization, such as the following topic string:<ul>
<li><codeph>NOTIFY/*/*/NOTIFICATION</codeph></li>
</ul></p></section>
</conbody>
<?tm 1413224010 0?>
</concept>
<?Pub *0000005148?>

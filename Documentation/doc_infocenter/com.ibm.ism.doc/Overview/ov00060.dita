<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE concept PUBLIC  "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<concept id="ov00060" xml:lang="en-us">
<title>Message hubs, endpoints, and policies</title>
<shortdesc>Message hubs are an organizational configuration object that collects endpoints,
  connection policies, and messaging policies that are associated with a specific goal into a single
  place. You can create a message hub per application to organize the endpoints and policies each
  application uses.</shortdesc>
<conbody>
<p>Endpoints accept network requests, so clients can connect to the
message hub through MQTT, or JMS. You must have a minimum of one endpoint
per message hub. You can create one endpoint for each port the message
hub listens on. </p>
    <p>The following policies can be defined on the message hub: <ul>
        <li><xref format="dita" href="../Security/se00003_.dita" scope="peer" type="concept"
            >Connection policies</xref><p> A connection policy filters any connection that is based
            on a rule. For example, a connection policy might be set up to authorize users that are
            defined within a particular group or groups to connect from a specific location or range
            of locations.</p></li>
        <li><xref href="../Administering/ad00451_.dita">Topic policies</xref><p>Topic policies are
                        used to control which clients can publish or subscribe to a specified topic.
                    </p></li>
        <li><xref href="../Administering/ad00452_.dita">Subscription policies</xref><p>Subscription
                        policies are used to control which clients can receive messages from a
                        specified global-shared durable subscription. Subscription policies are also
                        used to control which clients can control the creation and deletion of
                        global-shared durable subscriptions on a specified subscription name.
                    </p></li>
        <li><xref href="../Administering/ad00453_.dita">Queue policies</xref><p>Queue policies are
                        used to control which clients can send to, receive from, or browse a
                        specified queue. </p></li>
      </ul></p>
<p>Endpoints must have one or more connection policies that are applied to them to accept client
      connections. Topic policies, queue policies, and subscription policies are all types of
      messaging policy. Endpoints must have at least one type of messaging policy applied to them. </p>
<p>Endpoints can be used only within the specified message hub. Different
message hubs cannot specify endpoints on the same IP address and ports.
Different message hubs can have endpoints with different IP addresses
and the same port. This architecture means that endpoints can be monitored
to provide a complete picture of traffic and activity across the message
hub. For example, endpoints can be used to track connections, and
monitor metrics such as the range of IP addresses used to connect
to the message hub, the number of incoming messages, and the number
of subscriptions that are associated with a particular message hub.</p><?Pub
Caret 216?>
<p>The diagram shows a message hub with two endpoints. One endpoint is internally bound. One
   endpoint is externally bound. The externally bound endpoint has one connection policy, and four
   topic policies that are associated with it. </p>
<p><image href="scenario.gif">
    <alt>Message hub with two endpoints. The external endpoint has one connection policy, and four
     topic policies. </alt>
   </image></p>
<p>The externally bound endpoint in this scenario is configured to
authorize external users to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> over MQTT, and
has the maximum message size that can be published set to 2048 KB. </p>
<p>The internally bound endpoint in this scenario is configured to
authorize internal users to connect to <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> over JMS, and
has the maximum message size that can be published set to 4096 KB.</p>
<p>The Connection Policy allows all groups to connect over MQTT. </p>
<p>The topic policies in this scenario allow users in the user group "Gold" to publish and subscribe
   to topic x and topic y. Users in the "Silver" group can publish and subscribe to topic x. Users
   in the "Bronze" group can subscribe to topic x.</p>
<p>To create a <xref format="dita" href="ov00100_.dita" scope="peer" type="concept">message
hub</xref> with endpoints and policies, complete the following tasks by using the <xref
format="dita" href="../Administering/ad00361_.dita" otherprops="NOTbeta" scope="local" type="task"
><ph conref="../TextEntities.dita#TextEntities/ISMgui"/></xref> (GUI), or by using <xref
format="dita" href="../Administering/ad00322_.dita" scope="local" type="concept">Rest Administration
APIs</xref>: <ol otherprops="NOTbeta">
<li>Create a message hub </li>
<li>Create at least one connection policy and at least one type of messaging policy.</li>
<li>Create <xref format="dita" href="ov00110_.dita" scope="local" type="concept">endpoints</xref>
within that message hub, associating the connection policy and the messaging policy type that you
configured with the endpoints.</li>
</ol></p>
<p>For more information about how to administer these actions, see <xref format="dita"
href="../Administering/ad00360_.dita" otherprops="NOTbeta" scope="peer" type="task">Configuring
message hubs</xref>.</p>
</conbody>
</concept>
<?Pub *0000005633?>

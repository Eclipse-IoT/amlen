<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE concept PUBLIC  "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<?Pub Inc?>
<concept id="ov00051" xml:lang="en-us">
<title>WebSockets</title>
<!--To optimize search results, add tags that clarify product name, target platform, or other contexts. Use Edit > Un Comment to have the tags made live.-->
<!--<titlealts><navtitle></navtitle><searchtitle></searchtitle></titlealts>-->
<!--Put your short description next; used for first paragraph and abstract.-->
<shortdesc>WebSockets provides full-duplex communication over a single
TCP socket.  WebSockets is a component of HTML5, designed to replace
existing push-based technologies with the aim of reducing latency
and network traffic between client and server. 
</shortdesc>
<!--To optimize PDF retrievability, add prolog and indexing tags that help crystalize why users should be looking up this topic (purpose, task, and what they will learn)-->
<!--<prolog><metadata><keywords><indexterm></indexterm></keywords></metadata></prolog>-->
<conbody>
<p>The protocol operates in two parts: <ul>
<li>First, a handshake is exchanged between client and server (as
an HTTP Upgrade request).  </li>
<li>Next, data is transferred back and forth in messages that are
composed of one or more frames, each having a specified type (for
example, UTF-8 text, binary data, or control frames) that is the same
for each frame in a message.</li>
</ul></p>
<p>The WebSockets protocol is designed on the principle that there should
be minimal framing (the only framing that exists is to make the protocol
frame-based instead of stream-based, and to support a distinction
between Unicode text and binary frames).  It is expected that metadata
would be layered on top of WebSocket by the application layer, in
the same way that metadata is layered on top of TCP by the application
layer (for example, HTTP).  </p>
<p>Conceptually, WebSockets is a layer on top of TCP that: <ul>
<li>Adds a web origin-based security model for browsers.</li>
<li>Adds an addressing and protocol naming mechanism to support multiple
services on one port and multiple host names on one IP address.</li>
<li>Layers a framing mechanism on top of TCP to get back to the IP
packet mechanism that TCP is built on, but without length limits</li>
<li>Includes an extra closing handshake in-band that is designed to
work in the presence of proxies and other intermediaries.</li><?Pub
Caret 17?>
</ul></p>
<p>WebSockets is ideal for the following types of applications:<ul>
<li>Gaming</li>
<li>Stock ticker</li>
<li>Traffic updates</li>
<li>Telemetry data (MQTT over WebSocket)</li>
<li>Mobile payments</li>
<li>Mobile app gateway</li>
<li>Scoring</li>
</ul></p>
</conbody>
</concept>
<?Pub *0000002798?>

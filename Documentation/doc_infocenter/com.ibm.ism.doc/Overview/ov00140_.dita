<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE concept PUBLIC  "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<?Pub Sty _display FontColor="red"?>
<concept id="ov00140_" xml:lang="en-us">
<title>Disconnected client notifications</title>
<shortdesc>Disconnected client notifications can be used to notify
disconnected clients that there are messages waiting on <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph>.</shortdesc>
<prolog><metadata>
<keywords><keyword>shouldertap</keyword><keyword>shoulder tap</keyword>
</keywords>
</metadata></prolog>
<conbody>
<p>When a client application is disconnected from <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph>, but there are
messages waiting for that application, <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph> can publish information
about those messages to a reserved system topic. An application that
uses MQTT with <codeph>cleansession=1</codeph> can subscribe to the
system topic to receive information about the messages that are waiting
for the disconnected client. The provider can then process the information,
and take an appropriate action. For example, by sending an SMS message
to the disconnected client, or by forwarding the information to a
mobile operating system notification service.</p>
<p>Disconnected client notifications are enabled by configuring an
appropriate messaging policy that has the disconnected client notifications
option enabled. Any MQTT clients that use <codeph>cleanSession=0</codeph>,
and subscribe by using the messaging policy, are monitored for disconnected
client notifications. For more information about configuring disconnected
client notifications, including creating applications to receive the
notifications, see <xref href="../Administering/ad00850_.dita"></xref>.</p>
<p>The following example shows the steps for a mobile device to receive
notifications.<ol>
<li>The client device registers with a mobile operating system vendor
notification service.</li><?Pub Caret -2?>
<li>A client application on the device registers with a notification
provider, such as <ph conref="../TextEntities.dita#TextEntities/wl"></ph>.
The notification provider uses an MQTT gateway or adapter to subscribe
to the reserved system topic <codeph>$SYS/DisconnectedClientNotification</codeph> on <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph>.</li>
<li>When the client application is connected, and subscribes to a
topic on <ph conref="../TextEntities.dita#TextEntities/ISM"></ph>,
the application receives messages as expected. This topic has an associated
messaging policy that enables disconnected client notifications.</li>
<li>When the client application disconnects, any messages that are
published to that topic wait for delivery on <ph
conref="../TextEntities.dita#TextEntities/ISM"></ph>. </li>
<li><ph conref="../TextEntities.dita#TextEntities/ISM"></ph> publishes
information about the waiting messages to the reserved system topic <codeph>$SYS/DisconnectedClientNotification</codeph>. </li>
<li>The notification provider processes the information that was published
on <codeph>$SYS/DisconnectedClientNotification</codeph> and calls
the notification service. This notification is then sent to the disconnected
client to alert the client about the waiting messages.</li>
</ol>This flow is shown in <xref
href="ov00140_.dita#ov00140_/notifications"></xref>.<fig expanse="page"
id="notifications"><title>Disconnected client notification flow</title>
<image align="center"
alt="A diagram showing the flow for disconnected client notifications"
href="ov00140a_v2.gif"></image></fig></p>
</conbody>
</concept>
<?Pub *0000003692?>

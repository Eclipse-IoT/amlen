<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE concept PUBLIC  "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<?Pub Inc?>
<concept id="ov00220" xml:lang="en-us">
<title>Security</title>
<shortdesc>There are three main types of security - transport encryption,
authentication, and authorization. </shortdesc>
<conbody>
<p>Transport level security</p>
<p>Use the certificate profile to add a server certificate to a particular
endpoint and then set it to be high medium or fast</p>
<p>Support for the following protocol methods - SSLv3, TLS 1.0/1.1/1.2</p>
<p>As admin you can add a server certificate profile to the appliance
on the gui or cli, and optionally set a private key if the certificate
has one.</p>
<p>You can then add a security profile to the certificate, specifying
minium protocol method (?), ciphers. ciphers (encryption alogrithm)
can be Best Medium or Fast. you now have a security profile associated
with a certificate profile. you can then use this profile to secure
an endpoint. another reason for using hubs. if the cerficate expires
you can reset it per hub. </p>
<p>Authentication</p>
<p>If username / password is specified in the connect methods of the
protocols (JMS, MQTT, MQTT/WebSockets), we will authenticate users
against the local user repository</p>
<p>Authorisation</p>
<p>The appliance supports authorization for the following "actions":</p>
<ul>
<li> Connect. This is configured by attaching "Connection Policies"
to endpoints.  You can create policies which allow you to connect
to both an endpoint as well as to specific protocols(e.g. one group
may be authorized to connect to endpoint1 using MQTT only and another
group may be authorized to connect to endpoint1 using JMS only)</li>
<li> Publish - topic and/or part of the topic tree (link to Publish)</li>
<li>Subscribe - topic and/or part of the topic tree (link to Subscribe)</li>
</ul>
<p>Publish and subcribe are configured using messaging policies. </p>
<p>Other</p>
<p>The appliance supports the following attributes which can be used
for authorization:</p>
<ul>
<li>authenticated user (username)
</li>
<li>group to which the authenticated user belongs
</li>
<li>protocol - protocol by which client connected
</li>
<li>client IP address (can specify range of IP addresses)</li>
</ul>
<p>Connection Policy</p>
<p>This policy is used to authorize a connection based on at least
one or more of connection level attributes. Such as:       <ul>
<li>Client address
</li>
<li>Client ID</li>
<li>User name or Group Name</li>
<li>Protocol
</li>
</ul>
For scale, the connection policies are associated with Listener configuration.
When client connects to a Listener, listener can go through the list
of Connection policies, and authorize the client to connect.
</p>
<p>Example Connection policy files:  To allow clients with client
ID starting with "carrental" and using MQTT protocol, to connect:
<codeblock>{
    "Name":"ConnMQTTPolicy",
    "PolicyType":"Connection",
    "Description":"Connection policy for Carrental client"
    "ClientID":"carrental*",
    "Protocol":"MQTT"
}

</codeblock></p>
<p>To allow clients in subnet 9.3.0.0 using any protocol, to connect:
<codeblock>{
    "Name":"Conn9.3Policy",
    "PolicyType":"Connection",
    "Description":"Connection policy for clients in 9.3.x.x network"
    "ClientAddress":"9.3.0.0",
}
</codeblock></p>
<p>Messaging Policy</p>
<p>This policy is used to authorize a client/user to publish or subscribe
to a topic. The policy can be created based on at least one or more
of the connection level attributes, topic match rules and a set of
allowed actions.
<ul>
<li>     - Client address      </li>
<li>- Client ID      </li>
<li>- User name or Group Name      </li>
<li>- Certificate common names   </li>
<li>   - Protocol      </li>
<li>- Topic      </li>
<li>- Listener Name
</li>
</ul></p>
<p>For scale, the messaging policies are associated with Listener
configuration. After successful connection (client is authorized to
connect based on Connection policies associated with the listener)
to  a Listener, messaging engine goes thru the list of messaging policies
associated with the listener the message has come thru and authorize
the client to publish or subscribe to a Topic based on rules specified
in the messaging policy. 
</p>
<p>Example Messaging policy files:
</p>
<p>To allow clients with client ID starting with "carrental", and
connected on ListenerA, to publish messages on topic '/CAR/RENTAL/*':<codeblock
>{
    "Name":"PublishCARRental",
    "PolicyType":"Messaging",
    "Description":"Messaging policy for clients IDs with carrental",
    "Clientid":"carrental*",
    "Topic":"/CAR/RENTAL/*",
    "Action":"publish"
}

</codeblock></p>
<p>Messages flowing to and from the appliance are protected for privacy
if SSL encryption is used.</p>
<p>The appliance supports SSL / TLS connections from clients (MQTT
or JMS) and supports FIPS 140-2</p>
<p>Security settings are configured by setting up one or more security
profiles. Access control can be restricted based on any combination
of a set of attributes, including:<ul>
<li>user/group</li>
<li>client identifier</li>
<li>protocol</li>
<li>network interface</li>
<li>listening endpoint (ipaddress and port)</li>
<li>client ipaddress or a range of ipaddresses</li>
<li>destination (i.e. topic, topic sub-tree, queue)the </li>
</ul></p>
<p>Authorization ISM supports role based authorization for users/groups,
for example Administrator role, Publisher role etc. If the user can
be authenticated, the user’s defined role (if any) is retrieved from
the ISM configuration data. User/Groups must be added to the ISM configuration
data and have the role assigned to them. The operations permitted
for specific roles are configurable.    
</p>
<p>Administrators Administrators interact with the system through
either the administrative GUI, or administrative CLIs. They are allowed
full access to all ISM functionality, with the ability to may modify
any configuration setting, run all of the reports, etc. Administrators
have the authority to do anything that Publishers and Subscribers
can do. 
</p>
<p>Publishers Publishers interact with the system through either the
administrative GUI, publishing CLI, or client APIs. Publishers are
restricted to publishing files and deleting files they have access
to. Publishers can also run reports showing usage reports on the files
they have access to. They have access to the subset of the administrative
GUI which is relevant to their role. 
</p>
<p>Subscribers Subscriber users are those that don’t have an Administrator
or Publisher role defined for them. They interact with the system
ISM client using client APIs. 
</p>
<p></p>
<p>Policies are set of rules created using one or more configuration
data, such as network data (e.g. Client IP address, server listener
port, network interface etc), client identification data (e.g. client
ID, username), message data (e.g. topic name).  Using WebUI or CLI,
user can add or import a policy file. If you are importing a policy
file, the name of the policy and the file name should be same.
</p><?Pub Caret -1?>
</conbody>
</concept>
<?Pub *0000007204?>

<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE concept PUBLIC  "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<concept id="PDFdevplug-indebug" xml:lang="en-us">
<title>Debug environments for the <ph
conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/ISM"></ph> protocol
plug-in SDK</title>
<shortdesc>You can debug the protocol plug-in that you are developing
in two ways. You can choose to run the protocol plug-in server in
Eclipse, or you can run the plug-in server and the plug-in on your <ph
conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/ISM"></ph> virtual
appliance. Both of these debugging methods are only supported in the
virtual appliance environment available in <ph
conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/ISM"></ph> for
Developers.</shortdesc>
<conbody>
<p>By using the plug-in process classes in the <codeph>imaPlugin.jar</codeph> that
is included in the SDK bundle, you can debug your protocol plug-in.
This JAR file enables two methods of debugging protocol plug-ins:
Running the protocol plug-in server in Eclipse, or running the plug-in
server and the plug-in on your <ph
conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/ISM"></ph> virtual
appliance.</p>
<p>If you run the protocol plug-in server in Eclipse, you can run
the protocol plug-in server process remotely and use the <ph
conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/ISM"></ph> virtual
appliance to forward messages to the external plug-in server process.
This approach is intended for use during the early stages of development.
With this approach, you can deploy a plug-in zip file that contains
only a <codeph>plugin.json</codeph> descriptor file and no JAR files.
Then, you can debug and update your plug-in classes in your local
development environment without redeploying a plug-in zip file on
the virtual appliance. When you use this method of debugging, you
must use a non-standard version of the <codeph>plugin.json</codeph> file.
This version of the file provides the class path for your plug-in
classes in your development environment.</p>
<p>After the first phase of development is finished, you must test
your production protocol plug-in by installing it and running it on
your <ph
conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/ISM"></ph> virtual
appliance. If you encounter unexpected problems while you run in that
environment, you can use the second debugging approach to connect
to the plug-in server that runs on the virtual appliance. When you
debug during this phase, you must create a new plug-in zip file and
reinstall it on the <ph
conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/ISM"></ph> virtual
appliance each time that you make updates to your plug-in classes.</p><?Pub
Caret 440?>
</conbody>
</concept>
<?Pub *0000002932?>

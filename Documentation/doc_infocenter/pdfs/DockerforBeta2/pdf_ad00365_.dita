<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<task id="ad00364_" xml:lang="en-us">
<title>Displaying configuration details of a configuration object by using <ph
      conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/RESTAPIs"/></title>
<shortdesc>System administrators display configuration details of a configuration object by using a
      <ph conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/RESTAPI"/>.</shortdesc>
<taskbody>
<context>
   <p>You can use the <ph conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/ISM"
        /> REST API GET method to display configuration details of a specified configuration object or all instances of a configuration object type. If the name of the configuration object is specified in the request, then the configuration details of that object are displayed. If the name of the configuration object is not specified in the request, then the response includes configuration details of all instances of that object type.</p>
      <p>You can display the configuration details of the following object types by using the <ph
        conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/ISM"/> REST API GET method:<ul>
        <li>MessageHub</li>
        <li>ConnectionPolicy</li>
        <li>TopicPolicy</li>
        <li>SubscriptionPolicy</li>
        <li>QueuePolicy</li>
        <li>EndPoint</li>
        <li>ConfigurationPolicy</li>
        <li>CertificateProfile</li>
        <li>SecurityProfile</li>
        <li>LTPAProfile</li>
        <li>OAuthProfile</li>
        <li>LDAP</li>
        <li>Queue</li>
        <li>TopicMonitor</li>
        </ul></p>
      <note>If a value has not been specified for a filter property, you might see that filter
        property returned with empty string values. The empty string value means that the particular
        property is not used to filter messages.</note></context>
<steps>
   <step>
        <cmd>To display configuration details of a specified configuration object or all instances of a configuration object type, use the <ph
          conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/ISM"
          /> REST API GET method with the following <ph
          conref="../../com.ibm.ism.doc/TextEntities.dita#TextEntities/ISM"/> URI: </cmd>
        <info>
          <p><codeph>http://&lt;admin-endpoint-IP:Port>/ima/v1/configuration/&lt;ObjectType>/&lt;ObjectName></codeph></p>
          <p>where: <ul>
            <li><b>ObjectType</b><p>Specifies the type of configuration object.</p><p>A valid list of object types is displayed in the "About this task" section.</p></li>
            <li><b>ObjectName</b><p>Optional.</p><p>Specifies the type of configuration object.</p><p>If <parmname>ObjectName</parmname> is not specified, the configuration details of all instances of the object type are returned.</p></li>
            </ul></p>
        </info>
      </step>
</steps>
    <example>
      <p>The following example shows a GET method to display configuration details of all endpoint
        objects by using cURL: </p>
      <lines>
              curl -X GET  \
                 -H  'Content-Type: application/json'  \
                 http://127.0.0.1:9089/ima/v1/configuration/Endpoint
</lines>
      <p>The following example shows a GET method to display configuration details of an endpoint
        called "MyEndpoint" by using cURL: </p>
      <lines>
              curl -X GET  \
                 -H  'Content-Type: application/json'  \
                 http://127.0.0.1:9089/ima/v1/configuration/Endpoint/MyEndpoint
</lines>
      <p>The following example shows a successful example response to the GET method that was used
        to display configuration details of an endpoint called "MyEndpoint" :</p>
      <codeblock>
 {
  "Version": "v1",
  "Endpoint": {
    "MyEndpoint": {
      "Port": 16102,
      "MaxMessageSize": "4096KB",
      "Enabled": false,
      "Protocol": "All",
      "Interface": "All",
      "TopicPolicies": "MyTopicPolicy",
      "ConnectionPolicies": "MyConnectionPolicy",
      "MessageHub": "MyHub",
      "Description": "Unsecured endpoint for demonstration use only.",
      "EnableAbout": false,
      "SubscriptionPolicies": null,
      "QueuePolicies": null,
      "InterfaceName": "All",
      "SecurityProfile": "",
      "MaxSendSize": 16384,
      "BatchMessages": true
    }
  }
}</codeblock>
      <p>The following example shows an unsuccessful example response to the GET method that was used to display configuration details of an endpoint called "MyEndpoint1" which does not exist:</p>
      <lines>
              curl -X GET  \
                 -H  'Content-Type: application/json'  \
                 http://127.0.0.1:9089/ima/v1/configuration/Endpoint/MyEndpoint1
</lines>
      <codeblock>
       {        
         "Version": "v1",
         "Code": "CWLNA0136",
         "Message":"The item or object cannot be found. Type: Endpoint Name: MyEndpoint1"
       }
</codeblock>
    </example>
</taskbody>
</task>
<?Pub *0000006153?>

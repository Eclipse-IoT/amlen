<?xml version="1.0" encoding="UTF-8"?>
<!--
# Copyright (c) 2012-2021 Contributors to the Eclipse Foundation
# 
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
# 
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
# 
# SPDX-License-Identifier: EPL-2.0
#
-->

<project name="testTools" default="buildtestTools" basedir=".">
    <property name="build.dir" value="${basedir}"/>
	<echo/>
	<echo/>
	<echo>==== invoking ant build for fvt ====</echo>
	<echo message="os.name = ${os.name}" />
	<echo message="os.arch = ${os.arch}" />
	<echo message="os.version = ${os.version}" />

	<!-- Properties already set by RTC build include:
	 - buildLabel
	 - buildResultUUID
	 -->	
   	<property name="testTools.build.dir" value="${basedir}"/>
	
	<!-- load testTools properties -->
	<property file="${testTools.build.dir}/testTools_build.properties"/>
	<property name="testTools.workspace" value="${testTools.build.dir}/.."/> 
	
	<property name="testTools.ship.dir" value="${testTools.workspace}/testTools_ship"/>
	<property name="testTools.ship.scripts.dir" value="${testTools.ship.dir}/scripts"/>
	<property name="testTools.ship.common_src.dir" value="${testTools.ship.dir}/common_src"/>
	<property name="testTools.ship.web.dir" value="${testTools.ship.dir}/web"/>
	<property name="testTools.ship.setup.dir" value="${testTools.ship.dir}/setup"/>
	<property name="testTools.ship.lib.dir" value="${testTools.ship.dir}/lib"/>
	<property name="testTools.ship.lib2.dir" value="${testTools.ship.dir}/lib2"/>
	<property name="testTools.ship.xlinux.lib32.dir" value="${testTools.ship.dir}/xlinux/lib32"/>
	<property name="testTools.ship.xlinux.lib64.dir" value="${testTools.ship.dir}/xlinux/lib64"/>
	<property name="testTools.ship.xlinux.bin64.dir" value="${testTools.ship.dir}/xlinux/bin64"/>
	<property name="testTools.ship.windows.lib32.dir" value="${testTools.ship.dir}/windows/lib32"/>
	
	<!-- if we have a buildResultUUID, we are a jazz build -->
	<condition property="is.jazz.build">
	    <isset property="buildResultUUID" />
	</condition>
	<condition property="is.manual.build">
		<not><isset property="is.jazz.build" /></not>
	</condition>

	
	<!-- build entire testTools project -->
	<!--
		The root target of testTools build. 
	-->
	<target name="buildtestTools" depends="testTools_clean, testTools_init, jazz_build, manual-build">
	    <echo/>
	    <echo>==== Start testTools build ====</echo>
	</target>
		
	<target name="jazz_build" if="is.jazz.build">
		<antcall target="build-scripts"/>
		<antcall target="build-driverSync"/>
		<antcall target="build-JMSTestDriver"/>
		<antcall target="build-MqttTest"/>
		<antcall target="build-MQ-MQTT"/>
		<!-- <antcall target="build-Paho"/> -->
		<antcall target="build-WSTestDriver"/>
		<antcall target="build-CLI_Utils"/>
		<antcall target="build-GUI-CAF"/>
		<antcall target="build-GUI-CAF2"/>
		<antcall target="build-JCAra"/>
		<antcall target="build-JCAtests"/>
		<antcall target="build-JCAfail"/>
		<!-- copy testTools .sh files testTools_ship tree -->
		<antcall target="testTools_copy" />
	</target>
		
	<target name="manual-build" if="is.manual.build">
		<antcall target="build-scripts"/>
		<antcall target="build-driverSync"/>
		<antcall target="build-JMSTestDriver"/>
		<antcall target="build-MqttTest"/>
		<antcall target="build-MQ-MQTT"/>
		<!-- <antcall target="build-MQ-MQTT-C"/> -->
		<!-- <antcall target="build-Paho"/> -->
		<antcall target="build-WSTestDriver"/>
		<antcall target="build-CLI_Utils"/>
		<antcall target="build-GUI-CAF"/>
		<antcall target="build-JCAra"/>
		<antcall target="build-JCAtests"/>
		<antcall target="build-JCAfail"/>
		<!-- copy testTools .sh files testTools_ship tree -->
		<antcall target="testTools_copy" />
	</target>
	
	<target name="build-scripts" >
		<build.activity label="Building testTools_scripts" activityIdProperty="buildingTestToolsScriptsId" />
		<ant dir="${basedir}/../testTools_scripts" inheritRefs="false"/> 
	</target>
		
	<target name="build-driverSync" >
		<build.activity label="Building testTools_DriverSync" activityIdProperty="buildingTestToolsDriverSyncId" />
  		<ant dir="${basedir}/../testTools_DriverSync" inheritRefs="true"/> 
	</target>
	
	<target name="build-JMSTestDriver" >
		<build.activity label="Building testTools_JMSTestDriver" activityIdProperty="buildingTestToolsJMSTestDriverId" />
  		<ant dir="${basedir}/../testTools_JMSTestDriver" inheritRefs="true"/> 
	</target>
	
	<target name="build-MqttTest" >
		<build.activity label="Building testTools_MqttTest" activityIdProperty="buildingTestToolsMqttTestId" />
  		<ant dir="${basedir}/../testTools_MqttTest" inheritRefs="true"/> 
	</target>
	
	<target name="build-WSTestDriver" >
		<build.activity label="Building testTools_WSTestDriver" activityIdProperty="buildingTestToolsWSTestDriverId" />
	  	<ant dir="${basedir}/../testTools_WSTestDriver" inheritRefs="true"/> 
	</target>
	
	<target name="build-CLI_Utils" >
		<build.activity label="Building testTools_CLI_Utils" activityIdProperty="buildingTestToolsCLI_UtilsId" />
	  	<ant dir="${basedir}/../testTools_CLI_Utils" inheritRefs="true"/> 
	</target>
	
	<target name="build-MQ-MQTT" >
		<build.activity label="Building testTools_MQ_MQTTClient" activityIdProperty="buildingTestToolsMQMQTTId" />
  		<ant dir="${basedir}/../testTools_MQ_MQTTClient" inheritRefs="true"/> 
	</target>
	
	<target name="build-JCAra" >
			<build.activity label="Building testTools_JCAra" activityIdProperty="buildingTestToolsJCAraId" />
			<ant dir="${basedir}/../testTools_JCAra" inheritRefs="true"/>
	</target>
	
	<target name="build-JCAtests" >
		<build.activity label="Building testTools_JCA" activityIdProperty="buildingTestToolsJCAId" />
		<ant dir="${basedir}/../testTools_JCA" inheritRefs="true"/>
	</target>
	
	<target name="build-JCAfail" >
			<build.activity label="Building testTools_JCAfail" activityIdProperty="buildingTestToolsJCAfailId" />
			<ant dir="${basedir}/../testTools_JCAfail" inheritRefs="true"/>
	</target>

	<!-- <target name="build-Paho" >
		<build.activity label="Building testTools_Paho" activityIdProperty="buildingTestToolsPahoId" />
  		<ant dir="${basedir}/../testTools_Paho_java" inheritRefs="true"/> 
	</target>
	-->
	
	<target name="build-GUI-CAF" >
		<build.activity label="Building testTools_GUI-CAF" activityIdProperty="buildingTestToolsCAFId" />
  		<ant dir="${basedir}/../testTools_GUI_CoreAutoFramework" inheritRefs="true"/> 
	</target>
	
	<target name="build-GUI-CAF2" >
			<build.activity label="Building testTools_GUI-CAF2" activityIdProperty="buildingTestToolsCAFId" />
	  		<ant dir="${basedir}/../testTools_GUI_CAF2" inheritRefs="true"/> 
		</target>
	
	
	<!-- Copy the files so they can be accessed from the publish script. -->
	<target name="testTools_copy">
		<copy todir="${testTools.ship.scripts.dir}">
			<fileset dir="${testTools.workspace}/testTools_scripts/scripts">
				<exclude name="**/*.o"/>
				<exclude name="**/*.so.map"/>
			</fileset>
		</copy>
		<chmod dir="${testTools.ship.scripts.dir}" perm="777" includes="**/*.sh"/>
		
		<copy todir="${testTools.ship.common_src.dir}">
					<fileset dir="${testTools.workspace}/testTools_scripts/common_src">
						
					</fileset>
		</copy>
		<chmod dir="${testTools.ship.common_src.dir}" perm="777" includes="**/*.sh"/>
		
		<copy todir="${testTools.ship.web.dir}">
					<fileset dir="${testTools.workspace}/testTools_scripts/web">
						
					</fileset>
		</copy>
		<chmod dir="${testTools.ship.web.dir}" perm="777" includes="**/*"/>
		<copy todir="${testTools.ship.setup.dir}">
					<fileset dir="${testTools.workspace}/testTools_scripts/setup">
						
					</fileset>
		</copy>
		<chmod dir="${testTools.ship.setup.dir}" perm="777" includes="**/*"/>
	</target>
	
	<!-- Initialize the build environment -->
	<target name="testTools_init">
		<build.activity label="Initializing testTools environment" activityIdProperty="initTestToolsEnvId" />
		<mkdir dir="${testTools.ship.dir}"/>
		<mkdir dir="${testTools.ship.scripts.dir}"/>
		<mkdir dir="${testTools.ship.common_src.dir}"/>
		<mkdir dir="${testTools.ship.web.dir}"/>
		<mkdir dir="${testTools.ship.lib.dir}"/>
		<mkdir dir="${testTools.ship.lib2.dir}"/>
		<mkdir dir="${testTools.ship.xlinux.lib32.dir}"/>
		<mkdir dir="${testTools.ship.xlinux.lib64.dir}"/>
		<mkdir dir="${testTools.ship.xlinux.bin64.dir}"/>
		<mkdir dir="${testTools.ship.windows.lib32.dir}"/>
		
        <!-- remove all build_logs then create new log dir -->
        <!-- delete dir="${testTools.workspace}/build_log" quiet="true"/-->
        <mkdir dir="${testTools.workspace}/build_log"/>
		
		
		<echo> == Initialising build.sh script ================ </echo>

		<!-- change file permissions of scripts -->
		<chmod perm="755">
			<fileset id="scripts" dir="${testTools.build.dir}">
		     	<include name="*.sh"/>
			</fileset>
		</chmod>
				
	</target>
	
	<target name="testTools_clean">
		<build.activity label="Cleaning testTools build" activityIdProperty="cleanTestToolsEnvId" />
		<delete dir="${testTools.ship.lib.dir}"/>
		<delete dir="${testTools.ship.lib2.dir}"/>
		<delete dir="${testTools.ship.xlinux.lib32.dir}"/>
		<delete dir="${testTools.ship.xlinux.lib64.dir}"/>
		<delete dir="${testTools.ship.xlinux.bin64.dir}"/>
		<delete dir="${testTools.ship.windows.lib32.dir}"/>
		<delete dir="${testTools.ship.scripts.dir}"/>
		<delete dir="${testTools.ship.common_src.dir}"/>
		<delete dir="${testTools.ship.web.dir}"/>
		<delete dir="${testTools.ship.dir}"/>
	</target>
	
	<!-- Macro for starting a build activity - starts a jazz activity if available -->
	<macrodef name="build.activity">
		<attribute name="label" />
		<attribute name="activityIdProperty" />
		<attribute name="autoComplete" default="true" />
		<sequential>
			<echo>==================================</echo>
			<echo> @{label}</echo>
			<echo>==================================</echo>
			<antcall target="jazz.build.activity">
				<param name="label" value="@{label}" />
				<param name="activityIdProperty" value="@{activityIdProperty}" />
				<param name="autoComplete" value="@{autoComplete}" />
			</antcall>
		</sequential>
	</macrodef>
	<target name="jazz.build.activity" if="is.jazz.build">
		<startBuildActivity label="${label}"
			activityIdProperty="${activityIdProperty}"
		       buildResultUUID="${buildResultUUID}"
		       repositoryAddress="${repositoryAddress}"
		    	autoComplete="${autoComplete}" 
		       userId="${jazzBuildUserId}"
		       passwordFile="${jazzBuildUserEncryptedPasswdFile}"/>
	</target>
</project>

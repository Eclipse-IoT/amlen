<?xml version="1.0" encoding="UTF-8"?>
<!--
# Copyright (c) 2012-2021 Contributors to the Eclipse Foundation
# 
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
# 
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
# 
# SPDX-License-Identifier: EPL-2.0
#
-->

<project name="svt_java" default="build_svt_java"  basedir=".">
	<property name="svt.java.src.dir" location="${basedir}/src" />
	<property name="svt.java.bin.dir" location="${basedir}/bin" />
	<property name="svt.java.scripts.dir" location="${basedir}/scripts" />
	<property name="svt.java.ssl.dir" location="${basedir}/scripts/ssl" />
	<property name="svt.java.lib.dir" location="${svt.java.bin.dir}/lib" />
	<property name="svt.ship.dir" value="${basedir}/../svt_ship"/>
    <property environment="env"/>

    <property name="client.deps.dir" value="${env.DEPS_HOME}"/>
    <property name="client.common.lib.dir" value="../client_ship/lib"/>


<!-- NOT USED, use build_tools now:	<property name="testTools.lib.dir" location="../testTools_MQ_MQTTClient/lib"/> -->

	<!-- define svt_java jar file name -->
	<property name="javasample.jar" location="${svt.java.lib.dir}/javasample.jar"/>
	<property name="cacerts.jks" location="${svt.java.ssl.dir}/cacerts.jks"/>
	<property name="cacerts.pkcs12" location="${svt.java.ssl.dir}/cacerts.pkcs12"/>
	<property name="lon02-1.iot.jks" location="${svt.java.ssl.dir}/lon02-1.iot.jks"/>
	<property name="PRODUCTION.iot.jks" location="${svt.java.ssl.dir}/PRODUCTION.iot.jks"/>

	<property name="svtScripts.build.dir" value="${basedir}/scripts"/>

   <!-- Required Classpaths -->
   <path id="compile.classpath">
<!--      <pathelement location="${external.sdk.CandI.dir}/IMA14a/SDK/clients/java/com.ibm.micro.client.mqttv3.jar"/> -->
	  <!-- I think we should be using the IMA13b Paho client, however the compile fails when I try to do so - jrs -->
	<pathelement location="${client.common.lib.dir}/org.eclipse.paho.client.mqttv3.jar" />
   	<!-- End of MQTT CLient jars, Start of iotCloud jars -->
	<pathelement location="${client.deps.dir}/jackson-annotations-2.3.3.jar" />
	<pathelement location="${client.deps.dir}/jackson-core-2.3.3.jar" />
	<pathelement location="${client.deps.dir}/jackson-databind-2.3.3.jar" />
	<pathelement location="${client.deps.dir}/json-simple-1.1.1.jar" />

	<pathelement location="${client.deps.dir}/commons-codec-1.6.jar" />
	<pathelement location="${client.deps.dir}/commons-lang-2.4.jar" />
	<pathelement location="${client.deps.dir}/commons-logging-1.1.1.jar" />
	<pathelement location="${client.deps.dir}/commons-net-2.0.jar" />
	<pathelement location="${client.deps.dir}/fluent-hc-4.2.3.jar" />
	<pathelement location="${client.deps.dir}/httpclient-4.2.3.jar" />
	<pathelement location="${client.deps.dir}/httpclient-cache-4.2.3.jar" />
	<pathelement location="${client.deps.dir}/httpcore-4.2.2.jar" />
	<pathelement location="${client.deps.dir}/httpmime-4.2.3.jar" />
	<pathelement location="${client.deps.dir}/jackson-all-1.9.11.jar" />
	<pathelement location="${client.deps.dir}/slf4j-api-1.6.1.jar" />
	<pathelement location="${client.deps.dir}/slf4j-simple-1.6.1.jar" />

	<pathelement location="${client.deps.dir}/javax.ws.rs-api-2.0.1.jar" />

	<pathelement location="${client.deps.dir}/aopalliance-repackaged-2.3.0-b10.jar" />
	<pathelement location="${client.deps.dir}/asm-debug-all-5.0.2.jar" />
	<pathelement location="${client.deps.dir}/hk2-api-2.3.0-b10.jar" />
	<pathelement location="${client.deps.dir}/hk2-locator-2.3.0-b10.jar" />
	<pathelement location="${client.deps.dir}/hk2-utils-2.3.0-b10.jar" />
	<pathelement location="${client.deps.dir}/javassist-3.18.1-GA.jar" />
	<pathelement location="${client.deps.dir}/javax.annotation-api-1.2.jar" />
	<pathelement location="${client.deps.dir}/javax.inject-2.3.0-b10.jar" />
	<pathelement location="${client.deps.dir}/javax.servlet-api-3.0.1.jar" />
	<pathelement location="${client.deps.dir}/jaxb-api-2.2.7.jar" />
	<pathelement location="${client.deps.dir}/jersey-guava-2.12.jar" />
	<pathelement location="${client.deps.dir}/org.osgi.core-4.2.0.jar" />
	<pathelement location="${client.deps.dir}/osgi-resource-locator-1.0.1.jar" />
	<pathelement location="${client.deps.dir}/persistence-api-1.0.jar" />
	<pathelement location="${client.deps.dir}/validation-api-1.1.0.Final.jar" />

	<pathelement location="${client.deps.dir}/jersey-client.jar" />
	<pathelement location="${client.deps.dir}/jersey-common.jar" />
	<pathelement location="${client.deps.dir}/jersey-container-servlet-core.jar" />
	<pathelement location="${client.deps.dir}/jersey-container-servlet.jar" />
	<pathelement location="${client.deps.dir}/jersey-server.jar" />

    <pathelement location="${client.deps.dir}/grep4j-1.8.7.jar" />

   	<!-- End of iotCloud jars, Start of ATLM WAS-MQ Conn jars -->

    <pathelement location="${client.deps.dir}/com.ibm.jaxrs.thinclient_8.5.0.jar" />
   </path>

	<property name="compile_classpath" refid="compile.classpath"/>
	<echo message="compile.classpath = ${compile_classpath}"/>

   <!--path id="test.classpath">
      <path refid="compile.classpath" />
   	  <pathelement location="/opt/apache-ant/lib" />
      <pathelement location="${svt.java.bin.dir}" />
      <pathelement location="${jms.jar.dir}" />
   </path-->

   <target name="clean">
      <delete includeemptydirs="true" dir="${svt.java.bin.dir}" />
   </target>

   <!-- Copy the product file to ship tree      -->
   <target name="java_publish">
		<echo> ==  java_publish called (TBD) ================ </echo>
		<echo> ==  Copy files to svt_ship tree ================ </echo>
		<fixcrlf eol="unix" srcdir="${svtScripts.build.dir}" includes="**/*" excludes="**/*.jks **/*.pkcs12"/>
		<copy file="${javasample.jar}" todir="${svt.ship.dir}/lib" preservelastmodified="yes" verbose="true"/>
		<copy file="${cacerts.jks}" todir="${svt.ship.dir}/svt_ssl" preservelastmodified="yes" verbose="true"/>
		<copy file="${cacerts.pkcs12}" todir="${svt.ship.dir}/svt_ssl" preservelastmodified="yes" verbose="true"/>
		<copy file="${lon02-1.iot.jks}" todir="${svt.ship.dir}/svt_ssl" preservelastmodified="yes" verbose="true"/>
		<copy file="${PRODUCTION.iot.jks}" todir="${svt.ship.dir}/svt_ssl" preservelastmodified="yes" verbose="true"/>
   </target>

	<!-- Build all normal targets  -->
	<!-- target name="production"  depends="retail, package"  -->
	<target name="build_svt_java"  depends="build_java_jar, java_publish">
		<echo> ==  Invoking ant for svt_java build ============= </echo>
	</target>

	<!-- Build output jar file -->
	<target name="build_java_jar" depends="java_compile" >
		<!-- copy MANIFEST.MF file -->
		<copy file="${svt.java.src.dir}/META-INF/MANIFEST.MF" todir="${svt.java.bin.dir}/META-INF" failonerror="yes" verbose="true" />
		<!-- set version id in the MANIFEST.MF file -->
		<replace file="${svt.java.bin.dir}/META-INF/MANIFEST.MF" token="VERSION_ID" value="${version.id}" />

		<!-- set build id in the MANIFEST.MF file -->
		<replace file="${svt.java.bin.dir}/META-INF/MANIFEST.MF" token="BUILD_ID" value="${build.id}" />

		<jar destfile="${javasample.jar}">
			<!--fileset dir="${svt.java.bin.dir}" includes="**/*.class, **/*.properties, **/*.xml, **/*.xsd" excludes="test/*" /-->
			<fileset dir="${svt.java.bin.dir}" includes="**/*.class" />
			<!--fileset dir="${svt.java.bin.dir}/test" includes="**/*.class" /-->
		</jar>
		<!-- keepcompression=true to keep the current jar compress,
           but compress=false to add the manifest as uncompressed  -->
		<jar update="true" keepcompression="true" compress="false" destfile="${javasample.jar}" manifest="${svt.java.bin.dir}/META-INF/MANIFEST.MF" />
	</target>

	<!--Compile the project-->
	<target name="java_compile" depends="svt_java_init">
		<!--  Compile the public api classes with no visibility to the internal files -->
		<javac srcdir="${svt.java.src.dir}" destdir="${svt.java.bin.dir}" deprecation="no"
             includeAntRuntime="no"
             debug="yes" debuglevel="lines,source,vars" optimize="yes">
			<src path="${svt.java.src.dir}" />
			<classpath refid="compile.classpath" />
		</javac>
        <copy todir="${svt.java.bin.dir}" preservelastmodified="yes">
			<fileset dir="${svt.java.src.dir}" excludes="**/*.java" />
		</copy>
	</target>

    <!-- Initialize the build environment -->
	<target name="svt_java_init">
		<mkdir dir="${svt.java.lib.dir}"/>
	</target>
</project>

//Java signature file
//date: Wed Aug 14 11:16:21 EDT 2002
//classpath: /files/j2sdkee1.4/lib/j2ee.jar
//package: javax.jms


package javax.jms;

public abstract interface BytesMessage extends javax.jms.Message {
	public abstract long getBodyLength() throws javax.jms.JMSException;
	public abstract boolean readBoolean() throws javax.jms.JMSException;
	public abstract byte readByte() throws javax.jms.JMSException;
	public abstract int readBytes(byte[]) throws javax.jms.JMSException;
	public abstract int readBytes(byte[], int) throws javax.jms.JMSException;
	public abstract char readChar() throws javax.jms.JMSException;
	public abstract double readDouble() throws javax.jms.JMSException;
	public abstract float readFloat() throws javax.jms.JMSException;
	public abstract int readInt() throws javax.jms.JMSException;
	public abstract long readLong() throws javax.jms.JMSException;
	public abstract short readShort() throws javax.jms.JMSException;
	public abstract String readUTF() throws javax.jms.JMSException;
	public abstract int readUnsignedByte() throws javax.jms.JMSException;
	public abstract int readUnsignedShort() throws javax.jms.JMSException;
	public abstract void reset() throws javax.jms.JMSException;
	public abstract void writeBoolean(boolean) throws javax.jms.JMSException;
	public abstract void writeByte(byte) throws javax.jms.JMSException;
	public abstract void writeBytes(byte[]) throws javax.jms.JMSException;
	public abstract void writeBytes(byte[], int, int) throws javax.jms.JMSException;
	public abstract void writeChar(char) throws javax.jms.JMSException;
	public abstract void writeDouble(double) throws javax.jms.JMSException;
	public abstract void writeFloat(float) throws javax.jms.JMSException;
	public abstract void writeInt(int) throws javax.jms.JMSException;
	public abstract void writeLong(long) throws javax.jms.JMSException;
	public abstract void writeObject(Object) throws javax.jms.JMSException;
	public abstract void writeShort(short) throws javax.jms.JMSException;
	public abstract void writeUTF(String) throws javax.jms.JMSException;
}

public abstract interface Connection {
	public abstract void close() throws javax.jms.JMSException;
	public abstract javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Destination, String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
	public abstract javax.jms.ConnectionConsumer createDurableConnectionConsumer(javax.jms.Topic, String, String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
	public abstract javax.jms.Session createSession(boolean, int) throws javax.jms.JMSException;
	public abstract String getClientID() throws javax.jms.JMSException;
	public abstract javax.jms.ExceptionListener getExceptionListener() throws javax.jms.JMSException;
	public abstract javax.jms.ConnectionMetaData getMetaData() throws javax.jms.JMSException;
	public abstract void setClientID(String) throws javax.jms.JMSException;
	public abstract void setExceptionListener(javax.jms.ExceptionListener) throws javax.jms.JMSException;
	public abstract void start() throws javax.jms.JMSException;
	public abstract void stop() throws javax.jms.JMSException;
}

public abstract interface ConnectionConsumer {
	public abstract void close() throws javax.jms.JMSException;
	public abstract javax.jms.ServerSessionPool getServerSessionPool() throws javax.jms.JMSException;
}

public abstract interface ConnectionFactory {
	public abstract javax.jms.Connection createConnection() throws javax.jms.JMSException;
	public abstract javax.jms.Connection createConnection(String, String) throws javax.jms.JMSException;
}

public abstract interface ConnectionMetaData {
	public abstract int getJMSMajorVersion() throws javax.jms.JMSException;
	public abstract int getJMSMinorVersion() throws javax.jms.JMSException;
	public abstract String getJMSProviderName() throws javax.jms.JMSException;
	public abstract String getJMSVersion() throws javax.jms.JMSException;
	public abstract java.util.Enumeration getJMSXPropertyNames() throws javax.jms.JMSException;
	public abstract int getProviderMajorVersion() throws javax.jms.JMSException;
	public abstract int getProviderMinorVersion() throws javax.jms.JMSException;
	public abstract String getProviderVersion() throws javax.jms.JMSException;
}

public abstract interface DeliveryMode {
	public static final int NON_PERSISTENT=1;
	public static final int PERSISTENT=2;
}

public abstract interface Destination {}

public abstract interface ExceptionListener {
	public abstract void onException(javax.jms.JMSException);
}

public class IllegalStateException extends javax.jms.JMSException {
	public IllegalStateException(String);
	public IllegalStateException(String, String);
}

public class InvalidClientIDException extends javax.jms.JMSException {
	public InvalidClientIDException(String);
	public InvalidClientIDException(String, String);
}

public class InvalidDestinationException extends javax.jms.JMSException {
	public InvalidDestinationException(String);
	public InvalidDestinationException(String, String);
}

public class InvalidSelectorException extends javax.jms.JMSException {
	public InvalidSelectorException(String);
	public InvalidSelectorException(String, String);
}

public class JMSException extends Exception {
	public JMSException(String);
	public JMSException(String, String);
	public String getErrorCode();
	public Exception getLinkedException();
	public synchronized void setLinkedException(Exception);
	private String errorCode;
	private Exception linkedException;
}

public class JMSSecurityException extends javax.jms.JMSException {
	public JMSSecurityException(String);
	public JMSSecurityException(String, String);
}

public abstract interface MapMessage extends javax.jms.Message {
	public abstract boolean getBoolean(String) throws javax.jms.JMSException;
	public abstract byte getByte(String) throws javax.jms.JMSException;
	public abstract byte[] getBytes(String) throws javax.jms.JMSException;
	public abstract char getChar(String) throws javax.jms.JMSException;
	public abstract double getDouble(String) throws javax.jms.JMSException;
	public abstract float getFloat(String) throws javax.jms.JMSException;
	public abstract int getInt(String) throws javax.jms.JMSException;
	public abstract long getLong(String) throws javax.jms.JMSException;
	public abstract java.util.Enumeration getMapNames() throws javax.jms.JMSException;
	public abstract Object getObject(String) throws javax.jms.JMSException;
	public abstract short getShort(String) throws javax.jms.JMSException;
	public abstract String getString(String) throws javax.jms.JMSException;
	public abstract boolean itemExists(String) throws javax.jms.JMSException;
	public abstract void setBoolean(String, boolean) throws javax.jms.JMSException;
	public abstract void setByte(String, byte) throws javax.jms.JMSException;
	public abstract void setBytes(String, byte[]) throws javax.jms.JMSException;
	public abstract void setBytes(String, byte[], int, int) throws javax.jms.JMSException;
	public abstract void setChar(String, char) throws javax.jms.JMSException;
	public abstract void setDouble(String, double) throws javax.jms.JMSException;
	public abstract void setFloat(String, float) throws javax.jms.JMSException;
	public abstract void setInt(String, int) throws javax.jms.JMSException;
	public abstract void setLong(String, long) throws javax.jms.JMSException;
	public abstract void setObject(String, Object) throws javax.jms.JMSException;
	public abstract void setShort(String, short) throws javax.jms.JMSException;
	public abstract void setString(String, String) throws javax.jms.JMSException;
}

public abstract interface Message {
	public abstract void acknowledge() throws javax.jms.JMSException;
	public abstract void clearBody() throws javax.jms.JMSException;
	public abstract void clearProperties() throws javax.jms.JMSException;
	public abstract boolean getBooleanProperty(String) throws javax.jms.JMSException;
	public abstract byte getByteProperty(String) throws javax.jms.JMSException;
	public abstract double getDoubleProperty(String) throws javax.jms.JMSException;
	public abstract float getFloatProperty(String) throws javax.jms.JMSException;
	public abstract int getIntProperty(String) throws javax.jms.JMSException;
	public abstract String getJMSCorrelationID() throws javax.jms.JMSException;
	public abstract byte[] getJMSCorrelationIDAsBytes() throws javax.jms.JMSException;
	public abstract int getJMSDeliveryMode() throws javax.jms.JMSException;
	public abstract javax.jms.Destination getJMSDestination() throws javax.jms.JMSException;
	public abstract long getJMSExpiration() throws javax.jms.JMSException;
	public abstract String getJMSMessageID() throws javax.jms.JMSException;
	public abstract int getJMSPriority() throws javax.jms.JMSException;
	public abstract boolean getJMSRedelivered() throws javax.jms.JMSException;
	public abstract javax.jms.Destination getJMSReplyTo() throws javax.jms.JMSException;
	public abstract long getJMSTimestamp() throws javax.jms.JMSException;
	public abstract String getJMSType() throws javax.jms.JMSException;
	public abstract long getLongProperty(String) throws javax.jms.JMSException;
	public abstract Object getObjectProperty(String) throws javax.jms.JMSException;
	public abstract java.util.Enumeration getPropertyNames() throws javax.jms.JMSException;
	public abstract short getShortProperty(String) throws javax.jms.JMSException;
	public abstract String getStringProperty(String) throws javax.jms.JMSException;
	public abstract boolean propertyExists(String) throws javax.jms.JMSException;
	public abstract void setBooleanProperty(String, boolean) throws javax.jms.JMSException;
	public abstract void setByteProperty(String, byte) throws javax.jms.JMSException;
	public abstract void setDoubleProperty(String, double) throws javax.jms.JMSException;
	public abstract void setFloatProperty(String, float) throws javax.jms.JMSException;
	public abstract void setIntProperty(String, int) throws javax.jms.JMSException;
	public abstract void setJMSCorrelationID(String) throws javax.jms.JMSException;
	public abstract void setJMSCorrelationIDAsBytes(byte[]) throws javax.jms.JMSException;
	public abstract void setJMSDeliveryMode(int) throws javax.jms.JMSException;
	public abstract void setJMSDestination(javax.jms.Destination) throws javax.jms.JMSException;
	public abstract void setJMSExpiration(long) throws javax.jms.JMSException;
	public abstract void setJMSMessageID(String) throws javax.jms.JMSException;
	public abstract void setJMSPriority(int) throws javax.jms.JMSException;
	public abstract void setJMSRedelivered(boolean) throws javax.jms.JMSException;
	public abstract void setJMSReplyTo(javax.jms.Destination) throws javax.jms.JMSException;
	public abstract void setJMSTimestamp(long) throws javax.jms.JMSException;
	public abstract void setJMSType(String) throws javax.jms.JMSException;
	public abstract void setLongProperty(String, long) throws javax.jms.JMSException;
	public abstract void setObjectProperty(String, Object) throws javax.jms.JMSException;
	public abstract void setShortProperty(String, short) throws javax.jms.JMSException;
	public abstract void setStringProperty(String, String) throws javax.jms.JMSException;
	public static final int DEFAULT_DELIVERY_MODE=2;
	public static final int DEFAULT_PRIORITY=4;
	public static final long DEFAULT_TIME_TO_LIVE=0L;
}

public abstract interface MessageConsumer {
	public abstract void close() throws javax.jms.JMSException;
	public abstract javax.jms.MessageListener getMessageListener() throws javax.jms.JMSException;
	public abstract String getMessageSelector() throws javax.jms.JMSException;
	public abstract javax.jms.Message receive() throws javax.jms.JMSException;
	public abstract javax.jms.Message receive(long) throws javax.jms.JMSException;
	public abstract javax.jms.Message receiveNoWait() throws javax.jms.JMSException;
	public abstract void setMessageListener(javax.jms.MessageListener) throws javax.jms.JMSException;
}

public class MessageEOFException extends javax.jms.JMSException {
	public MessageEOFException(String);
	public MessageEOFException(String, String);
}

public class MessageFormatException extends javax.jms.JMSException {
	public MessageFormatException(String);
	public MessageFormatException(String, String);
}

public abstract interface MessageListener {
	public abstract void onMessage(javax.jms.Message);
}

public class MessageNotReadableException extends javax.jms.JMSException {
	public MessageNotReadableException(String);
	public MessageNotReadableException(String, String);
}

public class MessageNotWriteableException extends javax.jms.JMSException {
	public MessageNotWriteableException(String);
	public MessageNotWriteableException(String, String);
}

public abstract interface MessageProducer {
	public abstract void close() throws javax.jms.JMSException;
	public abstract int getDeliveryMode() throws javax.jms.JMSException;
	public abstract javax.jms.Destination getDestination() throws javax.jms.JMSException;
	public abstract boolean getDisableMessageID() throws javax.jms.JMSException;
	public abstract boolean getDisableMessageTimestamp() throws javax.jms.JMSException;
	public abstract int getPriority() throws javax.jms.JMSException;
	public abstract long getTimeToLive() throws javax.jms.JMSException;
	public abstract void send(javax.jms.Destination, javax.jms.Message) throws javax.jms.JMSException;
	public abstract void send(javax.jms.Destination, javax.jms.Message, int, int, long) throws javax.jms.JMSException;
	public abstract void send(javax.jms.Message) throws javax.jms.JMSException;
	public abstract void send(javax.jms.Message, int, int, long) throws javax.jms.JMSException;
	public abstract void setDeliveryMode(int) throws javax.jms.JMSException;
	public abstract void setDisableMessageID(boolean) throws javax.jms.JMSException;
	public abstract void setDisableMessageTimestamp(boolean) throws javax.jms.JMSException;
	public abstract void setPriority(int) throws javax.jms.JMSException;
	public abstract void setTimeToLive(long) throws javax.jms.JMSException;
}

public abstract interface ObjectMessage extends javax.jms.Message {
	public abstract java.io.Serializable getObject() throws javax.jms.JMSException;
	public abstract void setObject(java.io.Serializable) throws javax.jms.JMSException;
}

public abstract interface Queue extends javax.jms.Destination {
	public abstract String getQueueName() throws javax.jms.JMSException;
	public abstract String toString();
}

public abstract interface QueueBrowser {
	public abstract void close() throws javax.jms.JMSException;
	public abstract java.util.Enumeration getEnumeration() throws javax.jms.JMSException;
	public abstract String getMessageSelector() throws javax.jms.JMSException;
	public abstract javax.jms.Queue getQueue() throws javax.jms.JMSException;
}

public abstract interface QueueConnection extends javax.jms.Connection {
	public abstract javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Queue, String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
	public abstract javax.jms.QueueSession createQueueSession(boolean, int) throws javax.jms.JMSException;
}

public abstract interface QueueConnectionFactory extends javax.jms.ConnectionFactory {
	public abstract javax.jms.QueueConnection createQueueConnection() throws javax.jms.JMSException;
	public abstract javax.jms.QueueConnection createQueueConnection(String, String) throws javax.jms.JMSException;
}

public abstract interface QueueReceiver extends javax.jms.MessageConsumer {
	public abstract javax.jms.Queue getQueue() throws javax.jms.JMSException;
}

public class QueueRequestor {
	public QueueRequestor(javax.jms.QueueSession, javax.jms.Queue) throws javax.jms.JMSException;
	public void close() throws javax.jms.JMSException;
	public javax.jms.Message request(javax.jms.Message) throws javax.jms.JMSException;
	javax.jms.Queue queue;
	javax.jms.QueueReceiver receiver;
	javax.jms.QueueSender sender;
	javax.jms.QueueSession session;
	javax.jms.TemporaryQueue tempQueue;
}

public abstract interface QueueSender extends javax.jms.MessageProducer {
	public abstract javax.jms.Queue getQueue() throws javax.jms.JMSException;
	public abstract void send(javax.jms.Message) throws javax.jms.JMSException;
	public abstract void send(javax.jms.Message, int, int, long) throws javax.jms.JMSException;
	public abstract void send(javax.jms.Queue, javax.jms.Message) throws javax.jms.JMSException;
	public abstract void send(javax.jms.Queue, javax.jms.Message, int, int, long) throws javax.jms.JMSException;
}

public abstract interface QueueSession extends javax.jms.Session {
	public abstract javax.jms.QueueBrowser createBrowser(javax.jms.Queue) throws javax.jms.JMSException;
	public abstract javax.jms.QueueBrowser createBrowser(javax.jms.Queue, String) throws javax.jms.JMSException;
	public abstract javax.jms.Queue createQueue(String) throws javax.jms.JMSException;
	public abstract javax.jms.QueueReceiver createReceiver(javax.jms.Queue) throws javax.jms.JMSException;
	public abstract javax.jms.QueueReceiver createReceiver(javax.jms.Queue, String) throws javax.jms.JMSException;
	public abstract javax.jms.QueueSender createSender(javax.jms.Queue) throws javax.jms.JMSException;
	public abstract javax.jms.TemporaryQueue createTemporaryQueue() throws javax.jms.JMSException;
}

public class ResourceAllocationException extends javax.jms.JMSException {
	public ResourceAllocationException(String);
	public ResourceAllocationException(String, String);
}

public abstract interface ServerSession {
	public abstract javax.jms.Session getSession() throws javax.jms.JMSException;
	public abstract void start() throws javax.jms.JMSException;
}

public abstract interface ServerSessionPool {
	public abstract javax.jms.ServerSession getServerSession() throws javax.jms.JMSException;
}

public abstract interface Session extends Runnable {
	public abstract void close() throws javax.jms.JMSException;
	public abstract void commit() throws javax.jms.JMSException;
	public abstract javax.jms.QueueBrowser createBrowser(javax.jms.Queue) throws javax.jms.JMSException;
	public abstract javax.jms.QueueBrowser createBrowser(javax.jms.Queue, String) throws javax.jms.JMSException;
	public abstract javax.jms.BytesMessage createBytesMessage() throws javax.jms.JMSException;
	public abstract javax.jms.MessageConsumer createConsumer(javax.jms.Destination) throws javax.jms.JMSException;
	public abstract javax.jms.MessageConsumer createConsumer(javax.jms.Destination, String) throws javax.jms.JMSException;
	public abstract javax.jms.MessageConsumer createConsumer(javax.jms.Destination, String, boolean) throws javax.jms.JMSException;
	public abstract javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic, String) throws javax.jms.JMSException;
	public abstract javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic, String, String, boolean) throws javax.jms.JMSException;
	public abstract javax.jms.MapMessage createMapMessage() throws javax.jms.JMSException;
	public abstract javax.jms.Message createMessage() throws javax.jms.JMSException;
	public abstract javax.jms.ObjectMessage createObjectMessage() throws javax.jms.JMSException;
	public abstract javax.jms.ObjectMessage createObjectMessage(java.io.Serializable) throws javax.jms.JMSException;
	public abstract javax.jms.MessageProducer createProducer(javax.jms.Destination) throws javax.jms.JMSException;
	public abstract javax.jms.Queue createQueue(String) throws javax.jms.JMSException;
	public abstract javax.jms.StreamMessage createStreamMessage() throws javax.jms.JMSException;
	public abstract javax.jms.TemporaryQueue createTemporaryQueue() throws javax.jms.JMSException;
	public abstract javax.jms.TemporaryTopic createTemporaryTopic() throws javax.jms.JMSException;
	public abstract javax.jms.TextMessage createTextMessage() throws javax.jms.JMSException;
	public abstract javax.jms.TextMessage createTextMessage(String) throws javax.jms.JMSException;
	public abstract javax.jms.Topic createTopic(String) throws javax.jms.JMSException;
	public abstract int getAcknowledgeMode() throws javax.jms.JMSException;
	public abstract javax.jms.MessageListener getMessageListener() throws javax.jms.JMSException;
	public abstract boolean getTransacted() throws javax.jms.JMSException;
	public abstract void recover() throws javax.jms.JMSException;
	public abstract void rollback() throws javax.jms.JMSException;
	public abstract void run();
	public abstract void setMessageListener(javax.jms.MessageListener) throws javax.jms.JMSException;
	public abstract void unsubscribe(String) throws javax.jms.JMSException;
	public static final int AUTO_ACKNOWLEDGE=1;
	public static final int CLIENT_ACKNOWLEDGE=2;
	public static final int DUPS_OK_ACKNOWLEDGE=3;
	public static final int SESSION_TRANSACTED=0;
}

public abstract interface StreamMessage extends javax.jms.Message {
	public abstract boolean readBoolean() throws javax.jms.JMSException;
	public abstract byte readByte() throws javax.jms.JMSException;
	public abstract int readBytes(byte[]) throws javax.jms.JMSException;
	public abstract char readChar() throws javax.jms.JMSException;
	public abstract double readDouble() throws javax.jms.JMSException;
	public abstract float readFloat() throws javax.jms.JMSException;
	public abstract int readInt() throws javax.jms.JMSException;
	public abstract long readLong() throws javax.jms.JMSException;
	public abstract Object readObject() throws javax.jms.JMSException;
	public abstract short readShort() throws javax.jms.JMSException;
	public abstract String readString() throws javax.jms.JMSException;
	public abstract void reset() throws javax.jms.JMSException;
	public abstract void writeBoolean(boolean) throws javax.jms.JMSException;
	public abstract void writeByte(byte) throws javax.jms.JMSException;
	public abstract void writeBytes(byte[]) throws javax.jms.JMSException;
	public abstract void writeBytes(byte[], int, int) throws javax.jms.JMSException;
	public abstract void writeChar(char) throws javax.jms.JMSException;
	public abstract void writeDouble(double) throws javax.jms.JMSException;
	public abstract void writeFloat(float) throws javax.jms.JMSException;
	public abstract void writeInt(int) throws javax.jms.JMSException;
	public abstract void writeLong(long) throws javax.jms.JMSException;
	public abstract void writeObject(Object) throws javax.jms.JMSException;
	public abstract void writeShort(short) throws javax.jms.JMSException;
	public abstract void writeString(String) throws javax.jms.JMSException;
}

public abstract interface TemporaryQueue extends javax.jms.Queue {
	public abstract void delete() throws javax.jms.JMSException;
}

public abstract interface TemporaryTopic extends javax.jms.Topic {
	public abstract void delete() throws javax.jms.JMSException;
}

public abstract interface TextMessage extends javax.jms.Message {
	public abstract String getText() throws javax.jms.JMSException;
	public abstract void setText(String) throws javax.jms.JMSException;
}

public abstract interface Topic extends javax.jms.Destination {
	public abstract String getTopicName() throws javax.jms.JMSException;
	public abstract String toString();
}

public abstract interface TopicConnection extends javax.jms.Connection {
	public abstract javax.jms.ConnectionConsumer createConnectionConsumer(javax.jms.Topic, String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
	public abstract javax.jms.ConnectionConsumer createDurableConnectionConsumer(javax.jms.Topic, String, String, javax.jms.ServerSessionPool, int) throws javax.jms.JMSException;
	public abstract javax.jms.TopicSession createTopicSession(boolean, int) throws javax.jms.JMSException;
}

public abstract interface TopicConnectionFactory extends javax.jms.ConnectionFactory {
	public abstract javax.jms.TopicConnection createTopicConnection() throws javax.jms.JMSException;
	public abstract javax.jms.TopicConnection createTopicConnection(String, String) throws javax.jms.JMSException;
}

public abstract interface TopicPublisher extends javax.jms.MessageProducer {
	public abstract javax.jms.Topic getTopic() throws javax.jms.JMSException;
	public abstract void publish(javax.jms.Message) throws javax.jms.JMSException;
	public abstract void publish(javax.jms.Message, int, int, long) throws javax.jms.JMSException;
	public abstract void publish(javax.jms.Topic, javax.jms.Message) throws javax.jms.JMSException;
	public abstract void publish(javax.jms.Topic, javax.jms.Message, int, int, long) throws javax.jms.JMSException;
}

public class TopicRequestor {
	public TopicRequestor(javax.jms.TopicSession, javax.jms.Topic) throws javax.jms.JMSException;
	public void close() throws javax.jms.JMSException;
	public javax.jms.Message request(javax.jms.Message) throws javax.jms.JMSException;
	javax.jms.TopicPublisher publisher;
	javax.jms.TopicSession session;
	javax.jms.TopicSubscriber subscriber;
	javax.jms.TemporaryTopic tempTopic;
	javax.jms.Topic topic;
}

public abstract interface TopicSession extends javax.jms.Session {
	public abstract javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic, String) throws javax.jms.JMSException;
	public abstract javax.jms.TopicSubscriber createDurableSubscriber(javax.jms.Topic, String, String, boolean) throws javax.jms.JMSException;
	public abstract javax.jms.TopicPublisher createPublisher(javax.jms.Topic) throws javax.jms.JMSException;
	public abstract javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic) throws javax.jms.JMSException;
	public abstract javax.jms.TopicSubscriber createSubscriber(javax.jms.Topic, String, boolean) throws javax.jms.JMSException;
	public abstract javax.jms.TemporaryTopic createTemporaryTopic() throws javax.jms.JMSException;
	public abstract javax.jms.Topic createTopic(String) throws javax.jms.JMSException;
	public abstract void unsubscribe(String) throws javax.jms.JMSException;
}

public abstract interface TopicSubscriber extends javax.jms.MessageConsumer {
	public abstract boolean getNoLocal() throws javax.jms.JMSException;
	public abstract javax.jms.Topic getTopic() throws javax.jms.JMSException;
}

public class TransactionInProgressException extends javax.jms.JMSException {
	public TransactionInProgressException(String);
	public TransactionInProgressException(String, String);
}

public class TransactionRolledBackException extends javax.jms.JMSException {
	public TransactionRolledBackException(String);
	public TransactionRolledBackException(String, String);
}

public abstract interface XAConnection extends javax.jms.Connection {
	public abstract javax.jms.Session createSession(boolean, int) throws javax.jms.JMSException;
	public abstract javax.jms.XASession createXASession() throws javax.jms.JMSException;
}

public abstract interface XAConnectionFactory {
	public abstract javax.jms.XAConnection createXAConnection() throws javax.jms.JMSException;
	public abstract javax.jms.XAConnection createXAConnection(String, String) throws javax.jms.JMSException;
}

public abstract interface XAQueueConnection extends javax.jms.XAConnection, javax.jms.QueueConnection {
	public abstract javax.jms.QueueSession createQueueSession(boolean, int) throws javax.jms.JMSException;
	public abstract javax.jms.XAQueueSession createXAQueueSession() throws javax.jms.JMSException;
}

public abstract interface XAQueueConnectionFactory extends javax.jms.XAConnectionFactory, javax.jms.QueueConnectionFactory {
	public abstract javax.jms.XAQueueConnection createXAQueueConnection() throws javax.jms.JMSException;
	public abstract javax.jms.XAQueueConnection createXAQueueConnection(String, String) throws javax.jms.JMSException;
}

public abstract interface XAQueueSession extends javax.jms.XASession {
	public abstract javax.jms.QueueSession getQueueSession() throws javax.jms.JMSException;
}

public abstract interface XASession extends javax.jms.Session {
	public abstract void commit() throws javax.jms.JMSException;
	public abstract javax.jms.Session getSession() throws javax.jms.JMSException;
	public abstract boolean getTransacted() throws javax.jms.JMSException;
	public abstract javax.transaction.xa.XAResource getXAResource();
	public abstract void rollback() throws javax.jms.JMSException;
}

public abstract interface XATopicConnection extends javax.jms.XAConnection, javax.jms.TopicConnection {
	public abstract javax.jms.TopicSession createTopicSession(boolean, int) throws javax.jms.JMSException;
	public abstract javax.jms.XATopicSession createXATopicSession() throws javax.jms.JMSException;
}

public abstract interface XATopicConnectionFactory extends javax.jms.XAConnectionFactory, javax.jms.TopicConnectionFactory {
	public abstract javax.jms.XATopicConnection createXATopicConnection() throws javax.jms.JMSException;
	public abstract javax.jms.XATopicConnection createXATopicConnection(String, String) throws javax.jms.JMSException;
}

public abstract interface XATopicSession extends javax.jms.XASession {
	public abstract javax.jms.TopicSession getTopicSession() throws javax.jms.JMSException;
}

//end of Java signature file

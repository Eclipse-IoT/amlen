apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ pair_name }}"
  namespace: "{{ _amlen_namespace }}"
  labels:
    app: "{{ app_name }}"
spec:
  replicas: {{Â ha.enabled | default(false) | ternary( 2 , 1 ) }}
  selector:
    matchLabels:
      app: "{{ app_name }}"
  strategy:
    type: RollingUpdate
  ports:
{% for key, value in amlen_messaging_ports.items() %}
  - port: {{value}}
{% endfor %}
{% for key, value in amlen_ha_ports.items() %}
  - port: {{ value }}
{% endfor %}
{% for key, value in amlen_service_ports.items() %}
  - port: {{value}}
{% endfor %}


  serviceName: "{{ _amlen_service_name | default(pair_name) }}"
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
  template:
    metadata:
      labels:
        app: "{{ app_name }}"
        release: "{{ _amlen_release }}"
      annotations:
        kubectl.kubernetes.io/default-container: amlen
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: "{{_amlen_topology_spread_constraints_when_unsatisfiable}}"
        labelSelector: 
          matchLabels:
            app: "{{ app_name }}"
      containers:
      - name: monitor
        image: "{{ _amlen_monitor_image }}:{{ _amlen_monitor_image_tag}}"
        imagePullPolicy: Always
        volumeMounts:
        - name: adminpassword
          mountPath: /secrets/admin
      - name: amlen
        image: "{{ _amlen_image }}:{{ _amlen_image_tag }}"
        imagePullPolicy: Always
        readinessProbe:
          exec:
            command:
            - python3
            - "{{_amlen_bin_directory | default('/usr/share/amlen-server/bin/')}}readiness.py"
          initialDelaySeconds: 30
          timeoutSeconds: 60
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
            - python3
            - "{{_amlen_bin_directory | default('/usr/share/amlen-server/bin/')}}liveness.py"
          initialDelaySeconds: 30
          timeoutSeconds: 5 
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: "{{ _amlen_cpu_request }}"
            memory: "{{ _amlen_memory_request}}"
          limits:
            cpu: "{{ _amlen_cpu_limit}}"
            memory: "{{ _amlen_memory_limit }}"
        volumeMounts:
        - name: data
          mountPath: "{{_amlen_directory | default('/var/lib/amlen-server/')}}"
        - name: adminpassword
          mountPath: /secrets/admin
        - name: device-certs
          mountPath: /secrets/device_certs
        - name: ha-certs
          mountPath: /secrets/ha_certs
        env:
        - name: CONTAINER_PASSWORD_CHECK
          value: "true"
{% if _amlen_image_pull_secret is defined %}
      imagePullSecrets:
      - name: "{{_amlen_image_pull_secret}}"
{% endif %}
      volumes:
        - name: adminpassword
          secret: 
            secretName: "{{ pair_name }}-adminpassword"
        - name: device-certs
          secret:
            secretName: "{{device_certs_secret}}"
            optional: {{ not device_certs_required }}
        - name: ha-certs
          secret:
            secretName: "{{ha_certs_secret}}"
            optional: {{ standalone }}
 
{% if _amlen_persistence == "false" %}
        - name: data
          emptyDir: {}
{% else %}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: {{_amlen_storage_class}}
      resources:
        requests:
          storage: "{{_amlen_volume_size}}"
{% endif %}

  serviceTemplate:
  - metadata:
      name: test_service
    spec:
      cluster: None
    

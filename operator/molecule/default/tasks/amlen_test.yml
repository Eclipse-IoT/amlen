---
- name: Title
  debug:
    msg: "Starting amlen test to create 2 ha pairs expose the second and send an mqtt message"

- name: Create the configmap
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([samples_dir, item])) | from_yaml }}"
  loop:
    - 'selfsigned.yaml'
    - 'config.yaml'

- name: add old service
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([testing_dir, cr_file])) | from_yaml }}"
  vars:
    cr_file: 'loadbalancer.j2'
    instancenum: 1

- name: Create the eclipse.org/v1.Amlen
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([testing_dir, cr_file])) | from_yaml }}"
    wait: yes
    wait_timeout: 600
    wait_condition:
      type: Successful
      status: "True"
  vars:
    cr_file: 'amlen/_v1_amlen.yaml'

- name: "Change the client service to ClusterIP"
  kubernetes.core.k8s_json_patch:
    api_version: eclipse.org/v1
    kind: Amlen
    namespace: "{{ namespace }}"
    name: "amlen-sample-1"
    patch:
    - op: replace
      path: "/spec/client_service_type"
      value: "ClusterIP"

- name: get service
  k8s_info:
    kind: Service
    namespace: '{{ namespace }}'
    name: "amlen-sample-1-mqtt"
  register: service
  until: service.spec.type == "ClusterIP"
  retries: 10
  delay: 60

- name: Expose the mqtt service
  community.okd.openshift_route:
    service: amlen-sample-1-mqtt
    namespace: '{{ namespace }}'
    termination: "passthrough"
    annotations:
      haproxy.router.openshift.io/balance: "roundrobin"
      haproxy.router.openshift.io/disable_cookies: 'true'
      haproxy.router.openshift.io/retry_on: "all-retryable-errors"
  register: route

- name: get service
  k8s_info:
    kind: Service
    namespace: '{{ namespace }}'
    name: "amlen-sample-1-mqtt"
  register: service

- name: get certs
  k8s_info:
    kind: Secret
    name: "amlen-sample-1-cert-devices"
    namespace: "{{ namespace }}"
  register: certs

- name: store cacert
  copy:
    content: "{{certs.resources[0].data['ca.crt']|b64decode}}"
    dest: "./ca.crt"

- name: store tlskey
  copy:
    content: "{{certs.resources[0].data['tls.key']|b64decode}}"
    dest: "./tls.key"

- name: create csr
  ansible.builtin.command: openssl req -new -key tls.key -out tls.csr -batch

- name: create crt
  ansible.builtin.command: openssl x509 -req -in tls.csr -CA ca.crt -CAkey tls.key -CAcreateserial -out tls.crt -days 825 -sha256

- name: run test
  subscribeTest:
    clientid: "test1"
    host: "{{route.result.spec.host}}"
    insecure: True
    use-tls: True
    topic: "testtopic"
    port: "{{service.resources[0].spec.ports[0].port}}"
    ca.crt: "./ca.crt"
    tls.crt: "./tls.crt"
    tls.key: "./tls.key"
  register: testresult
  until: testresult is not failed
  retries: 3
  delay: 60

- name: delete cert files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "./ca.crt"
    - "./tls.crt"
    - "./tls.csr"
    - "./tls.key"
    - "./ca.srl"

- name: UnExpose the mqtt service
  community.okd.openshift_route:
    service: amlen-sample-1-mqtt
    namespace: '{{ namespace }}'
    state: absent

- name: Delete the eclipse.org/v1.Amlen
  k8s:
    state: absent
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([testing_dir, cr_file])) | from_yaml }}"
    wait: yes
    wait_timeout: 600
    wait_condition:
      type: Successful
      status: "True"
  vars:
    cr_file: 'amlen/_v1_amlen.yaml'

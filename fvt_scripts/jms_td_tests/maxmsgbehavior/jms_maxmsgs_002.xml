<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * Copyright (c) 2013-2021 Contributors to the Eclipse Foundation
 * 
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 * 
 * SPDX-License-Identifier: EPL-2.0
 */
  TestCase Name: jms_maxmsgs_002

  Test Category:  JMS MaxMessageBehavior DiscardOldest With a non-Durable Subscription

  Simple test: synchronous non durable consumer, Receives some.. stops receiving, 
  producer should fill up the topic.. starts receiving then messages should be discarded.
  and the consumer should get the 50 messages that were in its clientcache, and then
  get the oldest messages sent.  

  Test Description:
  
  I leave clientmessagecache set to the default of 1000. MaxMessages is 100
  

*****************************************************************************/
-->
<ImaJmsTest name="jms_maxmsgs_002" >
<SyncClient>
        <server>
                <include>../common/JMS_syncip.xml</include>
				<include>../common/JMS_syncport.xml</include>
        </server>
        <solution>JMS_MM_002</solution>
</SyncClient>

<Action name="Cons1" type="CompositeAction">
        <!-- Reset this SyncDriver solution to clean up any existing values that might conflict -->
        <Action name="syncReset" type="SyncAction">
               <ActionParameter name="request">reset</ActionParameter>
        </Action>

        <!-- Initialize the SyncDriver values -->

        <Action name="syncInit1" type="SyncAction">
                <ActionParameter name="request">init</ActionParameter>
                <ActionParameter name="condition">syncPoint</ActionParameter>
        </Action>

        <Action name="CreateFactory_Cons1" type="CreateConnectionFactory">
                <ActionParameter name="structure_id">CF1</ActionParameter>
                <!--ActionParameter name="loglevel">9</ActionParameter>
                <ActionParameter name="logfile">stdout</ActionParameter-->

        </Action>

        <Action name="CreateListener_Cons1" type="CreateExceptionListener">
                <ActionParameter name="structure_id">listener1</ActionParameter>
        </Action>

        <Action name="SetFactoryProps_Cons1" type="FillIsmProps">
            <ActionParameter name="structure_id">CF1</ActionParameter>
        	<ActionParameter name="validateAll">true</ActionParameter>
        	<ActionParameter name="validateNoWarn">false</ActionParameter>
	        <include>../common/JMS_server.xml</include>
    	    <ImaProperty name="Port" value="29304" type="STRING"/>
        </Action>

        <Action name="CreateConnection_Cons1" type="CreateConnection">
                <ActionParameter name="structure_id">Con1_Cons1</ActionParameter>
                <ActionParameter name="factory_id">CF1</ActionParameter>
                <ApiParameter name="exceptionListener">listener1</ApiParameter>
                <ApiParameter name="ClientID">jms_mm001_clientid</ApiParameter>
        </Action>

        <Action name="CreateSession_Cons1" type="CreateSession">
                <ActionParameter name="conn_id">Con1_Cons1</ActionParameter>
                <ActionParameter name="structure_id">Ses1_Cons1</ActionParameter>
        </Action>

        <Action name="CreateDestination_Cons1" type="CreateDestination">
                <ApiParameter name="name">/MM/jmsMM-001</ApiParameter>
                <ActionParameter name="type">topic</ActionParameter>
                <ActionParameter name="structure_id">destCons1</ActionParameter>
        </Action>
        
       <Action name="SetProps_destCons1" type="FillIsmProps">
                <ActionParameter name="structure_id">destCons1</ActionParameter>
                <ActionParameter name="validateAll">true</ActionParameter>
                <ActionParameter name="validateNoWarn">false</ActionParameter>                     
        </Action>             

        <Action name="CreateConsumer1" type="CreateConsumer">
                <ActionParameter name="structure_id">consumer1</ActionParameter>
                <ActionParameter name="dest_id">destCons1</ActionParameter>
                <ActionParameter name="session_id">Ses1_Cons1</ActionParameter>   
        </Action>

        <Action name="StartConnection_Cons1" type="StartConnection">
                <ActionParameter name="conn_id">Con1_Cons1</ActionParameter>
        </Action>

        <Action name="sync_components_Cons1" type="SyncComponentAction">
                <ActionParameter name="component_name">cons1a</ActionParameter>
                <ActionParameter name="component_list">prod1a;cons1a</ActionParameter>
                <ActionParameter name="timeout">15000</ActionParameter>
        </Action>

		<!-- our clientmessagecache is 1000, so the 50 we don't receive should end up in the clientMesageCache 
			and be consider as 'inflight' to the engine.  --> 
        <Action name="CompositeRcv1" type="CompositeAction" expected="100" interval="0" repeat_interval="0">
                <Action name="ReceiveMessage1" type="ReceiveMessage">
                        <ActionParameter name="consumer_id">consumer1</ActionParameter>
                        <ActionParameter name="structure_id">msg1</ActionParameter>
                        <ApiParameter name="timeout">5000</ApiParameter>
                </Action>

                <Action name="GetMessageBytes1" type="GetMessageText">
                        <dependsOn name="ReceiveMessage1" interval="0"/>
                        <ActionParameter name="message_id">msg1</ActionParameter>
                        <ActionParameter name="verifyValue">This is message type 1. 150 like this were sent. </ActionParameter>
                </Action>
        </Action>
        
   		<!-- Action name="ShowSub_After_first_receive" type="ShellAction">
			<ActionParameter name="command">ssh ``A1_USER``@``A1_HOST`` imaserver stat Subscription  ClientID=jms_mm001_clientid </ActionParameter>
			<ActionParameter name="print_result">true</ActionParameter>
		</Action -->			        
        
       	<Action name="ShowSub_After_first_receive" type="RestAPI">
        	<ActionParameter name="server">``A1_HOST``:``A1_PORT``</ActionParameter>
        	<ActionParameter name="path">/ima/v1/monitor/Subscription?ClientID=jms_mm001_clientid</ActionParameter>
        	<ActionParameter name="action">GET</ActionParameter>
        	<ActionParameter name="payload"></ActionParameter>
        	<ActionParameter name="printResult">true</ActionParameter>
       		<ActionParameter name="expectedStatusCode">-1</ActionParameter>
        	<ActionParameter name="expectedMessageCode"></ActionParameter>
    	</Action> 		        		

       <Action name="sync_components_Cons1_ready" type="SyncComponentAction">
                <ActionParameter name="component_name">cons1b</ActionParameter>
                <ActionParameter name="component_list">prod1b;cons1b</ActionParameter>
                <ActionParameter name="timeout">15000</ActionParameter>
        </Action>
        
       <!-- wait until that last message of type 2 is sent --> 
       <Action name="sync_components_Cons1bDone" type="SyncComponentAction">
                <ActionParameter name="component_name">cons1b_done</ActionParameter>
                <ActionParameter name="component_list">prod1b_done;cons1b_done</ActionParameter>
                <ActionParameter name="timeout">15000</ActionParameter>
        </Action>
        
		<!-- Action name="ShowSub_After_msg2" type="ShellAction">
			<ActionParameter name="command">ssh ``A1_USER``@``A1_HOST`` imaserver stat Subscription  ClientID=jms_mm001_clientid </ActionParameter>
			<ActionParameter name="print_result">true</ActionParameter>
		</Action -->	
		
		<Action name="ShowSub_After_msg2" type="RestAPI">
        	<ActionParameter name="server">``A1_HOST``:``A1_PORT``</ActionParameter>
        	<ActionParameter name="path">/ima/v1/monitor/Subscription?ClientID=jms_mm001_clientid</ActionParameter>
        	<ActionParameter name="action">GET</ActionParameter>
        	<ActionParameter name="payload"></ActionParameter>
        	<ActionParameter name="printResult">true</ActionParameter>
       		<ActionParameter name="expectedStatusCode">-1</ActionParameter>
        	<ActionParameter name="expectedMessageCode"></ActionParameter>
    	</Action> 			        
              
       <!-- This is where this test differs from jms_maxmgs_001.  With the default cache, 
       		we will receive all of the type 1 messages. They were considered as inflight
       		in this test, and not subject to being discard. In the prior test, only 
       		one was inflight, so most were discarded by the engine. --> 
       <Action name="CompositeRcv1_remainder" type="CompositeAction" expected="50" interval="0" repeat_interval="0">
                <Action name="ReceiveMessage1_remainder" type="ReceiveMessage">
                        <ActionParameter name="consumer_id">consumer1</ActionParameter>
                        <ActionParameter name="structure_id">msg1</ActionParameter>
                        <ApiParameter name="timeout">5000</ApiParameter>
                </Action>

                <Action name="GetMessageBytes1_remainder" type="GetMessageText">
                        <dependsOn name="ReceiveMessage1_remainder" interval="0"/>
                        <ActionParameter name="message_id">msg1</ActionParameter>
                        <ActionParameter name="verifyValue">This is message type 1. 150 like this were sent. </ActionParameter>
                </Action>
        </Action>        
        
		<!-- Only some of message type 2 were put in the engine queue, since there were 50 inflight messages when 
			this send started  and it should be the low messageID's of msg type 2, which is also different 
			from jms_maxmsgs_001. These were sent to the clientcache as the engine received them, 
			and became inflight messages to the engine. In the prior test, with cache=0, 
			we got the newer messages of type=2. In this one, we get the oldest type 2 messages-->     
        <Action name="CompositeRcv2" type="CompositeAction" repeat="55" interval="0" repeat_interval="0" atleast="44">
                <Action name="ReceiveMessage2" type="ReceiveMessage">
                        <ActionParameter name="consumer_id">consumer1</ActionParameter>
                        <ActionParameter name="structure_id">msg1</ActionParameter>
                        <ApiParameter name="timeout">5000</ApiParameter>
                </Action>

                <Action name="GetMessageBytes2" type="GetMessageText">
                        <dependsOn name="ReceiveMessage2" interval="0"/>
                        <ActionParameter name="message_id">msg1</ActionParameter>
                        <ActionParameter name="verifyValue">This is message type 2. 100 like this were sent. </ActionParameter>
                </Action>
        </Action>
        
        <!-- cache.. and the engine queue are hopefully both empty at this point.  --> 
        
		<!-- Action name="ShowSub_After_msg2_received" type="ShellAction">
			<ActionParameter name="command">ssh ``A1_USER``@``A1_HOST`` imaserver stat Subscription  ClientID=jms_mm001_clientid </ActionParameter>
			<ActionParameter name="print_result">true</ActionParameter>
		</Action -->
		
		<Action name="ShowSub_After_msg2_received" type="RestAPI">
        	<ActionParameter name="server">``A1_HOST``:``A1_PORT``</ActionParameter>
        	<ActionParameter name="path">/ima/v1/monitor/Subscription?ClientID=jms_mm001_clientid</ActionParameter>
        	<ActionParameter name="action">GET</ActionParameter>
        	<ActionParameter name="payload"></ActionParameter>
        	<ActionParameter name="printResult">true</ActionParameter>
       		<ActionParameter name="expectedStatusCode">-1</ActionParameter>
        	<ActionParameter name="expectedMessageCode"></ActionParameter>
    	</Action> 				         
        
        <Action name="sync_components_Cons1cReady" type="SyncComponentAction">
                <ActionParameter name="component_name">cons1c</ActionParameter>
                <ActionParameter name="component_list">prod1c;cons1c</ActionParameter>
                <ActionParameter name="timeout">15000</ActionParameter>
        </Action>
        
      <Action name="sync_components_Cons1cDone" type="SyncComponentAction">
                <ActionParameter name="component_name">cons1c_done</ActionParameter>
                <ActionParameter name="component_list">prod1c_done;cons1c_done</ActionParameter>
                <ActionParameter name="timeout">25000</ActionParameter>
        </Action>
                
		<!-- and here again, we receive the oldest of the Type 3 messages, rather than the newest -->                
        <Action name="CompositeRcv3" type="CompositeAction" repeat="104" interval="0" repeat_interval="0" atleast="94">
                <Action name="ReceiveMessage3" type="ReceiveMessage">
                        <ActionParameter name="consumer_id">consumer1</ActionParameter>
                        <ActionParameter name="structure_id">msg3</ActionParameter>
                        <ApiParameter name="timeout">5000</ApiParameter>
                </Action>

                <Action name="GetMessageBytes3" type="GetMessageText">
                        <dependsOn name="ReceiveMessage3" interval="0"/>
                        <ActionParameter name="message_id">msg3</ActionParameter>
                        <ActionParameter name="verifyValue">This is message type 3. 200 like this were sent. </ActionParameter>
                </Action>
        </Action>
        
        <!-- all the message type 4's should have been discarded --> 

		<Action name="ShowSub_At_End" type="RestAPI">
        	<ActionParameter name="server">``A1_HOST``:``A1_PORT``</ActionParameter>
        	<ActionParameter name="path">/ima/v1/monitor/Subscription?ClientID=jms_mm001_clientid</ActionParameter>
        	<ActionParameter name="action">GET</ActionParameter>
        	<ActionParameter name="payload"></ActionParameter>
        	<ActionParameter name="printResult">true</ActionParameter>
       		<ActionParameter name="expectedStatusCode">200</ActionParameter>
        	<ActionParameter name="expectedMessageCode"></ActionParameter>
    	</Action> 				        

        <Action name="StopConnection_Cons1" type="StopConnection">
                <ActionParameter name="conn_id">Con1_Cons1</ActionParameter>
        </Action>

        <Action name="CloseConnection_Cons1" type="CloseConnection">
                <ActionParameter name="conn_id">Con1_Cons1</ActionParameter>
        </Action>

</Action>

<Action name="Prod1" type="CompositeAction">
        <!-- This side runs on machine 1! -->
        <Action name="CreateFactory_Prod1" type="CreateConnectionFactory">
                <ActionParameter name="structure_id">CF1_Prod1</ActionParameter>
        </Action>

        <Action name="CreateListener_Prod1" type="CreateExceptionListener">
                <ActionParameter name="structure_id">listener1</ActionParameter>
        </Action>

        <Action name="SetFactoryProps_Prod1" type="FillIsmProps">
            <ActionParameter name="structure_id">CF1_Prod1</ActionParameter>
		    <ActionParameter name="validateAll">true</ActionParameter>
 		  	<ActionParameter name="validateNoWarn">false</ActionParameter>
		    <ImaProperty name="ClientID" value="jms_mm004Prod_clientid" type="STRING"/>
    		<include>../common/JMS_server.xml</include>
    		<ImaProperty name="Port" value="29304" type="STRING"/>
        </Action>

        <Action name="CreateConnection_Prod1" type="CreateConnection">
                <ActionParameter name="structure_id">Con1_Prod1</ActionParameter>
                <ActionParameter name="factory_id">CF1_Prod1</ActionParameter>
                <ApiParameter name="exceptionListener">listener1</ApiParameter>
        </Action>

        <Action name="CreateSession_Prod1" type="CreateSession">
                <ActionParameter name="conn_id">Con1_Prod1</ActionParameter>
                <ActionParameter name="structure_id">Ses1_Prod1</ActionParameter>
        </Action>

        <Action name="CreateDestination_Prod1" type="CreateDestination">
                <ApiParameter name="name">/MM/jmsMM-001</ApiParameter>
                <ActionParameter name="type">topic</ActionParameter>
                <ActionParameter name="structure_id">destProd1</ActionParameter>
        </Action>

        <Action name="CreateProducer" type="CreateProducer">
                <ActionParameter name="structure_id">producer1</ActionParameter>
                <ActionParameter name="dest_id">destProd1</ActionParameter>
                <ActionParameter name="session_id">Ses1_Prod1</ActionParameter>
        </Action>

        <Action name="StartConnection_Prod1" type="StartConnection">
                <ActionParameter name="conn_id">Con1_Prod1</ActionParameter>
        </Action>

        <Action name="CreateMessage1" type="CreateMessage">
                <ActionParameter name="structure_id">msg1</ActionParameter>
                <ActionParameter name="session_id">Ses1_Prod1</ActionParameter>
                <ApiParameter name="msgType">TEXT</ApiParameter>
        </Action>
        
   		<Action name="SetMessage1Property" type="SetMessageProperty">
			<ActionParameter name="message_id">msg1</ActionParameter>
			<ApiParameter name="propertyName">ID</ApiParameter>
			<ApiParameter name="propertyType">Common</ApiParameter>
			<ApiParameter name="valueType">Integer</ApiParameter>
			<ApiParameter name="value">1</ApiParameter>
		</Action>      

        <Action name="SetMessage1Text" type="SetMessageText">
                <ActionParameter name="message_id">msg1</ActionParameter>
                <ApiParameter name="value">This is message type 1. 150 like this were sent. </ApiParameter>
        </Action>

        <Action name="CreateMessage2" type="CreateMessage">
                <ActionParameter name="structure_id">msg2</ActionParameter>
                <ActionParameter name="session_id">Ses1_Prod1</ActionParameter>
                <ApiParameter name="msgType">TEXT</ApiParameter>
                <ApiParameter name="msgParam">&lt;quote&gt;&lt;symbol&gt;IBM&lt;/symbol&gt;&lt;bid&gt;100.00&lt;/bid&gt;&lt;ask&gt;105.20&lt;/ask&gt;&lt;/quote&gt;</ApiParameter>
        </Action>
        
   		<Action name="SetMessage2Property" type="SetMessageProperty">
			<ActionParameter name="message_id">msg2</ActionParameter>
			<ApiParameter name="propertyName">ID</ApiParameter>
			<ApiParameter name="propertyType">Common</ApiParameter>
			<ApiParameter name="valueType">Integer</ApiParameter>
			<ApiParameter name="value">151</ApiParameter>
		</Action>        
        
        <Action name="SetMessage2Text" type="SetMessageText">
                <ActionParameter name="message_id">msg2</ActionParameter>
                <ApiParameter name="value">This is message type 2. 100 like this were sent. </ApiParameter>
        </Action>        

        <Action name="CreateMessage3" type="CreateMessage">
                <ActionParameter name="structure_id">msg3</ActionParameter>
                <ActionParameter name="session_id">Ses1_Prod1</ActionParameter>
                <ApiParameter name="msgType">TEXT</ApiParameter>
        </Action>
        
   		<Action name="SetMessage3Property" type="SetMessageProperty">
			<ActionParameter name="message_id">msg3</ActionParameter>
			<ApiParameter name="propertyName">ID</ApiParameter>
			<ApiParameter name="propertyType">Common</ApiParameter>
			<ApiParameter name="valueType">Integer</ApiParameter>
			<ApiParameter name="value">251</ApiParameter>
		</Action>        

        <Action name="SetMessage3Text" type="SetMessageText">
                <ActionParameter name="message_id">msg3</ActionParameter>
                <ApiParameter name="value">This is message type 3. 200 like this were sent. </ApiParameter>
        </Action>
        
        <Action name="CreateMessage4" type="CreateMessage">
                <ActionParameter name="structure_id">msg4</ActionParameter>
                <ActionParameter name="session_id">Ses1_Prod1</ActionParameter>
                <ApiParameter name="msgType">TEXT</ApiParameter>
        </Action>
        
   		<Action name="SetMessage4Property" type="SetMessageProperty">
			<ActionParameter name="message_id">msg4</ActionParameter>
			<ApiParameter name="propertyName">ID</ApiParameter>
			<ApiParameter name="propertyType">Common</ApiParameter>
			<ApiParameter name="valueType">Integer</ApiParameter>
			<ApiParameter name="value">451</ApiParameter>
		</Action>        

        <Action name="SetMessage4Text" type="SetMessageText">
                <ActionParameter name="message_id">msg4</ActionParameter>
                <ApiParameter name="value">This is message type 4. 100 like this were sent. </ApiParameter>
        </Action>        

        <Action name="sync_components_Prod1" type="SyncComponentAction">
                <ActionParameter name="component_name">prod1a</ActionParameter>
                <ActionParameter name="component_list">prod1a;cons1a</ActionParameter>
                <ActionParameter name="timeout">15000</ActionParameter>
        </Action>

        <Action name="CompositeSnd1" type="CompositeAction" repeat="150" repeat_interval="5">
                <Action name="SendMessage1" type="SendMessage">
                        <ActionParameter name="producer_id">producer1</ActionParameter>
                        <ActionParameter name="message_id">msg1</ActionParameter>
               			<ActionParameter name="incrID">1</ActionParameter>
                </Action>
		</Action>

        <Action name="sync_components_Prod1bReady" type="SyncComponentAction">
                <ActionParameter name="component_name">prod1b</ActionParameter>
                <ActionParameter name="component_list">prod1b;cons1b</ActionParameter>
                <ActionParameter name="timeout">15000</ActionParameter>
        </Action>

        <Action name="CompositeSnd2" type="CompositeAction" repeat="100" repeat_interval="5">
                <Action name="SendMessage2" type="SendMessage">
                        <ActionParameter name="producer_id">producer1</ActionParameter>
                        <ActionParameter name="message_id">msg2</ActionParameter>
                        <ActionParameter name="incrID">1</ActionParameter>
                </Action>
		</Action>
		
      <Action name="sync_components_Prod1bDone" type="SyncComponentAction">
                <ActionParameter name="component_name">prod1b_done</ActionParameter>
                <ActionParameter name="component_list">prod1b_done;cons1b_done</ActionParameter>
                <ActionParameter name="timeout">15000</ActionParameter>
        </Action>
        		
         <Action name="sync_components_Prod1c" type="SyncComponentAction">
                <ActionParameter name="component_name">prod1c</ActionParameter>
                <ActionParameter name="component_list">prod1c;cons1c</ActionParameter>
                <ActionParameter name="timeout">15000</ActionParameter>
        </Action>

		<!-- the first 100 of these will go into the engine queue.. be sent to the client who is
			not receiving, but has a clientcache=1000 and be considered 'inflight'. the second 
			100 should be discarded. --> 
        <Action name="CompositeSnd3" type="CompositeAction" repeat="200" repeat_interval="0">
                <Action name="SendMessage3" type="SendMessage">
                        <ActionParameter name="producer_id">producer1</ActionParameter>
                        <ActionParameter name="message_id">msg3</ActionParameter>
                        <ActionParameter name="incrID">1</ActionParameter>
                </Action>
		</Action>
		
		<!-- all of these will be discarded, as the engine queue is completely full with inflight
			messages when they are sent.  --> 	
       <Action name="CompositeSnd4" type="CompositeAction" repeat="100" repeat_interval="0">
                <Action name="SendMessage4" type="SendMessage">
                        <ActionParameter name="producer_id">producer1</ActionParameter>
                        <ActionParameter name="message_id">msg4</ActionParameter>
                        <ActionParameter name="incrID">1</ActionParameter>
                </Action>
		</Action>		
		
       <Action name="sync_components_Prod1cDone" type="SyncComponentAction">
                <ActionParameter name="component_name">prod1c_done</ActionParameter>
                <ActionParameter name="component_list">prod1c_done;cons1c_done</ActionParameter>
                <ActionParameter name="timeout">15000</ActionParameter>
        </Action>		

        <Action name="CloseSession_Prod1" type="CloseSession">
                <ActionParameter name="session_id">Ses1_Prod1</ActionParameter>
        </Action>

        <Action name="StopConnection_Prod1" type="StopConnection">
                <ActionParameter name="conn_id">Con1_Prod1</ActionParameter>
        </Action>

        <Action name="CloseConnection_Prod1" type="CloseConnection">
                <ActionParameter name="conn_id">Con1_Prod1</ActionParameter>
        </Action>
    </Action>
</ImaJmsTest>
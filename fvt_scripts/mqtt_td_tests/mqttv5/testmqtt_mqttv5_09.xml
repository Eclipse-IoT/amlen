<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * Copyright (c) 2013-2021 Contributors to the Eclipse Foundation
 * 
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 * 
 * SPDX-License-Identifier: EPL-2.0
 */
-->
<IsmWSTest name="testmqtt_mqttv5_09" >
<!--
	This test will test a create connection with Will topic and message specified.
	Need a separate receiver started for Will topic which should receive the
	Will message when this connection is normally closed with disconnect rc=4.
    Will message will be sent when the session expires (shorter than the will delay interval)
-->
	<SyncClient>
		<server>
			<include>../common/JMS_syncip.xml</include>
			<include>../common/JMS_syncport.xml</include>
		</server>
		<solution>mqttv5_09</solution>
	</SyncClient>
	<Action name="publish" type="CompositeAction">

        <Action name="CreateConnection" type="CreateConnection">
            <ActionParameter name="structure_id">Con1</ActionParameter>
            <ActionParameter name="connection_id">CF1</ActionParameter>
            <ActionParameter name="connectionType">PAHO-MQTTv5</ActionParameter>
            <include>../common/MQTT_server.xml</include>
            <ApiParameter name="clientId">v5connect09.transmitter1</ApiParameter>
            <include>../common/MQTT_port.xml</include>
            <ApiParameter name="protocol">mqtt</ApiParameter>
            <!-- In MQTTv5 cleanSession means cleanStart -->
            <ApiParameter name="cleanSession">true</ApiParameter>
            <ApiParameter name="sessionExpire">10</ApiParameter>
            <ApiParameter name="willTopic">/willDelayTopic09</ApiParameter>
            <ApiParameter name="willMessage">Session expiry has occurred</ApiParameter>
            <ApiParameter name="keepAlive">10</ApiParameter>
            <ApiParameter name="willDelay">30</ApiParameter>
        </Action>

		<Action name="sync_components_tx1" type="SyncComponentAction"> 
			<ActionParameter name="component_name">tx1</ActionParameter>
			<ActionParameter name="component_list">tx1;rx1</ActionParameter>
			<ActionParameter name="timeout">20000</ActionParameter>
		</Action>
        <!-- normal disconnect, send rc 0x04 -->
        <Action name="CloseConnectionTx" type="CloseConnection">
                <ActionParameter name="connection_id">CF1</ActionParameter>
                <ApiParameter name="rc">4</ApiParameter>
        </Action>
	</Action>

	<Action name="receive" type="CompositeAction">
		<Action name="CreateConnection" type="CreateConnection">
            <ActionParameter name="structure_id">Con1</ActionParameter>
            <ActionParameter name="connection_id">CF1</ActionParameter>
            <ActionParameter name="connectionType">PAHO-MQTTv5</ActionParameter>
            <include>../common/MQTT_server.xml</include>
            <ApiParameter name="clientId">v5connect09.receiver1</ApiParameter>
            <include>../common/MQTT_port.xml</include>
            <ApiParameter name="protocol">mqtt</ApiParameter>
		</Action>
		<Action name="Subscribe" type="Subscribe">
	   		<ActionParameter name="connection_id">CF1</ActionParameter>
       		<ApiParameter name="topic">/willDelayTopic09</ApiParameter>
       		<ApiParameter name="QoS">2</ApiParameter>
		</Action>
		<Action name="sync_components_rx1" type="SyncComponentAction"> 
			<ActionParameter name="component_name">rx1</ActionParameter>
			<ActionParameter name="component_list">tx1;rx1</ActionParameter>
			<ActionParameter name="timeout">20000</ActionParameter>
		</Action>
        <!-- should not receive yet -->
        <Action name="FirstReceive" type="ReceiveMessage" rc="1" reason="ISMTEST1143">
            <dependsOn action_id="sync_components_rx1" interval="2000" />
            <ActionParameter name="connection_id">CF1</ActionParameter>
            <ActionParameter name="structure_id">rxmsg1</ActionParameter>
            <ActionParameter name="waitTime">5000</ActionParameter>
        </Action>

        <!-- sleep 5 seconds to wait for session to expire -->
        <Action name="sleep" type="Sleep">
            <ActionParameter name="waitTime">5000</ActionParameter>
        </Action>

        <!-- message should have been sent by now, receive it -->

        <Action name="ReceiveMessage" type="ReceiveMessage">
            <ActionParameter name="connection_id">CF1</ActionParameter>
            <ActionParameter name="structure_id">rxmsg1</ActionParameter>
            <ActionParameter name="waitTime">5000</ActionParameter>
        </Action>

        <Action name="CheckMessage" type="CompareMessageData">
          <ActionParameter name="structure_id">rxmsg1</ActionParameter>
          <ActionParameter name="compareBody">Session expiry has occurred</ActionParameter>
          <ActionParameter name="compareTopic">/willDelayTopic09</ActionParameter>
          <!-- <ActionParameter name="compareQoS">1</ActionParameter> -->
        </Action>

        <Action name="CloseConnectionRx" type="CloseConnection">
            <ActionParameter name="connection_id">CF1</ActionParameter>
        </Action>
	</Action>
</IsmWSTest>
                

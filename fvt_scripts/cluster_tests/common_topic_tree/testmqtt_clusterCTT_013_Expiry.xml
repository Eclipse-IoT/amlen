<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * Copyright (c) 2015-2021 Contributors to the Eclipse Foundation
 * 
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 * 
 * SPDX-License-Identifier: EPL-2.0
 */
-->
<IsmWSTest name="testmqtt_cluster_013" >
<!--
	
-->

    <Action name="SetupDSMember1" type="CompositeAction">
    <!-- Part A of Step 1 -->
    	<!-- Clean up any old subs hanging around -->
		<Action name="CreateConnection_clean" type="CreateConnection">
    	    <ActionParameter name="structure_id">Con1</ActionParameter>
	        <ActionParameter name="connection_id">CF1</ActionParameter>
            <include>../common/ConnectionType.xml</include>  
    	    <include>../common/MQTT_server.xml</include>
	        <ApiParameter name="clientId">CTT_013_sub1</ApiParameter>
            <include>../common/MQTT_port.xml</include>
        	<ApiParameter name="cleanSession">true</ApiParameter>
	    </Action>	 
	    
	    <Action name="CloseConnection_clean" type="CloseConnection">
    	    <ActionParameter name="connection_id">CF1</ActionParameter>
	    </Action>  	   	        
	    <Action name="CreateConnection" type="CreateConnection">
    	    <ActionParameter name="structure_id">Con1</ActionParameter>
	        <ActionParameter name="connection_id">CF1</ActionParameter>
            <include>../common/ConnectionType.xml</include>  
    	    <include>../common/MQTT_server.xml</include>
	        <ApiParameter name="clientId">CTT_013_sub1</ApiParameter>
            <include>../common/MQTT_port.xml</include>
        	<ApiParameter name="cleanSession">false</ApiParameter>
	    </Action>
	    
	    <Action name="Subscribe" type="Subscribe">
			<ActionParameter name="connection_id">CF1</ActionParameter>
			<ApiParameter name="topic">/CTT/013</ApiParameter>
			<ApiParameter name="QoS">1</ApiParameter>
		</Action>	   
       
    <Action name="CloseConnection" type="CloseConnection">
    	    <ActionParameter name="connection_id">CF1</ActionParameter>
	    </Action>  
	    
    </Action>   
    
    <Action name="PublishMember2" type="CompositeAction">
    <!-- Step 2 Publishes to member 1 using a Messaging Policy with Expiration time of 15 seconds -->

	    <Action name="CreateConnection" type="CreateConnection">
    	    <ActionParameter name="structure_id">Con1</ActionParameter>
	        <ActionParameter name="connection_id">CF1</ActionParameter>
            <include>../common/ConnectionType.xml</include>
    	    <include>../common/MQTT_server2.xml</include>
	        <ApiParameter name="clientId">CTT_013_pub1</ApiParameter>
            <ApiParameter name="port">20001</ApiParameter>
    	    <ApiParameter name="protocol">mqtt</ApiParameter>
        	<ApiParameter name="cleanSession">true</ApiParameter>
	    </Action>

	    <Action name="CreateConnection2" type="CreateConnection" thread="2">
    	    <ActionParameter name="structure_id">Con2</ActionParameter>
	        <ActionParameter name="connection_id">CF2</ActionParameter>
            <include>../common/ConnectionType.xml</include>
    	    <include>../common/MQTT_server2.xml</include>
	        <ApiParameter name="clientId">CTT_013_pub2</ApiParameter>
            <include>../common/MQTT_port.xml</include>
    	    <ApiParameter name="protocol">mqtt</ApiParameter>
        	<ApiParameter name="cleanSession">true</ApiParameter>
	    </Action>	    
	    
	    
        <Action name="CreateMessage" type="CreateMessage">
            <ActionParameter name="structure_id">msg1</ActionParameter>
            <ActionParameter name="connection_id">CF1</ActionParameter>
            <ApiParameter name="msgType">TEXT</ApiParameter>
            <ApiParameter name="payload">Expiring Message sent by testmqtt_clusterCTT_013 test</ApiParameter>
        </Action>
        
        <Action name="CreateMessage2" type="CreateMessage" thread="2">
            <ActionParameter name="structure_id">msg2</ActionParameter>
            <ActionParameter name="connection_id">CF2</ActionParameter>
            <ApiParameter name="msgType">TEXT</ApiParameter>
            <ApiParameter name="payload">Non-Expiring Message sent by testmqtt_clusterCTT_013 test</ApiParameter>
        </Action>        
        
       <Action name="CreateRetMessage" type="CreateMessage">
            <ActionParameter name="structure_id">retmsg</ActionParameter>
            <ActionParameter name="connection_id">CF1</ActionParameter>
            <ApiParameter name="msgType">TEXT</ApiParameter>
            <ApiParameter name="payload">Expiring Retained Message sent by testmqtt_clusterCTT_013 test</ApiParameter>
        </Action>        
        
        <Action name="CreateRetMessage2" type="CreateMessage" thread="2">
            <ActionParameter name="structure_id">retmsg2</ActionParameter>
            <ActionParameter name="connection_id">CF2</ActionParameter>
            <ApiParameter name="msgType">TEXT</ApiParameter>
            <ApiParameter name="payload">Non-Expiring Retained Message sent by testmqtt_clusterCTT_013 test</ApiParameter>
        </Action>
                
       <Action name="SendExpRetMessage" type="SendMessage" repeat="2" repeat_interval="2">
            <ActionParameter name="connection_id">CF1</ActionParameter>
           	<ActionParameter name="message_id">retmsg</ActionParameter>
       	    <ActionParameter name="topic">/CTT/013</ActionParameter>
       	    <ActionParameter name="QoS">2</ActionParameter>
       	    <ActionParameter name="RETAIN">true</ActionParameter>
   	    </Action>        	              
        
   		<Action name="SendRetMessage2" type="SendMessage" repeat="2" repeat_interval="2" thread="2">
            <ActionParameter name="connection_id">CF2</ActionParameter>
           	<ActionParameter name="message_id">retmsg2</ActionParameter>
       	    <ActionParameter name="topic">/CTT/013</ActionParameter>
       	    <ActionParameter name="QoS">2</ActionParameter>
       	    <ActionParameter name="RETAIN">true</ActionParameter>
   	    </Action>  
   	      
   	  <!-- Sending an expiring retained message after a non-expiring retained message SHOULD 
   	  set the prior one have MESSAGE_FLAGS_PROPAGATE_RETAINED=false. So the non-expiring retained will 
   	  NOT be put in the retained tree of other members. -->    
      <Action name="SendExpRetMessageLast" type="SendMessage" repeat="2" repeat_interval="2">
      		<dependsOn action_id="SendRetMessage2" interval="1500"/>
            <ActionParameter name="connection_id">CF1</ActionParameter>
           	<ActionParameter name="message_id">retmsg</ActionParameter>
       	    <ActionParameter name="topic">/CTT/013</ActionParameter>
       	    <ActionParameter name="QoS">2</ActionParameter>
       	    <ActionParameter name="RETAIN">true</ActionParameter>
   	    </Action>          	    
                
     <!-- the hope is these messages will get mixed together, on separate threads. It's not
     terribly important, but it'd be nice to have them interspersed. They are set to start
     at the same time by the dependson actions -->
     <Action name="SendMessage" type="SendMessage" repeat="50" repeat_interval="2">
     		<dependsOn action_id="SendExpRetMessageLast" interval="0"/>
            <ActionParameter name="connection_id">CF1</ActionParameter>
           	<ActionParameter name="message_id">msg1</ActionParameter>
       	    <ActionParameter name="topic">/CTT/013</ActionParameter>
       	    <ActionParameter name="QoS">2</ActionParameter>
   	    </Action>      
   	    
     <Action name="SendMessage2" type="SendMessage" repeat="50" repeat_interval="2" thread="2">
     		<dependsOn action_id="SendExpRetMessageLast" interval="0"/>
             <ActionParameter name="connection_id">CF2</ActionParameter>
           	<ActionParameter name="message_id">msg2</ActionParameter>
       	    <ActionParameter name="topic">/CTT/013</ActionParameter>
       	    <ActionParameter name="QoS">2</ActionParameter>
   	    </Action>                   	              
        
    <Action name="CloseConnection" type="CloseConnection">
    	    <ActionParameter name="connection_id">CF1</ActionParameter>
	    </Action>
	    
    <Action name="CloseConnection2" type="CloseConnection" thread="2">
    	    <ActionParameter name="connection_id">CF2</ActionParameter>
	    </Action>
	    
	<Action name="ShowStats" type="RestAPI">
	 	<dependsOn action_id="CloseConnection2" interval="0"/>
	 	<dependsOn action_id="CloseConnection" interval="0"/>
		<ActionParameter name="structureID">stat_output_1</ActionParameter>
        <ActionParameter name="server">``A2_HOST``:``A2_PORT``</ActionParameter>
        <ActionParameter name="path">/ima/v1/monitor/Server</ActionParameter>
        <ActionParameter name="action">GET</ActionParameter>
        <ActionParameter name="payload"></ActionParameter>
        <ActionParameter name="printResult">true</ActionParameter>
       	<ActionParameter name="expectedStatusCode">200</ActionParameter>
        <ActionParameter name="expectedMessageCode"></ActionParameter>
    </Action>  
	    	    
    </Action>


    <Action name="ReceiveDSMember1" type="CompositeAction">
     
    <Action name="ShowStats_Remote" type="RestAPI">
	 	<ActionParameter name="structureID">stat_output_1</ActionParameter>
        <ActionParameter name="server">``A2_HOST``:``A2_PORT``</ActionParameter>
        <ActionParameter name="path">/ima/v1/monitor/Server</ActionParameter>
        <ActionParameter name="action">GET</ActionParameter>
        <ActionParameter name="payload"></ActionParameter>
        <ActionParameter name="printResult">true</ActionParameter>
       	<ActionParameter name="expectedStatusCode">200</ActionParameter>
        <ActionParameter name="expectedMessageCode"></ActionParameter>
    </Action>     
    
    <Action name="ShowStats_Local" type="RestAPI">
	 	<ActionParameter name="structureID">stat_output_1</ActionParameter>
        <ActionParameter name="server">``A1_HOST``:``A1_PORT``</ActionParameter>
        <ActionParameter name="path">/ima/v1/monitor/Server</ActionParameter>
        <ActionParameter name="action">GET</ActionParameter>
        <ActionParameter name="payload"></ActionParameter>
        <ActionParameter name="printResult">true</ActionParameter>
       	<ActionParameter name="expectedStatusCode">200</ActionParameter>
        <ActionParameter name="expectedMessageCode"></ActionParameter>
    </Action>  

    <Action name="ShowSub" type="RestAPI">
			<ActionParameter name="structureID">stat_output_1</ActionParameter>
        	<ActionParameter name="server">``A1_HOST``:``A1_PORT``</ActionParameter>
        	<ActionParameter name="path">/ima/v1/monitor/Subscription?ClientID=CTT_013_sub1</ActionParameter>
        	<ActionParameter name="action">GET</ActionParameter>
        	<ActionParameter name="payload"></ActionParameter>
        	<ActionParameter name="printResult">true</ActionParameter>
       		<ActionParameter name="expectedStatusCode">200</ActionParameter>
        	<ActionParameter name="expectedMessageCode"></ActionParameter>
    	</Action>
    	
    
    <!-- Part A of Step 5. Receive only the messages published on Member 2, which did not expire -->
	    <Action name="CreateConnection" type="CreateConnection">
    	    <ActionParameter name="structure_id">Con1</ActionParameter>
	        <ActionParameter name="connection_id">CF1</ActionParameter>
            <include>../common/ConnectionType.xml</include>  
    	    <include>../common/MQTT_server.xml</include>
	        <ApiParameter name="clientId">CTT_013_sub1</ApiParameter>
            <include>../common/MQTT_port.xml</include>
        	<ApiParameter name="cleanSession">false</ApiParameter>
	    </Action>

		<!-- Receive 2 that were Non-Expiring retained, but received on the live tree, and 50 that 
		were sent as non-expiring normal messages. -->
		<Action name="ReceiveRemote" type="CompositeAction" repeat="52" repeat_interval="0">
	        <Action name="ReceiveMessage" type="ReceiveMessage" >
    	        <ActionParameter name="connection_id">CF1</ActionParameter>
        	    <ActionParameter name="structure_id">submsg1</ActionParameter>
            	<ActionParameter name="waitTime">3000</ActionParameter>
        	</Action>
	        <Action name="CheckMessage" type="CompareMessageData">
	        	<ActionParameter name="structure_id">submsg1</ActionParameter>
 		       	<ActionParameter name="compareBodyStart">Non-Expiring</ActionParameter>
        	</Action>        	
        </Action>
        
    	<Action name="ReceiveNoMore" type="ReceiveMessage" rc="1" reason="ISMTEST1143">
	        <ActionParameter name="connection_id">CF1</ActionParameter>
        	<ActionParameter name="structure_id">submsg1</ActionParameter>
    	    <ActionParameter name="waitTime">2000</ActionParameter>
	    </Action>               

	    <Action name="CloseConnection" type="CloseConnection">
    	    <ActionParameter name="connection_id">CF1</ActionParameter>
	    </Action>  
	    
		<Action name="CreateConnection_clean" type="CreateConnection">
    	    <ActionParameter name="structure_id">Con1</ActionParameter>
	        <ActionParameter name="connection_id">CF1</ActionParameter>
            <include>../common/ConnectionType.xml</include>  
    	    <include>../common/MQTT_server.xml</include>
	        <ApiParameter name="clientId">CTT_013_sub1</ApiParameter>
            <include>../common/MQTT_port.xml</include>
        	<ApiParameter name="cleanSession">true</ApiParameter>
	    </Action>	 
	    
	    <Action name="CloseConnection_clean" type="CloseConnection">
    	    <ActionParameter name="connection_id">CF1</ActionParameter>
	    </Action>  	   	    
	    
    </Action>   

    <Action name="ReceiveNewMember1" type="CompositeAction">
    <!-- Part A of Step 6. Receive Nothing, even though a message published as retained was in the forwarding 
    queue when this server came up, it was not marked as MESSAGE_FLAGS_PROPGATE_RETAINED because that was unset
    when an expiring retained message was published later.  -->
	    <Action name="CreateConnection" type="CreateConnection">
    	    <ActionParameter name="structure_id">Con1</ActionParameter>
	        <ActionParameter name="connection_id">CF1</ActionParameter>
            <include>../common/ConnectionType.xml</include>  
    	    <include>../common/MQTT_server.xml</include>
	        <ApiParameter name="clientId">CTT_013_newsub3</ApiParameter>
            <include>../common/MQTT_port.xml</include>
        	<ApiParameter name="cleanSession">true</ApiParameter>
	    </Action>
	    
	    <Action name="Subscribe" type="Subscribe">
			<ActionParameter name="connection_id">CF1</ActionParameter>
			<ApiParameter name="topic">/CTT/013</ApiParameter>
			<ApiParameter name="QoS">1</ApiParameter>
		</Action>	

    	<Action name="ReceiveNoMore" type="ReceiveMessage" rc="1" reason="ISMTEST1143">
	        <ActionParameter name="connection_id">CF1</ActionParameter>
        	<ActionParameter name="structure_id">submsg1</ActionParameter>
    	    <ActionParameter name="waitTime">2000</ActionParameter>
	    </Action>               

	    <Action name="CloseConnection" type="CloseConnection">
    	    <ActionParameter name="connection_id">CF1</ActionParameter>
	    </Action>  
	    
    </Action>   
    
    <Action name="ReceiveNewMember2" type="CompositeAction">
	    <Action name="CreateConnection" type="CreateConnection">
    	    <ActionParameter name="structure_id">Con1</ActionParameter>
	        <ActionParameter name="connection_id">CF1</ActionParameter>
            <include>../common/ConnectionType.xml</include>  
    	    <include>../common/MQTT_server2.xml</include>
	        <ApiParameter name="clientId">CTT_013_newsub3</ApiParameter>
            <include>../common/MQTT_port.xml</include>
        	<ApiParameter name="cleanSession">true</ApiParameter>
	    </Action>
	    
	    <Action name="Subscribe" type="Subscribe">
			<ActionParameter name="connection_id">CF1</ActionParameter>
			<ApiParameter name="topic">/CTT/013</ApiParameter>
			<ApiParameter name="QoS">1</ApiParameter>
		</Action>	

    	<Action name="ReceiveNoMore" type="ReceiveMessage" rc="1" reason="ISMTEST1143">
	        <ActionParameter name="connection_id">CF1</ActionParameter>
        	<ActionParameter name="structure_id">submsg1</ActionParameter>
    	    <ActionParameter name="waitTime">2000</ActionParameter>
	    </Action>               

	    <Action name="CloseConnection" type="CloseConnection">
    	    <ActionParameter name="connection_id">CF1</ActionParameter>
	    </Action>  
	    
    </Action>       
    
      
</IsmWSTest>
                

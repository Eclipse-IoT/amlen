# Copyright (c) 2005-2021 Contributors to the Eclipse Foundation
# 
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
# 
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
# 
# SPDX-License-Identifier: EPL-2.0
#

WorkerThread.desc=\
Base class for all varieties of test.  This class implements a general pacing\n\
algorithm for those tests that wish to use it.  The performance overhead of this\n\
is minimal.

tc.dflt = Publisher
tc.desc = Test definition class.
tc.type = com.ibm.uk.hursley.perfharness.WorkerThread
tc.modules = Publisher Subscriber Requester Responder PutGet Sender Receiver
tc.xtra = This defines the actual type of WorkerThreads that will be\n\
started.  The selections listed are those packaged with this tool, there\n\
may be others available that are not shown here.

rt.dflt = 0
rt.desc = Desired rate (operations/sec).
rt.type = java.lang.Integer
rt.xtra = If this rate is greater than the maximum achievable, the behaviour\n\
is such that it runs as fast as possible.  A value of 0 means to\n\
always run as fast as possible.  Rates of <1 op/sec are not currently possible.

rp.dflt = 0
rp.desc = Time period (s) to ramp up to the full rate.
rp.type = java.lang.Integer

mg.dflt = 0
mg.desc = Fixed number of iterations to run.
mg.type = java.lang.Integer
mg.xtra = The default setting of 0 means there is no iteration limit.

yd.dflt = 0
yd.desc = Frequency to call Thread.yield().
yd.type = java.lang.Integer
yd.xtra = This may be of use if the WorkerThreads are not being evenly scheduled.
yd.hide = true

# Copyright (c) 2013-2021 Contributors to the Eclipse Foundation
# 
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
# 
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
# 
# SPDX-License-Identifier: EPL-2.0
#

#####################################################################################################################
# Appliance profile settings
#####################################################################################################################
# ----------------------------------------------------------
# Number of I/O processor threads (For optimal performance we MUST have I/O listener and NIC IRQs on same CPU socket as I/O Processor threads)
TcpThreads = 6

# ----------------------------------------------------------
# CPU affinity configuration

### CPU socket 0 ###########################################
# CPU 0 (I/O processor: I/O listener->transport->protocol->engine->protocol->transport->NIC) - CPU 16 is unassigned 
Affinity.tcpiop.0=0x1
# CPU 1 (I/O processor: I/O listener->transport->protocol->engine->protocol->transport->NIC) - CPU 17 is unassigned 
Affinity.tcpiop.1=0x2
# CPU 2 (I/O processor: I/O listener->transport->protocol->engine->protocol->transport->NIC) - CPU 18 is unassigned 
Affinity.tcpiop.2=0x4
# CPU 3 (I/O processor: I/O listener->transport->protocol->engine->protocol->transport->NIC) - CPU 19 is unassigned 
Affinity.tcpiop.3=0x8
# CPU 4 (I/O processor: I/O listener->transport->protocol->engine->protocol->transport->NIC) - CPU 20 is unassigned 
Affinity.tcpiop.4=0x10
# CPU 5 (I/O processor: I/O listener->transport->protocol->engine->protocol->transport->NIC) - CPU 21 is unassigned
Affinity.tcpiop.5=0x20
# CPU 6 (I/O listener tightly coupled with I/O processors therefore MUST be on same CPU socket as I/O processors (i.e. epoll_wait thread))
Affinity.tcplisten=0x40
# CPU 7 (Connection listener, i.e. accept() thread)
Affinity.tcpconnect=0x80
# CPU 22 and CPU 23 (irqbalance is not used in version 1.2.  Interrupts are set to CPUS via script:  setirqs.sh
# all non-local IRQs are pinned to CPUs 22 and 23 (CPU 6/22 and CPU 7/23 are HT which share the same core)

### CPU socket 1 ###########################################
# CPU 8/24 and CPU 9/25 and CPU 10/26 MQ Connectivity client
#   see bedrock process descriptor file for MQ Connectivity process (server_becrock/applications/mqconnectivity/config/processDescriptor.xml using taskset)
# CPU 12 flow control thread (suspended - slow consumers, durable subscribers) - CPU 28 is unassigned
Affinity.tcpdelivery=0x1000
# CPU 21 (EAK - 9/29/2012 spoke with Idan and these threads pass jobs one to the other: store thread and diskUtilsThread)
Affinity.store=0x20000000
Affinity.diskUtilsThread=0x20000000
# CPU 13 (timer1 thread, high-priority timer thread, used for >QoS 1 messaging for re-publish on puback timeout, as well as a few other timers)
Affinity.timer1=0x2000
# msgReaper thread performs periodic removal of expired messages on subscriptions and queues, and expired (retained) messages on topics
Affinity.msgReaper=0x2000
# CPU 14/30 and 15/31: (shared with syslog-ng, OpenLDAP server, etc. (14/30 and 15/31) - see server_becrock/applications/openldap/config/processDescriptor.xml)
# ISM Logger (calls syslog-ng APIs) thread
Affinity.logger=0xC000C000
# ISM Monitoring thread
Affinity.monitoring.1=0xC000C000
Affinity.monitoring.2=0xC000C000
# ISM Disconnected Client Notification Thread
Affinity.DncClntNft=0xC000C000
# timer0 (LOW PRIORITY TIMER THREAD) is not currently used
Affinity.timer0=0xC000C000
# Locale change detector thread
Affinity.inotify=0xC000C000
# imaserver (the main thread of the imaserver program) is always last CPU on the system


# The thread pool size for LDAP.  The thread names are: Security.x 
SecurityThreadPoolSize = 16

# Security Threads for LDAP which is currently using CPUs 9 & 11.
Affinity.Security.1=0x200
Affinity.Security.2=0x200
Affinity.Security.3=0x200
Affinity.Security.4=0x200
Affinity.Security.5=0x200
Affinity.Security.6=0x200
Affinity.Security.7=0x200
Affinity.Security.8=0x200
Affinity.Security.9=0x800
Affinity.Security.10=0x800
Affinity.Security.11=0x800
Affinity.Security.12=0x800
Affinity.Security.13=0x800
Affinity.Security.14=0x800
Affinity.Security.15=0x800
Affinity.Security.16=0x800

#####################################################################################################################
# HW specifig Store tuning settings
#####################################################################################################################
Store.TotalMemSizeMB=16384
Store.RecoveryMemSizeMB=10240
Store.TransactionRsrvOps=100000

#####################################################################################################################
# HW specific Transport tuning settings
#####################################################################################################################
# Size of buffer pool used by each IOProc thread is (TcpMaxTransportPoolSizeMB * 1024 * 1024)/(TcpNumOfIOProcThreads)
TcpMaxTransportPoolSizeMB = 10240
# Controls degree of per connection message batching versus low latency messaging (-X means sleep X microseconds; +X means perform X number of sched_yields)
# A value of -1 is better for throughput and and a value of 1 is better for low latency
# Also for low end hardware it is better to avoid a positive value
TcpIOPThreadDelayMicro = -1 

#####################################################################################################################
# HW specific Protocol tuning settings
#####################################################################################################################
# Controls how many in-flight msg IDs are allowed per MQTT client (this has implication on memory allocation)
mqttMsgIdRange=1000
#mqttMsgIdRange=65535


{
	"JSONSchemaVersion": "v1", 
	"JSONCommentNonSettableStart": "--- START - non settable singleton items ---------------------------------", 
	"AdminMode": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "Integer", 
		"Default": "0", 
		"About": "Server admin mode", 
		"Settable": "no"
	}, 

	"ServerUID": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "String", 
		"About": "ServerUID is created by Server. User can not set this value.", 
		"MaxLength": "1024"
	}, 

	"JSONCommentNonSettableEnd": "--- END - non settable singleton items ---------------------------------", 
	"JSONCommentSettableSingleton": "--- START - settable singleton items ---------------------------------", 
	"ServerName": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "String", 
		"About": "The NodeName of the server. Needed for Cluster. Default value is hostname:admin_port.", 
		"MaxLength": "1024"
	}, 

	"FIPS": 
	{
		"Component": "Transport", 
		"ObjectType": "Singleton", 
		"Type": "Boolean", 
		"Default": "False", 
		"Options": "True,False", 
		"About": "Enable FIPS mode."
	}, 

	"AdminUserID": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "String", 
		"Default": "admin", 
		"About": "The name of the superuser.", 
		"MaxLength": "16"
	}, 

	"AdminUserPassword": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "String", 
		"MaxLength": "16", 
		"About": "Received as plain text, but encrypted and stored. Get is not allowed."
	}, 

	"EnableDiskPersistence": 
	{
		"Component": "Store", 
		"ObjectType": "Singleton", 
		"Type": "Boolean", 
		"Default": "True", 
		"Options": "True,False", 
		"About": "Defines whether disk persistence is enabled or disabled."
	}, 

	"LogLevel": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "Enum", 
		"Options": "MIN,NORMAL,MAX", 
		"Default": "NORMAL", 
		"About": "Log Level."
	}, 

	"ConnectionLog": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "Enum", 
		"Options": "MIN,NORMAL,MAX", 
		"Default": "NORMAL", 
		"About": "Connection Log Level."
	}, 

	"SecurityLog": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "Enum", 
		"Options": "MIN,NORMAL,MAX", 
		"Default": "NORMAL", 
		"About": "Security Log Level."
	}, 

	"AdminLog": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "Enum", 
		"Options": "MIN,NORMAL,MAX", 
		"Default": "NORMAL", 
		"About": "Admin Log Level."
	}, 

	"MQConnectivityLog": 
	{
		"Component": "MQConnectivity", 
		"ObjectType": "Singleton", 
		"Type": "Enum", 
		"Options": "MIN,NORMAL,MAX", 
		"Default": "NORMAL", 
		"About": "MQConnectivity Log Level."
	}, 

	"TraceLevel": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "String", 
		"Default": "5", 
		"About": "Set TraceLevel of a selectively trace point. Example 5,mqtt:9"
	}, 

	"TraceSelected": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "String", 
		"Default": "", 
		"About": "Set TraceLevel of a selectively trace point. Example mqtt:9"
	}, 

	"TraceMax": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "BufferSize", 
		"Default": "200MB", 
		"About": "Trace file size."
	}, 

	"TraceConnection": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "String", 
		"Default": "", 
		"About": "Set trace level of a connection identified by Endpoint, ClientID and ClientAddr"
	}, 

	"TraceOptions": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "String", 
		"Default": "time,thread,where", 
		"About": "Set options for trace messages. The valid options are where,thread,append,time."
	}, 

	"TraceMessageData": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "Number", 
		"Minimum": "0", 
		"Maximum": "65535", 
		"Default": "0", 
		"About": "Set the trace message data size"
	}, 

	"LicensedUsage": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "Enum", 
		"Options": "Developers,Non-Production,Production,IdleStandby", 
		"Default": "Developers", 
		"About": "The licensed usage of the appliance."
	}, 

	"MQConnectivityEnabled": 
	{
		"Component": "Transport", 
		"ObjectType": "Singleton", 
		"Type": "Boolean", 
		"Options": "True,False", 
		"Default": "False", 
		"About": "Whether the MQConnectivityEndpoint is enabled (whether the process can be run)"
	}, 

	"SNMPEnabled": 
	{
		"Component": "Monitoring", 
		"ObjectType": "Singleton", 
		"Type": "Boolean", 
		"Options": "True,False", 
		"Default": "False", 
		"About": "Whether the SNMP service is enabled"
	},
	
	
	"PreSharedKey":
	{
		"Component": "Server",
		"ObjectType": "Singleton",
		"Type": "String",
		"Default": "",
		"About": "The PSK file used by the Server if one exists"
	},
	
	"TolerateRecoveryInconsistencies": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "Boolean", 
		"Options": "True,False", 
		"Default": "False", 
		"About": "Whether the store tolerates inconsitency during recovery"
	},

	"JSONCommentSettableSingletonEnd": "--- END - settable singleton items ---------------------------------", 
	"JSONCommentSettableCompositePart1": "----- PART 1 - Composite Objects ---------------------------------", 
	"MessageHub": 
	{
		"Component": "Transport", 
		"About": "Message Hub object.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Description", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the Messaging Hub.", 
			"RequiredField": "yes"
		}, 

		"Description": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"About": "A description of the Policy."
		}
	}, 

	"Endpoint": 
	{
		"Component": "Transport", 
		"About": "Endpoint object.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Enabled,Port,Protocol,Interface,SecurityProfile,ConnectionPolicies,MaxMessageSize,MessageHub,MaxSendSize,BatchMessages,Description", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the Endpoint.", 
			"RequiredField": "yes"
		}, 

		"Description": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"About": "A description of the Endpoint."
		}, 

		"Enabled": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "Specify state of Endpoint object."
		}, 

		"Port": 
		{
			"Type": "Number", 
			"Minimum": "1", 
			"Maximum": "65535", 
			"About": "Service port to listen on.", 
			"RequiredField": "yes"
		}, 

		"Protocol": 
		{
			"Type": "String", 
			"Default": "JMS,MQTT", 
			"About": "Comma-delimited list of protocols."
		}, 

		"Interface": 
		{
			"Type": "IPAddress", 
			"Default": "All", 
			"About": "IPv4 or IPv6 address."
		}, 

		"InterfaceName": 
		{
			"Type": "String", 
			"Default": "", 
			"About": "Interface name from configured IP address. Required for HA.", 
			"Settable": "no"
		}, 

		"SecurityProfile": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "32", 
			"About": "Name of the Security profile."
		}, 

		"ConnectionPolicies": 
		{
			"Type": "String", 
			"About": "Comma-delimited list of Connection policy names.", 
			"RequiredField": "yes"
		}, 

		"TopicPolicies": 
		{
			"Type": "String", 
			"About": "Comma-delimited list of Topic policy names.", 
			"MinOneOption": "yes"
		}, 

		"QueuePolicies": 
		{
			"Type": "String", 
			"About": "Comma-delimited list of Queue policy names.", 
			"MinOneOption": "yes"
		}, 

		"SubscriptionPolicies": 
		{
			"Type": "String", 
			"About": "Comma-delimited list of Subceription policy names.", 
			"MinOneOption": "yes"
		}, 

		"MaxMessageSize": 
		{
			"Type": "BufferSize", 
			"Options": "1KB-262144KB", 
			"Default": "1024KB", 
			"Minimum": "1024", 
			"Maximum": "268435456", 
			"About": "Maximum size of message in KB."
		}, 

		"MaxSendSize": 
		{
			"Type": "Number", 
			"Default": "16384", 
			"Minimum": "128", 
			"Maximum": "65536", 
			"About": "The maximum size of a network send."
		}, 

		"BatchMessages": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "Specify whether message can be sent in batches."
		}, 

		"EnableAbout": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Specify whether the about panel will be returned for this endpoint."
		}, 

		"MessageHub": 
		{
			"Type": "String", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters.", 
			"About": "Name of the Message Hub, this Endpoint belongs to.", 
			"RequiredField": "yes"
		}
	}, 

	"CertificateProfile": 
	{
		"Component": "Transport", 
		"About": "Security certificate profile.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Certificate,Key,ExpirationDate", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the security profile.", 
			"RequiredField": "yes"
		}, 

		"Certificate": 
		{
			"Type": "String", 
			"MaxLength": "255", 
			"About": "Certificate file name.", 
			"RequiredField": "yes"
		}, 

		"Key": 
		{
			"Type": "String", 
			"MaxLength": "255", 
			"About": "Private key file name.", 
			"RequiredField": "yes"
		}, 

		"ExpirationDate": 
		{
			"Type": "String", 
			"About": "Expiration date of the certificate.", 
			"Settable": "no"
		}
	}, 

	"SecurityProfile": 
	{
		"Component": "Transport", 
		"About": "Transport level security profile.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,TLSEnabled,MinimumProtocolMethod,UseClientCertificate,UsePasswordAuthentication,Ciphers,CertificateProfile,UseClientCipher,LTPAProfile,OAuthProfile,CRLProfile", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "32", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the security profile.", 
			"RequiredField": "yes"
		}, 

		"TLSEnabled": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "Use TLS encryption."
		}, 

		"MinimumProtocolMethod": 
		{
			"Type": "Enum", 
			"Default": "TLSv1.2", 
			"Options": "TLSv1,TLSv1.1,TLSv1.2", 
			"About": "Lowest level of protocol method permitted when connecting."
		}, 

		"UseClientCertificate": 
		{
			"Alias": "ClientCertificateAuthentication", 
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Client certificate authentication."
		}, 

		"UsePasswordAuthentication": 
		{
			"Alias": "PasswordAuthentication", 
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "User ID and Password Authentication."
		},
		
		"AllowNullPassword": 
        {
            "Type": "Boolean", 
            "Default": "False", 
            "Options": "True,False", 
            "About": "Allow Null Password. Only valid if UsePasswordAuthentication is enabled."
        }, 

		"Ciphers": 
		{
			"Type": "Enum", 
			"Options": "Best,Medium,Fast", 
			"Default": "Fast", 
			"About": "Ciphers."
		}, 

		"CertificateProfile": 
		{
			"Type": "String", 
			"Default": "", 
			"About": "Name of a certificate profile."
		}, 

		"UseClientCipher": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Use Client's Cipher."
		}, 

		"LTPAProfile": 
		{
			"Type": "String", 
			"Default": "", 
			"About": "Name of an LTPA profile."
		}, 

		"OAuthProfile": 
		{
			"Type": "String", 
			"Default": "", 
			"About": "Name of an OAuth profile."
		},
		
		"CRLProfile": 
		{
			"Type": "String", 
			"Default": "", 
			"About": "Name of an CRL profile. Can be defined only when UseClientCertificate is true."
		}
	}, 

	"TrustedCertificate": 
	{
		"Component": "Transport", 
		"About": "Trusted certificate.", 
		"ObjectType": "Composite", 
		"ListObjects": "TrustedCertificate,SecurityProfileName", 
		"TrustedCertificate": 
		{
			"Type": "String", 
			"MaxLength": "255", 
			"About": "Trusted Certificate file name.", 
			"RequiredField": "yes"
		}, 

		"SecurityProfileName": 
		{
			"Type": "Name", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the security profile.", 
			"RequiredField": "yes"
		}
	}, 

	"ClientCertificate": 
	{
		"Component": "Transport", 
		"About": "Client certificate.", 
		"ObjectType": "Composite", 
		"ListObjects": "CertificateName,SecurityProfileName", 
		"CertificateName": 
		{
			"Type": "String", 
			"MaxLength": "255", 
			"About": "Client Certificate file name.", 
			"RequiredField": "yes"
		}, 

		"SecurityProfileName": 
		{
			"Type": "Name", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the security profile.", 
			"RequiredField": "yes"
		}
	}, 

	"LTPAProfile": 
	{
		"Component": "Security", 
		"About": "LTPA Token data.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,KeyFileName", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the LTPA profile.", 
			"RequiredField": "yes"
		}, 

		"KeyFileName": 
		{
			"Type": "String", 
			"MaxLength": "255", 
			"About": "LTPA key file name.", 
			"RequiredField": "yes"
		}, 

		"Password": 
		{
			"Type": "String", 
			"About": "LTPA Password. This field should not be displayed on UI and CLI.", 
			"RequiredField": "yes"
		}
	}, 

	"ConfigurationPolicy": 
	{
		"Component": "Security", 
		"About": "Configuration authorization policy.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Description,ClientAddress,UserID,GroupID,CommonNames,ActionList", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the Policy.", 
			"RequiredField": "yes"
		}, 

		"Description": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"About": "A description of the Policy."
		}, 

		"ClientAddress": 
		{
			"Type": "String", 
			"Default": "",
			"MaxLength": "8192", 
			"MinOneOption": "yes", 
			"Restrictions": "IPv6 address should be enclosed in []", 
			"About": "* OR Comma-delimited list of IPv4 or IPv6 addresses or range, for example 9.3.41.32,9.41.0.0,10.10.1.1-10.10.1.100"
		}, 

		"UserID": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "A valid user name. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"GroupID": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "A valid group name. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"CommonNames": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "Common names specified in the certificate. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"ActionList": 
		{
			"Type": "List", 
			"Options": "Configure,View,Monitor,Manage", 
			"About": "Comma-delimited list of allowed actions that the user can initiate.", 
			"RequiredField": "yes"
		}
	}, 

	"ConnectionPolicy": 
	{
		"Component": "Security", 
		"About": "Connection authorization policy.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Description,ClientID,ClientAddress,UserID,GroupID,CommonNames,Protocol,AllowDurable,AllowPersistentMessages,ExpectedMessageRate,MaxSessionExpiryInterval", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the Policy.", 
			"RequiredField": "yes"
		}, 

		"Description": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"About": "A description of the Policy."
		}, 

		"ClientID": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "Client ID. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"ClientAddress": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "8192", 
			"MinOneOption": "yes", 
			"Restrictions": "IPv6 address should be enclosed in []", 
			"About": "* OR Comma-delimited list of IPv4 or IPv6 addresses or range, for example 9.3.41.32,9.41.0.0,10.10.1.1-10.10.1.100"
		}, 

		"UserID": 
		{
			"Alias": "UserID", 
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "A valid user name. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"GroupID": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "A valid group name. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"CommonNames": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "Common names specified in the certificate. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"Protocol": 
		{
			"Type": "String", 
			"Default": "", 
			"MinOneOption": "yes", 
			"About": "Comma-delimited list of names of the protocol a client can communicate with."
		}, 

		"AllowDurable": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "whether an MQTT client can connect with cleansession=0 and whether a JMS client can create durable subscriptions or durable consumers."
		}, 

		"AllowPersistentMessages": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "whether MQ clients can publish messages with a QoS of 1 or 2 and whether a JMS client can send or publish messages with DeliveryMode set to PERSISTENT."
		},
		
		"ExpectedMessageRate":
		{
			"Type": "Enum",
			"Default": "Default",
			"Options": "Low,Default,High,Max",
			"About": "The mode selected specifies the rate of in-flight messages to be received by client."
		},
		
		"MaxSessionExpiryInterval":
		{
			"Type": "Number",
			"Minimum": "0", 
			"Maximum": "4294967294", 
			"About": "Maximum time in seconds to retain state of a disconnected session."
		}
	}, 

	"Queue": 
	{
		"Component": "Engine", 
		"About": "Message queue.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Description,AllowSend,ConcurrentConsumers,MaxMessages", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No '+', or '#'.", 
			"About": "Name of the queue.", 
			"RequiredField": "yes"
		}, 

		"Description": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"About": "A description of the queue."
		}, 

		"AllowSend": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "Specify if the queue allows new messages to be sent."
		}, 

		"ConcurrentConsumers": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "Specify if the queue allows multiple concurrent consumers."
		}, 

		"MaxMessages": 
		{
			"Type": "Number", 
			"Default": "5000", 
			"Minimum": "1", 
			"Maximum": "20000000", 
			"About": "Maximum message count that can be buffered on the queue."
		}
	}, 

	"AdminSubscription": 
	{
		"Component": "Engine", 
		"About": "Administratively owned subscription.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Description,SubscriptionPolicy,MaxQualityOfService,AddRetainedMsgs,QualityOfServiceFilter,SubOptions", 
		"Name": 
		{
			"Type": "String", 
			"About": "Subscription name in the form /ShareName/TopicFilter.", 
			"RequiredField": "yes"
		}, 

		"Description": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"About": "A description of the subscription."
		}, 

		"SubscriptionPolicy": 
		{
			"Type": "String", 
			"About": "Subscription Policy used to provide properties to the subscription.",
			"MaxLength": "256",
			"RequiredField": "yes"
		},

		"MaxQualityOfService":
		{
			"Type": "Number",
			"Default": "1",
			"Minimum": "0",
			"Maximum": "2",
			"About": "The maximum quality of service at which messages consumed from this subscription will be sent to consuming clients."
		},

		"AddRetainedMsgs":
		{
			"Type": "Boolean",
			"Default": "True",
			"Options": "True,False",
			"About": "Specify whether the subscription is initially populated with matching retained messages."
		},

		"QualityOfServiceFilter":
		{
			"Type": "Enum",
			"Default": "None",
			"Options": "None,QoS=0,QoS>0",
			"About": "Whether to apply a quality of service filter to published messages before adding to this subscription."
		},

		"SubOptions":
		{
			"Type": "String"
		}
	}, 

	"DurableNamespaceAdminSub": 
	{
		"Component": "Engine", 
		"About": "Administratively owned durable namespace subscription.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Description,TopicFilter,SubscriptionPolicy,MaxQualityOfService,AddRetainedMsgs,QualityOfServiceFilter,SubOptions", 
		"Name": 
		{
			"Type": "Name", 
			"About": "Subscription name must contain no slashes.", 
			"RequiredField": "yes"
		},

		"Description": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"About": "A description of the subscription."
		}, 

		"TopicFilter": 
		{
			"Type": "String",
			"About": "Topic filter.",
			"RequiredField": "yes"
		},

		"SubscriptionPolicy": 
		{
			"Type": "String",
			"About": "Subscription Policy used to provide properties to the subscription.",
			"MaxLength": "256",
			"RequiredField": "yes"
		},

		"MaxQualityOfService":
		{
			"Type": "Number",
			"Default": "1",
			"Minimum": "0",
			"Maximum": "2",
			"About": "The maximum quality of service at which messages consumed from this subscription will be sent to consuming clients."
		},

		"AddRetainedMsgs":
		{
			"Type": "Boolean",
			"Default": "True",
			"Options": "True,False",
			"About": "Specify whether the subscription is initially populated with matching retained messages."
		},

		"QualityOfServiceFilter":
		{
			"Type": "Enum",
			"Default": "None",
			"Options": "None,QoS=0,QoS>0",
			"About": "Whether to apply a quality of service filter to published messages before adding to this subscription."
		},

		"SubOptions":
		{
			"Type": "String"
		}
	},

	"NonpersistentAdminSub": 
	{
		"Component": "Engine",
		"About": "Administratively owned nonpersistent subscription.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Description,TopicFilter,TopicPolicy,MaxQualityOfService,AddRetainedMsgs,QualityOfServiceFilter,SubOptions", 
		"Name": 
		{
			"Type": "String", 
			"About": "Subscription name must contain no slashes.", 
			"RequiredField": "yes"
		}, 

		"Description": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"About": "A description of the subscription."
		}, 

		"TopicFilter": 
		{
			"Type": "String",
			"About": "Topic filter.",
			"RequiredField": "yes"
		},

		"TopicPolicy": 
		{
			"Type": "String",
			"About": "Topic Policy used to provide properties to the subscription.",
			"MaxLength": "256",
			"RequiredField": "yes"
		},

		"MaxQualityOfService":
		{
			"Type": "Number",
			"Default": "1",
			"Minimum": "0",
			"Maximum": "2",
			"About": "The maximum quality of service at which messages consumed from this subscription will be sent to consuming clients."
		},

		"AddRetainedMsgs":
		{
			"Type": "Boolean",
			"Default": "True",
			"Options": "True,False",
			"About": "Specify whether the subscription is initially populated with matching retained messages."
		},

		"QualityOfServiceFilter":
		{
			"Type": "Enum",
			"Default": "None",
			"Options": "None,QoS=0,QoS>0",
			"About": "Whether to apply a quality of service filter to published messages before adding to this subscription."
		},

		"SubOptions":
		{
			"Type": "String"
		}
	},

	"LDAP": 
	{
		"Component": "Security", 
		"About": "External LDAP configuration.", 
		"ObjectType": "Composite", 
		"ListObjects": "Enabled,URL,Certificate,IgnoreCase,BaseDN,BindDN,UserSuffix,GroupSuffix,UserIdMap,GroupIdMap,GroupMemberIdMap,EnableCache,CacheTimeout,GroupCacheTimeout,Timeout,MaxConnections,NestedGroupSearch", 
		"Name": 
		{
			"Type": "Name", 
			"Default": "ldapconfig", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the LDAP object", 
			"Settable": "no"
		}, 

		"NestedGroupSearch": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Search all the nested groups for the group membership of a user if true. Otherwise, just search the groups that has the userDN as member"
		}, 

		"URL": 
		{
			"Type": "URL", 
			"MaxLength": "2048", 
			"Options": "ldap://,ldaps://", 
			"About": "URL to connect to the LDAP server, including protocol.", 
			"RequiredField": "yes"
		}, 

		"Certificate": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "255", 
			"About": "Certificate to use if URL uses ssl/tls. This should be the name of a certificate in the trust store."
		}, 

		"IgnoreCase": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "Whether to ignore case or not"
		}, 

		"BaseDN": 
		{
			"Type": "String", 
			"About": "Base distinguished name", 
			"RequiredField": "yes"
		}, 

		"BindDN": 
		{
			"Type": "String", 
			"Default": "", 
			"About": "Distinguished name to use when binding to LDAP"
		}, 

		"BindPassword": 
		{
			"Type": "String", 
			"Default": "", 
			"About": "Password to use when binding to LDAP"
		}, 

		"UserSuffix": 
		{
			"Type": "String", 
			"Default": "", 
			"About": "User DN Suffix"
		}, 

		"GroupSuffix": 
		{
			"Type": "String", 
			"About": "Group DN Suffix", 
			"RequiredField": "yes"
		}, 

		"GroupCacheTimeout": 
		{
			"Type": "Number", 
			"Default": "300", 
			"Minimum": "1", 
			"Maximum": "86400", 
			"About": "Group cache time to live in seconds."
		}, 

		"UserIdMap": 
		{
			"Type": "String", 
			"Default": "", 
			"About": "Property to map a user Id to"
		}, 

		"GroupIdMap": 
		{
			"Type": "String", 
			"Default": "", 
			"About": "Property to map a group Id to"
		}, 

		"GroupMemberIdMap": 
		{
			"Type": "String", 
			"Default": "", 
			"About": "Property to map a group member Id to"
		}, 

		"Timeout": 
		{
			"Type": "Number", 
			"Default": "10", 
			"Minimum": "1", 
			"Maximum": "60", 
			"About": "Timeout for LDAP calls in seconds"
		}, 

		"EnableCache": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "Specify if credentials should be cached."
		}, 

		"CacheTimeout": 
		{
			"Type": "Number", 
			"Default": "10", 
			"Minimum": "1", 
			"Maximum": "60", 
			"About": "Cache time to live in seconds."
		}, 

		"MaxConnections": 
		{
			"Type": "Number", 
			"Default": "10", 
			"Minimum": "1", 
			"Maximum": "100", 
			"About": "Maximum number of connections to the LDAP server"
		}, 

		"Enabled": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "Whether to enable external LDAP or not"
		},
		
        "CheckServerCert":
        {
            "Type": "Enum",
            "Default": "DisableVerify",
            "Options": "DisableVerify,TrustStore,PublicTrust",
            "About": "To verify LDAP server certificate. For new servers, default value will be TrustStore."
        },

		"Verify": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "To verify configuration. If set to True, configuration object will not be persisted in the configuration file."
		}
	}, 

	"HighAvailability": 
	{
		"Component": "HA", 
		"About": "HA configuration object. Only one object is allowed. Delete is not allowed.", 
		"ObjectType": "Composite", 
		"ListObjects": "EnableHA,StartupMode,Group,RemoteDiscoveryNIC,LocalReplicationNIC,LocalDiscoveryNIC,DiscoveryTimeout,HeartbeatTimeout,PreferredPrimary", 
		"Name": 
		{
			"Type": "Name", 
			"Default": "haconfig", 
			"MaxLength": "256", 
			"About": "Hard-coded name. User can not set the name.", 
			"Settable": "no"
		}, 

		"Group": 
		{
			"Type": "String", 
			"MaxLength": "128", 
			"About": "Group name of the HA Pair. Maximum length: 128 characters.", 
			"RequiredField": "yes"
		}, 

		"EnableHA": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Specify if High Availability is enabled."
		},
		
		"StartupMode": 
		{
			"Type": "Enum", 
			"Default": "AutoDetect", 
			"Options": "AutoDetect,StandAlone", 
			"About": "The high availability mode at which the node will start."
		}, 

		"RemoteDiscoveryNIC": 
		{
			"Type": "String",
			"RequiredField": "yes",
			"About": "CommaThe discovery interface on the remote node in the HA Pair."
		}, 

		"LocalReplicationNIC": 
		{
			"Type": "String",
			"RequiredField": "yes", 
			"About": "Hostname, IPv4 or IPv6 address of the replication interface"
		}, 

		"LocalDiscoveryNIC": 
		{
			"Type": "String",
			"RequiredField": "yes", 
			"About": "Hostname, IPv4 or IPv6 address of the discovery interface"
		}, 

		"DiscoveryTimeout": 
		{
			"Type": "Number", 
			"Default": "600", 
			"Minimum": "10", 
			"Maximum": "2147483647", 
			"About": "Time in seconds the node will attempt to discover a HA-Pair node."
		}, 

		"HeartbeatTimeout": 
		{
			"Type": "Number", 
			"Default": "10", 
			"Minimum": "1", 
			"Maximum": "2147483647", 
			"About": "Time in seconds to detect that the other node in the HA-Pair has failed."
		}, 

		"PreferredPrimary": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "When both nodes start in Auto-Detect mode, prefer to configure this node as Primary."
		}, 

		"RemoteDiscoveryPort": 
		{
			"Type": "Number", 
			"Default": "0", 
			"Minimum": "1024", 
			"Maximum": "65535", 
			"About": "The port number used for HA discovery on the remote node in the HA Pair."
		}, 

		"ReplicationPort": 
		{
			"Type": "Number", 
			"Default": "0", 
			"Minimum": "1024", 
			"Maximum": "65535", 
			"About": "The port number used for HA replication on the local node in the HA Pair."
		}, 

		"ExternalReplicationPort": 
		{
			"Type": "Number", 
			"Default": "0", 
			"Minimum": "1024", 
			"Maximum": "65535", 
			"About": "The external port number used for HA replication on the local node in the HA Pair."
		}, 

		"ExternalReplicationNIC": 
		{
			"Type": "String", 
			"Default": "", 
			"About": "Hostname, IPv4 or IPv6 address of the NIC that should be used for HA replication."
		}, 

		"UseSecuredConnections": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Use TLS for discovery and data channels between nodes of an HA Pair."
		},

		"RequireCertificates": 
		{
			"Type": "Boolean", 
			"Options": "True,False", 
			"About": "When using TLS require that the nodes must exchange certificates."
		}
	},

	"MQTTClient": 
	{
		"Component": "Engine", 
		"About": "MQTT Client.", 
		"ObjectType": "Composite", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"About": "MQTT Client ID", 
			"RequiredField": "yes"
		}, 

		"Delete": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Specify if MQTT Client data should be deleted."
		}
	}, 

	"TopicMonitor": 
	{
		"Component": "Engine", 
		"About": "Topic Monitor.", 
		"ObjectType": "Composite", 
		"ListObjects": "TopicString", 
		"UID": 
		{
			"Type": "String", 
			"Default": "autoGenerate", 
			"MaxLength": "32", 
			"About": "Autogenerated ID of the TopicMonitor"
		}, 

		"ObjectIdField": 
		{
			"Type": "String", 
			"Default": "TopicString", 
			"About": "Name of the field used for identification", 
			"Settable": "no"
		}, 

		"TopicString": 
		{
			"Type": "StringBig", 
			"About": "Topic string to be monitored", 
			"RequiredField": "yes"
		}, 

		"Delete": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Specify if TopicMonitor should be deleted."
		}
	}, 

	"ClusterRequestedTopics": 
	{
		"Component": "Engine", 
		"About": "Topics which should be requested from all cluster members.", 
		"ObjectType": "Composite", 
		"ListObjects": "TopicString", 
		"ObjectIdField": 
		{
			"Type": "String", 
			"Default": "TopicString", 
			"About": "Name of the field used for identification", 
			"Settable": "no"
		}, 

		"TopicString": 
		{
			"Type": "StringBig", 
			"About": "Topic to request from all cluster members", 
			"RequiredField": "yes"
		} 
	},

	"Subscription": 
	{
		"Component": "Engine", 
		"About": "Subscription.", 
		"ObjectType": "Composite", 
		"Name": 
		{
			"Type": "Name", 
			"Default": "Subscription", 
			"MaxLength": "256", 
			"About": "Subscription Name", 
			"RequiredField": "yes", 
			"Settable": "no"
		}, 

		"SubscriptionName": 
		{
			"Type": "String", 
			"About": "Subscription String", 
			"RequiredField": "yes"
		}, 

		"ClientID": 
		{
			"Type": "String", 
			"MaxLength": "1024", 
			"About": "Client ID", 
			"RequiredField": "yes"
		}, 

		"Delete": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Specify if MQTT Client data should be deleted."
		}
	}, 

	"OAuthProfile": 
	{
		"Component": "Security", 
		"About": "OAuth Token data.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,ResourceURL,AuthKey,UserInfoURL,UserInfoKey,GroupInfoKey,KeyFileName,TokenSendMethod,CheckServerCert,GroupDelimiter", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the OAuth profile.", 
			"RequiredField": "yes"
		}, 

		"ResourceURL": 
		{
			"Type": "URL", 
			"MaxLength": "2048", 
			"Options": "http://,https://", 
			"About": "URL to validate access token", 
			"RequiredField": "yes"
		}, 

		"UserName": 
		{
			"Type": "String",
			"Default": "", 
			"MaxLength": "1024",  
			"About": "User name for Basic Authentication to the OAuth server.", 
			"RequiredField": "no"
		},
		
		"UserPassword": 
		{
			"Type": "String",
			"Default": "", 
			"MaxLength": "1024",  
			"About": "User password for Basic Authentication to the OAuth server.", 
			"RequiredField": "no"
		},

		"KeyFileName": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "255", 
			"About": "OAuth server certificate file name"
		}, 

		"AuthKey": 
		{
			"Type": "Name", 
			"Default": "access_token", 
			"MaxLength": "256", 
			"About": "Token name property to be used in ResourceURL to validate token. UTF8 string. No leading or trailing space. No control characters or comma."
		}, 

		"UserInfoURL": 
		{
			"Type": "URL", 
			"MaxLength": "2048", 
			"Options": "http://,https://", 
			"About": "URL to retrieve the User Info."
		}, 

		"UserInfoKey": 
		{
			"Type": "String",
			"Default": "", 
			"MaxLength": "256", 
			"About": "Username property in the response for user info request. UTF8 string. No leading or trailing space. No control characters or comma."
		}, 

		"GroupInfoKey": 
		{
			"Type": "String",
			"Default": "", 
			"MaxLength": "256", 
			"About": "Response for user info request can also include group information. This configuration item specifies Group name property in the response for user info request. UTF8 string. No leading or trailing space. No control characters or comma."
		},

		"TokenSendMethod":
		{
			"Type": "Enum", 
			"Options": "URLParam,HTTPHeader,HTTPPost", 
			"Default": "URLParam", 
			"About": "Determines how Access Token is included in request to Resource URL."
		},
		
		"CheckServerCert":
		{
			"Type": "Enum",
			"Default": "DisableVerify",
			"Options": "DisableVerify,TrustStore,PublicTrust",
			"About": "To verify OAuth server certificate."
		},
		
		"GroupDelimiter":
		{
			"Type": "String",
			"Default": ",",
			"MaxLength": "1",
			"About": "Group name property returned by user info request may include multiple groups separated by a comma, space, hash etc. This configuration item specifies character used as delimiter. No control characters."
		}
	}, 

	"Protocol": 
	{
		"Component": "Protocol", 
		"About": "Protocol Information", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Capabilities", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256",
			"About": "Protocol Name", 
			"RequiredField": "yes"
		}, 

		"Capabilities": 
		{
			"Type": "Number", 
			"Default": "0", 
			"About": "Protocol Capabilities"
		}
	}, 

	"Plugin": 
	{
		"Component": "Protocol", 
		"About": "Protocol Plug-in Information", 
		"ObjectType": "Composite", 
		"ListObjects": "Name", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"About": "Protocol Plug-in Name", 
			"RequiredField": "yes"
		}, 

		"File": 
		{
			"Type": "String", 
			"MaxLength": "255", 
			"About": "The plug-in zip file name."
		}, 

		"PropertiesFile": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "255", 
			"About": "The plug-in property file name."
		}
	}, 

	"ClientSet": 
	{
		"Component": "Server", 
		"About": "Client set move.", 
		"ObjectType": "Composite", 
		"File": 
		{
			"Type": "String", 
			"MaxLength": "255", 
			"About": "File name for import/export."
		}, 

		"ClientID": 
		{
			"Type": "Regex", 
			"Default": "", 
			"MaxLength": "1024", 
			"About": "Regular expression for ClientID matching."
		}, 

		"Retain": 
		{
			"Type": "Regex", 
			"Default": "", 
			"About": "Regular expression for topics to delete RETAINed messages from."
		}, 

		"Replace": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "Replace states of Clients that already exist"
		}, 

		"Delete": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Specify if objects need to be deleted."
		}, 

		"Action": 
		{
			"Type": "Enum", 
			"Options": "delete,import,export", 
			"About": "Action being performed based on ClientSet"
		}
	}, 

	"ClusterMembership": 
	{
		"Component": "Cluster", 
		"Callbacks": "Cluster,Transport", 
		"About": "Cluster membership configuration object. Only one object is allowed. Delete is not allowed.", 
		"ObjectType": "Composite", 
		"ListObjects": "EnableClusterMembership,ClusterName,UseMulticastDiscovery,MulticastDiscoveryTTL,DiscoveryServerList,ControlAddress,ControlPort,ControlExternalAddress,ControlExternalPort,MessagingAddress,MessagingPort,MessagingExternalAddress,MessagingExternalPort,MessagingUseTLS,DiscoveryPort,DiscoveryTime,RequireCertificates", 
		"Name": 
		{
			"Type": "Name", 
			"Default": "cluster", 
			"About": "Hard-coded name. User can not set the name.", 
			"Settable": "no", 
			"MaxLength": "256"
		}, 

		"EnableClusterMembership": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Specify if Cluster Membership is enabled."
		},
		
		"ClusterName": 
		{
			"Type": "String", 
			"About": "Name of the Cluster. Maximum length: 256 characters. Required if EnableClusterMembership is True.", 
			"Default": "", 
			"MaxLength": "256", 
			"RequiredField": "yes"
		}, 

		"UseMulticastDiscovery": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "Specify if server automatically joins any cluster that has the same ClusterName."
		}, 

		"MulticastDiscoveryTTL": 
		{
			"Type": "Number", 
			"Default": "1", 
			"Minimum": "1", 
			"Maximum": "256", 
			"About": "When UseMulticastDiscovery is true, the number of routers (hops) that multicast traffic is allowed to pass through."
		}, 

		"DiscoveryServerList": 
		{
			"Type": "String", 
			"Default": null, 
			"About": "Comma-delimited list of members belonging to the cluster this server wants to join. Required if UseMulticastDiscovery is False.", 
			"MaxLength": "65535"
		}, 

		"ControlAddress": 
		{
			"Type": "IPAddress", 
			"About": "The IP Address of the control interface. Required if EnableClusterMembership is True. TODO: Also save interface name (e.g. eth0)?", 
			"RequiredField": "yes"
		}, 

		"ControlPort": 
		{
			"Type": "Number", 
			"Default": "9104", 
			"Minimum": "1", 
			"Maximum": "65535", 
			"About": "The port number to use for the ControlInterface. Though required, does not need to be specified because there is a default."
		}, 

		"ControlExternalAddress": 
		{
			"Type": "String", 
			"Default": null, 
			"About": "The external IP Address or Hostname of the control interface if different from ControlAddress."
		}, 

		"ControlExternalPort": 
		{
			"Type": "Number", 
			"Minimum": "1", 
			"Maximum": "65535", 
			"About": "The external port number to use for the ControlExternalAddress."
		}, 

		"MessagingAddress": 
		{
			"Type": "IPAddress", 
			"Default": null, 
			"About": "The IP Address of the messaging channel, if different from the ControlAddress."
		}, 

		"MessagingPort": 
		{
			"Type": "Number", 
			"Default": "9105", 
			"Minimum": "1", 
			"Maximum": "65535", 
			"About": "The port number to use for the MessagingInterface, must be different from the ControlPort."
		}, 

		"MessagingExternalAddress": 
		{
			"Type": "String", 
			"Default": null, 
			"About": "The external IP Address or Hostname of the messaging channel if different from MessagingAddress."
		}, 

		"MessagingExternalPort": 
		{
			"Type": "Number", 
			"Minimum": "1", 
			"Maximum": "65535", 
			"About": "The external port number to use for the MessagingExternalAddress."
		}, 

		"MessagingUseTLS": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Specify if the messaging channel should use TLS."
		}, 

		"DiscoveryPort": 
		{
			"Type": "Number", 
			"Default": "9106", 
			"Minimum": "1", 
			"Maximum": "65535", 
			"About": "Port number used for multicast discovery. This port must be identical for all members of the cluster."
		}, 

		"DiscoveryTime": 
		{
			"Type": "Number", 
			"Minimum": "1", 
			"Maximum": "2147483647", 
			"Default": "10", 
			"About": "The time, in seconds, that Cluster spends during server start up to discover other servers in the cluster and get updated information from them."
		},
		
		"RequireCertificates": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Specify if the messaging channel should use TLS."
		} 
	}, 

	"AdminEndpoint": 
	{
		"Component": "Transport", 
		"About": "Admin Endpoint object. This object can not be deleted.", 
		"ObjectType": "Composite", 
		"ListObjects": "Description,Interface,Port,SecurityProfile,ConfigurationPolicies", 
		"Name": 
		{
			"Type": "Name", 
			"Default": "AdminEndpoint", 
			"About": "Name of the Endpoint.", 
			"Settable": "no"
		}, 

		"Description": 
		{
			"Type": "String", 
			"Default": "Admin Endpoint used for processing administrative and monitoring requests from clients using REST API.", 
			"About": "Admin Endpoint used for processing administrative and monitoring requests from clients using REST API.", 
			"Settable": "no"
		}, 

		"Port": 
		{
			"Type": "Number", 
			"Default": "9089", 
			"Minimum": "2", 
			"Maximum": "65535", 
			"About": "Admin Endpoint port to listen on."
		}, 

		"Interface": 
		{
			"Type": "IPAddress", 
			"Default": "All", 
			"About": "IPv4 or IPv6 address."
		}, 

		"SecurityProfile": 
		{
			"Type": "String", 
			"Default": "AdminDefaultSecProfile", 
			"MaxLength": "32", 
			"About": "Name of the Security profile."
		}, 

		"ConfigurationPolicies": 
		{
			"Type": "String", 
			"Default": "AdminDefaultConfigPolicy", 
			"About": "Comma-delimited list of Configuration policy names. AdminEndpoint can have maximum of 100 configuration policies."
		}
	}, 

	"QueueManagerConnection": 
	{
		"Component": "MQConnectivity", 
		"About": "MQConnectivity Queue Manager connection object", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,QueueManagerName,ConnectionName,SSLCipherSpec,ChannelName", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the Queue Manager Connection object", 
			"RequiredField": "yes"
		}, 

		"Force": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Force delete or update of the Queue Manager Connection. This might cause the XA IDs to be orphaned."
		}, 

		"QueueManagerName": 
		{
			"Type": "String", 
			"MaxLength": "48", 
			"Restrictions": "Up to 48 single byte characters. Upper and lower case A-Z, 0-9, and . / _ %. First letter must be a letter", 
			"About": "The Queue Manager to connect to", 
			"RequiredField": "yes"
		}, 

		"ConnectionName": 
		{
			"Type": "String", 
			"MaxLength": "1024", 
			"Restrictions": "Must be in the format of an IP Address or IP Address(Port). Examples: 243.0.77.01, 243.0.77.2(1111)", 
			"About": "Comma delimited list of Connections",
			"RequiredField": "yes"
		}, 

		"ChannelName": 
		{
			"Type": "String", 
			"MaxLength": "20", 
			"Restrictions": "Up to 20 single byte characters. Upper and lower case A-Z, 0-9, and . / _ %. First letter must be a letter", 
			"About": "The Channel to use while connecting to the MQ Queue Manager", 
			"RequiredField": "yes"
		}, 

		"SSLCipherSpec": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "32", 
			"Restrictions": "The value is a string with a maximum length of 32 characters", 
			"About": "SSL Cipher specification."
		}, 

		"ChannelUserName": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"Restrictions": "This value must either be empty, or occur with a channel user password as well", 
			"About": "The username to provide to MQ Connectivity Channel Authentication"
		}, 

		"ChannelUserPassword": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "256", 
			"Restrictions": "This value must either be empty, or occur with a channel user name as well", 
			"About": "The password to provide to MQ Connectivity Channel Authentication, will be encrypted in the admin store"
		},
		
		"Verify": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "To verify configuration. If set to True, configuration object will not be persisted in the configuration file."
		}
	}, 

	"DestinationMappingRule": 
	{
		"Component": "MQConnectivity", 
		"About": "MQConnectivity Destination Mapping Rule", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,QueueManagerConnection,RuleType,Source,Destination,MaxMessages,Enabled,RetainedMessages,SubLevel", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the Destination Mapping Rule object", 
			"RequiredField": "yes"
		}, 

		"QueueManagerConnection": 
		{
			"Type": "String", 
			"Restrictions": "Name of a QueueManagerConnection", 
			"About": "Comma delimited list of Queue Manager Connection objects",
			"RequiredField": "yes"
		}, 

		"RuleType": 
		{
			"Type": "Number", 
			"Options": "1-14", 
			"Minimum": "1", 
			"Maximum": "14", 
			"About": "The mapping rule type", 
			"RequiredField": "yes"
		}, 

		"Source": 
		{
			"Type": "StringBig", 
			"MaxLength": "65535", 
			"Restrictions": "Valid MQ Queue name, or valid topic string with no # or + wildcards", 
			"About": "The source of the message. Max 65535 characters.", 
			"RequiredField": "yes"
		}, 

		"Destination": 
		{
			"Type": "StringBig", 
			"MaxLength": "65535", 
			"Restrictions": "Valid MQ Queue name, or valid topic string with no # or + wildcards", 
			"About": "The destination of the message. Max 65535 characters.", 
			"RequiredField": "yes"
		}, 

		"MaxMessages": 
		{
			"Type": "Number", 
			"Default": "5000", 
			"Minimum": "1", 
			"Maximum": "20000000", 
			"About": "Maximum message count that can be buffered on the destination."
		}, 

		"Enabled": 
		{
			"Type": "Boolean", 
			"Default": "True", 
			"Options": "True,False", 
			"About": "Specify state of the rule"
		}, 

		"RetainedMessages": 
		{
			"Type": "Enum", 
			"Default": "None", 
			"Options": "None,All", 
			"About": "Specify which messages are forwarded to a topic as retained messages."
		},

		"SubLevel": 
		{
			"Type": "Number", 
			"Minimum": "0", 
			"Maximum": "9", 
			"About": "SubLevel at which to subscribe to mq topic or topic subtree."
		}
	}, 

	"TopicPolicy": 
	{
		"Component": "Security", 
		"About": "Messaging authorization policy for Topic.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Description,ClientID,ClientAddress,UserID,GroupID,CommonNames,Protocol,Topic,ActionList,MaxMessages,MaxMessagesBehavior,MaxMessageTimeToLive,DisconnectedClientNotification,DefaultSelectionRule", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the Policy.", 
			"RequiredField": "yes"
		}, 

		"Description": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"About": "A description of the Policy."
		}, 

		"ClientID": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "Client ID. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"ClientAddress": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "8192", 
			"MinOneOption": "yes", 
			"Restrictions": "IPv6 address should be enclosed in []", 
			"About": "* OR Comma-delimited list of IPv4 or IPv6 addresses or range, for example 9.3.41.32,9.41.0.0,10.10.1.1-10.10.1.100"
		}, 

		"UserID": 
		{
			"Alias": "UserID", 
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "A valid user name. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"GroupID": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "A valid group name. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"CommonNames": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "Common names specified in the certificate. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"Protocol": 
		{
			"Type": "String", 
			"Default": "", 
			"MinOneOption": "yes", 
			"About": "Comma-delimited list of names of the protocol a client can communicate with."
		}, 

		"Topic": 
		{
			"Type": "String", 
			"MaxLength": "1024", 
			"About": "Topic string. Asterisk matches 0 or more character rule for matching is allowed.", 
			"RequiredField": "yes"
		}, 

		"ActionList": 
		{
			"Type": "List", 
			"Options": "Publish,Subscribe", 
			"About": "Comma-delimited list of allowed actions.", 
			"RequiredField": "yes"
		}, 

		"MaxMessages": 
		{
			"Type": "Number", 
			"Default": "5000", 
			"Minimum": "1", 
			"Maximum": "20000000", 
			"About": "Maximum message count that a validated client can publish or subscribe."
		}, 

		"MaxMessagesBehavior": 
		{
			"Type": "Enum", 
			"Default": "RejectNewMessages", 
			"Options": "RejectNewMessages,DiscardOldMessages", 
			"About": "Specifies the messaging behavior when the buffer for a subscription is full (i.e number of messages exceeds MaxMessages count)."
		}, 

		"MaxMessageTimeToLive": 
		{
			"Type": "String", 
			"Default": "unlimited", 
			"Options": "unlimited, 1-2147483647", 
			"About": "The maximum number of seconds messages put/published under the policy can live for. unlimited means there is no maximum, use whatever the publisher specified."
		}, 

		"DisconnectedClientNotification": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Specify if a notification message needs to be published for a disconnected client on arrival of a message."
		},

		"DefaultSelectionRule":
		{
			"Type": "Selector",
			"MaxLength": 4096,
			"About": "Default selection rule to apply to subscriptions using this policy."
		}
	}, 

	"QueuePolicy": 
	{
		"Component": "Security", 
		"About": "Messaging authorization policy for Queues.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Description,ClientID,ClientAddress,UserID,GroupID,CommonNames,Protocol,Queue,ActionList,MaxMessageTimeToLive,DisconnectedClientNotification", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the Policy.", 
			"RequiredField": "yes"
		}, 

		"Description": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"About": "A description of the Policy."
		}, 

		"ClientID": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "Client ID. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"ClientAddress": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "8192", 
			"MinOneOption": "yes", 
			"Restrictions": "IPv6 address should be enclosed in []", 
			"About": "* OR Comma-delimited list of IPv4 or IPv6 addresses or range, for example 9.3.41.32,9.41.0.0,10.10.1.1-10.10.1.100"
		}, 

		"UserID": 
		{
			"Alias": "UserID", 
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "A valid user name. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"GroupID": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "A valid group name. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"CommonNames": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "Common names specified in the certificate. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"Protocol": 
		{
			"Type": "String", 
			"Default": "", 
			"MinOneOption": "yes", 
			"About": "Comma-delimited list of names of the protocol a client can communicate with."
		}, 

		"Queue": 
		{
			"Type": "String", 
			"MaxLength": "1024", 
			"About": "Name of the Queue. Asterisk matches 0 or more character rule for matching is allowed.", 
			"RequiredField": "yes"
		}, 

		"ActionList": 
		{
			"Type": "List", 
			"Options": "Send,Receive,Browse", 
			"About": "Comma-delimited list of allowed actions.", 
			"RequiredField": "yes"
		}, 

		"MaxMessageTimeToLive": 
		{
			"Type": "String", 
			"Default": "unlimited", 
			"Options": "unlimited, 1-2147483647", 
			"About": "The maximum number of seconds messages put/published under the policy can live for. unlimited means there is no maximum, use whatever the publisher specified."
		}
	}, 

	"SubscriptionPolicy": 
	{
		"Component": "Security", 
		"About": "Messaging authorization policy for Subscriptions.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,Description,ClientID,ClientAddress,UserID,GroupID,CommonNames,Protocol,Subscription,ActionList,MaxMessages,MaxMessagesBehavior,MaxMessageTimeToLive,DisconnectedClientNotification,DefaultSelectionRule", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the Policy.", 
			"RequiredField": "yes"
		}, 

		"Description": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"About": "A description of the Policy."
		}, 

		"ClientID": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "Client ID. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"ClientAddress": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "8192", 
			"MinOneOption": "yes", 
			"Restrictions": "IPv6 address should be enclosed in []", 
			"About": "* OR Comma-delimited list of IPv4 or IPv6 addresses or range, for example 9.3.41.32,9.41.0.0,10.10.1.1-10.10.1.100"
		}, 

		"UserID": 
		{
			"Alias": "UserID", 
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "A valid user name. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"GroupID": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "A valid group name. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"CommonNames": 
		{
			"Type": "String", 
			"Default": "", 
			"MaxLength": "1024", 
			"MinOneOption": "yes", 
			"About": "Common names specified in the certificate. Asterisk matches 0 or more character rule for matching is allowed."
		}, 

		"Protocol": 
		{
			"Type": "String", 
			"Default": "", 
			"MinOneOption": "yes", 
			"About": "Comma-delimited list of names of the protocol a client can communicate with."
		}, 

		"Subscription": 
		{
			"Type": "String", 
			"MaxLength": "1024", 
			"About": "Name of the subscription. Asterisk matches 0 or more character rule for matching is allowed.", 
			"RequiredField": "yes"
		}, 

		"ActionList": 
		{
			"Type": "List", 
			"Options": "Receive,Control", 
			"About": "Comma-delimited list of allowed actions.", 
			"RequiredField": "yes"
		}, 

		"MaxMessages": 
		{
			"Type": "Number", 
			"Default": "5000", 
			"Minimum": "1", 
			"Maximum": "20000000", 
			"About": "Maximum message count that a validated client can publish or subscribe."
		}, 

		"MaxMessagesBehavior": 
		{
			"Type": "Enum", 
			"Default": "RejectNewMessages", 
			"Options": "RejectNewMessages,DiscardOldMessages", 
			"About": "Specifies the messaging behavior when the buffer for a subscription is full (i.e number of messages exceeds MaxMessages count)."
		},

		"DefaultSelectionRule":
		{
			"Type": "Selector",
			"MaxLength": 4096,
			"About": "Default selection rule to apply to subscriptions using this policy."
		}
	}, 

	"JSONCommentSettableCompositePart2": "--- PART 2 - Additional configuration objects or items used appliance model --", 
	"TraceModuleLocation": 
	{
		"Component": "Server", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Default": "0", 
		"Type": "String", 
		"About": "Full path of an installed trace module."
	}, 

	"TraceModuleOptions": 
	{
		"Component": "Server", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "String", 
		"About": "Full path of an installed trace module options file."
	}, 

	"TraceBackup": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "Number", 
		"Minimum": "0", 
		"Maximum": "2", 
		"Default": "1", 
		"About": "Trace backup mode."
	}, 

	"TraceBackupCount": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "Number", 
		"Minimum": "1", 
		"Maximum": "100", 
		"Default": "3", 
		"About": "The maximum number of trace backup files."
	}, 

	"TraceBackupDestination": 
	{
		"Component": "Server", 
		"ObjectType": "Singleton", 
		"Type": "String", 
		"MaxLength": "2048", 
		"Options": "ftp://,scp://", 
		"Default": "", 
		"About": "Trace backup destination URL."
	}, 

	"WebUIPort": 
	{
		"Component": "Server", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "Number", 
		"Minimum": "1", 
		"Maximum": "65535", 
		"Default": "9087", 
		"About": "The Port to access IMA WebUI.", 
		"Settable": "no"
	}, 

	"WebUIHost": 
	{
		"Component": "Server", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "IPAddress", 
		"Default": "all", 
		"About": "IPv4 or IPv6 address.", 
		"Settable": "no"
	}, 

	"SSHHost": 
	{
		"Component": "Server", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "IPAddress", 
		"Default": "all", 
		"About": "IPv4 or IPv6 address.", 
		"Settable": "no"
	}, 

	"PluginServer": 
	{
		"Component": "Protocol", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "IPAddress", 
		"Default": "127.0.0.1", 
		"About": "IPv4 or IPv6 address or name of the host to access Plug-in Server."
	}, 

	"PluginPort": 
	{
		"Component": "Protocol", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "Number", 
		"Minimum": "1", 
		"Maximum": "65535", 
		"Default": "9103", 
		"About": "The Port to access Plug-in Server."
	}, 

	"PluginDebugServer": 
	{
		"Component": "Protocol", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "IPAddress", 
		"Default": "", 
		"About": "IPv4 or IPv6 address to access Remote Debugger of Plug-in Server."
	}, 

	"PluginDebugPort": 
	{
		"Component": "Protocol", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "Number", 
		"Minimum": "0", 
		"Maximum": "65535", 
		"Default": "0", 
		"About": "The Port to access Remote Debugger of Plug-in Server."
	}, 

	"PluginMaxHeapSize": 
	{
		"Component": "Protocol", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "Number", 
		"Minimum": "64", 
		"Maximum": "65536", 
		"Default": "512", 
		"About": "Plug-in Server Maximum Heap Size (in Megabytes)."
	}, 

	"PluginVMArgs": 
	{
		"Component": "Protocol", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "String", 
		"Default": "", 
		"About": "Runtime parameters for Plug-in Server JVM."
	}, 

	"DisableInterfaceMapping": 
	{
		"Component": "Server", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "Boolean", 
		"Default": "False", 
		"About": "Auto map Endpoint Interface from InterfaceName on Standby node."
	}, 

	"GranuleSizeBytes": 
	{
		"Component": "Store", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "Number", 
		"Default": "1024", 
		"Minimum": "128", 
		"Maximum": "262144", 
		"About": "Size in bytes of a block size in a regular Generation."
	}, 

	"MgmtMemPercent": 
	{
		"Component": "Store", 
		"Platform": "Appliance", 
		"ObjectType": "Singleton", 
		"Type": "Number", 
		"Options": "50", 
		"Minimum": "1", 
		"Maximum": "100", 
		"Restriction": "Allowed in maintenance mode", 
		"About": "Management Generation size as a percent of Store memory.", 
		"Settable": "no"
	}, 

	"Syslog": 
	{
		"Component": "Server", 
		"About": "Specifies syslog server location for log files.", 
		"ObjectType": "Composite", 
		"ListObjects": "Enabled,Host,Port,Protocol", 
		"Name": 
		{
			"Type": "Name", 
			"Default": "Syslog", 
			"About": "Syslog", 
			"Settable": "no"
		}, 

		"Enabled": 
		{
			"Type": "Boolean", 
			"Default": "False", 
			"Options": "True,False", 
			"About": "Specified whether to connect to the Syslog server or not"
		}, 

		"Host": 
		{
			"Type": "IPAddress", 
			"Default": "127.0.0.1", 
			"MaxLength": "255", 
			"About": "IP address of the syslog server."
		}, 

		"Port": 
		{
			"Type": "Number", 
			"Minimum": "1", 
			"Maximum": "65535", 
			"Default": "514", 
			"About": "Port number of the syslog server."
		}, 

		"Protocol": 
		{
			"Type": "Enum", 
			"Default": "tcp", 
			"Options": "tcp,udp", 
			"About": "Protocol used by syslog server."
		}
	}, 

	"LogLocation": 
	{
		"Component": "Server", 
		"About": "Log location.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,LocationType,Destination,Facility", 
		"Name": 
		{
			"Type": "Enum", 
			"Options": "DefaultLog,ConnectionLog,AdminLog,MQConnectivityLog,SecurityLog", 
			"About": "Log name", 
			"RequiredField": "yes"
		}, 

		"LocationType": 
		{
			"Type": "Enum", 
			"Options": "file,syslog", 
			"RequiredField": "yes", 
			"About": "Type of the logging destination."
		}, 

		"Destination": 
		{
			"Type": "String", 
			"MaxLength": "255", 
			"RequiredField": "yes", 
			"About": "File logging destination (local path, \"stdout\" or \"stderr\")."
		}
	},
	
	"CRLProfile": 
	{
		"Component": "Transport", 
		"About": "Security CRL profile. This can be associated with a SecurityProfile with UseClientCertificate set to true.", 
		"ObjectType": "Composite", 
		"ListObjects": "Name,CRLSource,UpdateInterval,RevalidateConnection", 
		"Name": 
		{
			"Type": "Name", 
			"MaxLength": "256", 
			"Restrictions": "No leading or trailing space. No control characters or comma.", 
			"About": "Name of the CRL profile.", 
			"RequiredField": "yes"
		}, 

		"CRLSource": 
		{
			"Type": "String", 
			"MaxLength": "2048", 
			"About": "Source of CRL file. Could be an uploaded CRL file or a URL String", 
			"RequiredField": "yes"
		}, 

		"UpdateInterval": 
		{
			"Type": "Number", 
			"Minimum": "5", 
			"Maximum": "43200", 
			"Default": "60",
			"About": "Interval in minutes to download a new copy of CRL from if CRLSource is an URL."
		}, 

		"RevalidateConnection": 
		{
			"Type": "Boolean",
			"Default": "False", 
			"Options": "True,False", 
			"About": "Is set to true, all connections authorized using the security profile will be revalidated when a new CRL file is uploaded or downloaded from spceified URL."
		}
	},
	
	"MQCertificate": 
	{
		"Component": "MQConnectivity", 
		"About": "MQ Client certificate.", 
		"ObjectType": "Composite", 
		"ListObjects": "CertificateName,SecurityProfileName",
		"Name": 
		{
			"Type": "Name", 
			"Default": "MQCert", 
			"About": "Fixed name for configurting MQCertificate ", 
			"Settable": "no"
		},
                 
		"MQSSLKey": 
		{
			"Type": "String", 
			"About": "Specifies the name of the key database file.", 
			"RequiredField": "yes"
		}, 

		"MQStashPassword": 
		{
			"Type": "String", 
			"About": "Specifies the name of the password stash file.", 
			"RequiredField": "yes"
		}
	},
	
	"ResourceSetDescriptor":
	{
		"Component": "Engine",
		"About": "Statistics for resource groups determined by ClientID and/or Topic.",
		"ObjectType": "Composite",
		"ListObjects": "ClientID,Topic",
		"Name":
		{
			"Type": "Name",
			"Default": "ResourceSetDescriptor",
			"Settable": "no",
			"About": "Fixed name for resource set descriptor."
		},
		
		"ClientID": 
		{
			"Type": "RegexSub", 
			"Default": "", 
			"MaxLength": "256", 
			"MinOneOption": "yes", 
			"About": "Client ID to match via provided regex."
		},
		
		"Topic": 
		{
			"Type": "RegexSub",
			"Default": "",
			"MaxLength": "256",
			"MinOneOption": "yes",
			"About": "Topic to match via provided regex."
		} 
	}
}
